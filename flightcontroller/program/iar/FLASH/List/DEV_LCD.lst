###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         31/Aug/2018  16:56:47
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\lib\LPLD\DEV\DEV_LCD.c
#    Command line =  
#        -f C:\Users\XSK199~1\AppData\Local\Temp\EW50AE.tmp
#        (C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\lib\LPLD\DEV\DEV_LCD.c
#        -D K60 -D USE_K60F15 -D ARM_MATH_CM4 -D __FPU_PRESENT=1 -D
#        __FPU_USED=1 -lCN
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\FLASH\List
#        -lB
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\FLASH\List
#        -o
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config
#        D:\iar\arm\inc\c\DLib_Config_Full.h -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\app\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\app\Sensor\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\CPU\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\common\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\HW\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\DEV\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\FatFs\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\FatFs\option\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\common\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\driver\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\descriptor\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\class\
#        -On --c++ -I D:\iar\arm\CMSIS\Core\Include\ -I
#        D:\iar\arm\CMSIS\DSP\Include\ -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\FLASH\List\DEV_LCD.lst
#    Object file  =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\FLASH\Obj\DEV_LCD.o
#
###############################################################################

C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\lib\LPLD\DEV\DEV_LCD.c
      1          /**
      2           * @file DEV_LCD.c
      3           * @version 0.2[By LPLD]
      4           * @date 2013-10-21
      5           * @brief LCD设备驱动程序
      6           *
      7           * 更改建议:可根据实际硬件修改
      8           *
      9           * 版权所有:北京拉普兰德电子技术有限公司
     10           * http://www.lpld.cn
     11           * mail:support@lpld.cn
     12           *
     13           * @par
     14           * 本代码由拉普兰德[LPLD]开发并维护，并向所有使用者开放源代码。
     15           * 开发者可以随意修使用或改源代码。但本段及以上注释应予以保留。
     16           * 不得更改或删除原版权所有者姓名，二次开发者可以加注二次版权所有者。
     17           * 但应在遵守此协议的基础上，开放源代码、不得出售代码本身。
     18           * 拉普兰德不负责由于使用本代码所带来的任何事故、法律责任或相关不良影响。
     19           * 拉普兰德无义务解释、说明本代码的具体原理、功能、实现方法。
     20           * 除非拉普兰德[LPLD]授权，开发者不得将本代码用于商业产品。
     21           *
     22           * 0.2-2013-10-21 优化初始化函数、字符串数字显示函数
     23           */
     24          #include "DEV_LCD.h"
     25          #include "Font_ASC.h"

   \                                 In section .rodata, align 4
   \   static __absolute unsigned char const asc2_1608[95][16]
   \                     asc2_1608:
   \        0x0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 8, 8, 8, 8
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x08    
   \              0x08 0x08    
   \              0x08         
   \       0x17   0x08 0x08          DC8 8, 8, 8, 0, 0, 24, 24, 0, 0, 0, 72, 108, 36, 18, 0, 0, 0, 0, 0, 0
   \              0x08 0x00    
   \              0x00 0x18    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x48 0x6C    
   \              0x24 0x12    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0x2B   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 36, 36, 36, 127, 18, 18, 18, 127, 18, 18
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x24 0x24    
   \              0x24 0x7F    
   \              0x12 0x12    
   \              0x12 0x7F    
   \              0x12 0x12    
   \       0x3D   0x12 0x00          DC8 18, 0, 0, 0, 0, 8, 28, 42, 42, 10, 12, 24, 40, 40, 42, 42, 28, 8, 8
   \              0x00 0x00    
   \              0x00 0x08    
   \              0x1C 0x2A    
   \              0x2A 0x0A    
   \              0x0C 0x18    
   \              0x28 0x28    
   \              0x2A 0x2A    
   \              0x1C 0x08    
   \              0x08         
   \       0x50   0x00 0x00          DC8 0, 0, 0, 34, 37, 21, 21, 21, 42, 88, 84, 84, 84, 34, 0, 0, 0, 0, 0
   \              0x00 0x22    
   \              0x25 0x15    
   \              0x15 0x15    
   \              0x2A 0x58    
   \              0x54 0x54    
   \              0x54 0x22    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0x63   0x0C 0x12          DC8 12, 18, 18, 18, 10, 118, 37, 41, 17, 145, 110, 0, 0, 0, 6, 6, 4, 3
   \              0x12 0x12    
   \              0x0A 0x76    
   \              0x25 0x29    
   \              0x11 0x91    
   \              0x6E 0x00    
   \              0x00 0x00    
   \              0x06 0x06    
   \              0x04 0x03    
   \       0x75   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 64, 32, 16, 16, 8, 8, 8, 8, 8
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x40 0x20    
   \              0x10 0x10    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x08         
   \       0x8A   0x08 0x10          DC8 8, 16, 16, 32, 64, 0, 0, 2, 4, 8, 8, 16, 16, 16, 16, 16, 16, 8, 8
   \              0x10 0x20    
   \              0x40 0x00    
   \              0x00 0x02    
   \              0x04 0x08    
   \              0x08 0x10    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10 0x08    
   \              0x08         
   \       0x9D   0x04 0x02          DC8 4, 2, 0, 0, 0, 0, 0, 8, 8, 107, 28, 28, 107, 8, 8, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x08    
   \              0x08 0x6B    
   \              0x1C 0x1C    
   \              0x6B 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \       0xB2   0x00 0x00          DC8 0, 0, 8, 8, 8, 8, 127, 8, 8, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x7F 0x08    
   \              0x08 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0xC8   0x00 0x00          DC8 0, 0, 0, 0, 6, 6, 4, 3, 0, 0, 0, 0, 0, 0, 0, 0, 254, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x06 0x06    
   \              0x04 0x03    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xFE 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \       0xDE   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 6, 6, 0, 0, 0, 0, 128, 64
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x06 0x06    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x80 0x40    
   \       0xF4   0x40 0x20          DC8 64, 32, 32, 16, 16, 8, 8, 4, 4, 2, 2, 0, 0, 0, 0, 24, 36, 66, 66
   \              0x20 0x10    
   \              0x10 0x08    
   \              0x08 0x04    
   \              0x04 0x02    
   \              0x02 0x00    
   \              0x00 0x00    
   \              0x00 0x18    
   \              0x24 0x42    
   \              0x42         
   \      0x107   0x42 0x42          DC8 66, 66, 66, 66, 66, 36, 24, 0, 0, 0, 0, 0, 8, 14, 8, 8, 8, 8, 8, 8
   \              0x42 0x42    
   \              0x42 0x24    
   \              0x18 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x0E    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x08 0x08    
   \      0x11B   0x08 0x08          DC8 8, 8, 62, 0, 0, 0, 0, 0, 60, 66, 66, 66, 32, 32, 16, 8, 4, 66, 126
   \              0x3E 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3C 0x42    
   \              0x42 0x42    
   \              0x20 0x20    
   \              0x10 0x08    
   \              0x04 0x42    
   \              0x7E         
   \      0x12E   0x00 0x00          DC8 0, 0, 0, 0, 0, 60, 66, 66, 32, 24, 32, 64, 64, 66, 34, 28, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x3C    
   \              0x42 0x42    
   \              0x20 0x18    
   \              0x20 0x40    
   \              0x40 0x42    
   \              0x22 0x1C    
   \              0x00 0x00    
   \              0x00         
   \      0x141   0x00 0x00          DC8 0, 0, 32, 48, 40, 36, 36, 34, 34, 126, 32, 32, 120, 0, 0, 0, 0, 0
   \              0x20 0x30    
   \              0x28 0x24    
   \              0x24 0x22    
   \              0x22 0x7E    
   \              0x20 0x20    
   \              0x78 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x153   0x7E 0x02          DC8 126, 2, 2, 2, 26, 38, 64, 64, 66, 34, 28, 0, 0, 0, 0, 0, 56, 36, 2
   \              0x02 0x02    
   \              0x1A 0x26    
   \              0x40 0x40    
   \              0x42 0x22    
   \              0x1C 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x38 0x24    
   \              0x02         
   \      0x166   0x02 0x1A          DC8 2, 26, 38, 66, 66, 66, 36, 24, 0, 0, 0, 0, 0, 126, 34, 34, 16, 16
   \              0x26 0x42    
   \              0x42 0x42    
   \              0x24 0x18    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x7E    
   \              0x22 0x22    
   \              0x10 0x10    
   \      0x178   0x08 0x08          DC8 8, 8, 8, 8, 8, 8, 0, 0, 0, 0, 0, 60, 66, 66, 66, 36, 24, 36, 66, 66
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x3C    
   \              0x42 0x42    
   \              0x42 0x24    
   \              0x18 0x24    
   \              0x42 0x42    
   \      0x18C   0x42 0x3C          DC8 66, 60, 0, 0, 0, 0, 0, 24, 36, 66, 66, 66, 100, 88, 64, 64, 36, 28
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x18    
   \              0x24 0x42    
   \              0x42 0x42    
   \              0x64 0x58    
   \              0x40 0x40    
   \              0x24 0x1C    
   \      0x19E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 24, 24, 0, 0, 0, 0, 24, 24, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x18 0x18    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x18 0x18    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x1B3   0x00 0x00          DC8 0, 0, 0, 0, 8, 0, 0, 0, 0, 0, 8, 8, 4, 0, 0, 0, 64, 32, 16, 8, 4, 2
   \              0x00 0x00    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0x04 0x00    
   \              0x00 0x00    
   \              0x40 0x20    
   \              0x10 0x08    
   \              0x04 0x02    
   \      0x1C9   0x04 0x08          DC8 4, 8, 16, 32, 64, 0, 0, 0, 0, 0, 0, 0, 0, 127, 0, 0, 0, 127, 0, 0
   \              0x10 0x20    
   \              0x40 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x00 0x00    
   \      0x1DD   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 2, 4, 8, 16, 32, 64, 32, 16, 8, 4, 2, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x02 0x04    
   \              0x08 0x10    
   \              0x20 0x40    
   \              0x20 0x10    
   \              0x08 0x04    
   \              0x02 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x1F2   0x00 0x3C          DC8 0, 60, 66, 66, 70, 64, 32, 16, 16, 0, 24, 24, 0, 0, 0, 0, 0, 28, 34
   \              0x42 0x42    
   \              0x46 0x40    
   \              0x20 0x10    
   \              0x10 0x00    
   \              0x18 0x18    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x1C    
   \              0x22         
   \      0x205   0x5A 0x55          DC8 90, 85, 85, 85, 85, 45, 66, 34, 28, 0, 0, 0, 0, 0, 8, 8, 24, 20, 20
   \              0x55 0x55    
   \              0x55 0x2D    
   \              0x42 0x22    
   \              0x1C 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0x18 0x14    
   \              0x14         
   \      0x218   0x24 0x3C          DC8 36, 60, 34, 66, 66, 231, 0, 0, 0, 0, 0, 31, 34, 34, 34, 30, 34, 66
   \              0x22 0x42    
   \              0x42 0xE7    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x1F    
   \              0x22 0x22    
   \              0x22 0x1E    
   \              0x22 0x42    
   \      0x22A   0x42 0x42          DC8 66, 66, 34, 31, 0, 0, 0, 0, 0, 124, 66, 66, 1, 1, 1, 1, 1, 66, 34
   \              0x22 0x1F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x7C    
   \              0x42 0x42    
   \              0x01 0x01    
   \              0x01 0x01    
   \              0x01 0x42    
   \              0x22         
   \      0x23D   0x1C 0x00          DC8 28, 0, 0, 0, 0, 0, 31, 34, 66, 66, 66, 66, 66, 66, 66, 34, 31, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1F 0x22    
   \              0x42 0x42    
   \              0x42 0x42    
   \              0x42 0x42    
   \              0x42 0x22    
   \              0x1F 0x00    
   \              0x00         
   \      0x250   0x00 0x00          DC8 0, 0, 0, 63, 66, 18, 18, 30, 18, 18, 2, 66, 66, 63, 0, 0, 0, 0, 0
   \              0x00 0x3F    
   \              0x42 0x12    
   \              0x12 0x1E    
   \              0x12 0x12    
   \              0x02 0x42    
   \              0x42 0x3F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x263   0x3F 0x42          DC8 63, 66, 18, 18, 30, 18, 18, 2, 2, 2, 7, 0, 0, 0, 0, 0, 60, 34, 34
   \              0x12 0x12    
   \              0x1E 0x12    
   \              0x12 0x02    
   \              0x02 0x02    
   \              0x07 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3C 0x22    
   \              0x22         
   \      0x276   0x01 0x01          DC8 1, 1, 1, 113, 33, 34, 34, 28, 0, 0, 0, 0, 0, 231, 66, 66, 66, 66
   \              0x01 0x71    
   \              0x21 0x22    
   \              0x22 0x1C    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE7    
   \              0x42 0x42    
   \              0x42 0x42    
   \      0x288   0x7E 0x42          DC8 126, 66, 66, 66, 66, 231, 0, 0, 0, 0, 0, 62, 8, 8, 8, 8, 8, 8, 8, 8
   \              0x42 0x42    
   \              0x42 0xE7    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x3E    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x08 0x08    
   \      0x29C   0x08 0x3E          DC8 8, 62, 0, 0, 0, 0, 0, 124, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x7C    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10 0x10    
   \      0x2AE   0x11 0x0F          DC8 17, 15, 0, 0, 0, 119, 34, 18, 10, 14, 10, 18, 18, 34, 34, 119, 0, 0
   \              0x00 0x00    
   \              0x00 0x77    
   \              0x22 0x12    
   \              0x0A 0x0E    
   \              0x0A 0x12    
   \              0x12 0x22    
   \              0x22 0x77    
   \              0x00 0x00    
   \      0x2C0   0x00 0x00          DC8 0, 0, 0, 7, 2, 2, 2, 2, 2, 2, 2, 2, 66, 127, 0, 0, 0, 0, 0, 119, 54
   \              0x00 0x07    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x02 0x02    
   \              0x42 0x7F    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x77    
   \              0x36         
   \      0x2D5   0x36 0x36          DC8 54, 54, 54, 42, 42, 42, 42, 42, 107, 0, 0, 0, 0, 0, 227, 70, 70, 74
   \              0x36 0x2A    
   \              0x2A 0x2A    
   \              0x2A 0x2A    
   \              0x6B 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE3 0x46    
   \              0x46 0x4A    
   \      0x2E7   0x4A 0x52          DC8 74, 82, 82, 82, 98, 98, 71, 0, 0, 0, 0, 0, 28, 34, 65, 65, 65, 65
   \              0x52 0x52    
   \              0x62 0x62    
   \              0x47 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x1C 0x22    
   \              0x41 0x41    
   \              0x41 0x41    
   \      0x2F9   0x41 0x41          DC8 65, 65, 65, 34, 28, 0, 0, 0, 0, 0, 63, 66, 66, 66, 66, 62, 2, 2, 2
   \              0x41 0x22    
   \              0x1C 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3F 0x42    
   \              0x42 0x42    
   \              0x42 0x3E    
   \              0x02 0x02    
   \              0x02         
   \      0x30C   0x02 0x07          DC8 2, 7, 0, 0, 0, 0, 0, 28, 34, 65, 65, 65, 65, 65, 77, 83, 50, 28, 96
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x1C    
   \              0x22 0x41    
   \              0x41 0x41    
   \              0x41 0x41    
   \              0x4D 0x53    
   \              0x32 0x1C    
   \              0x60         
   \      0x31F   0x00 0x00          DC8 0, 0, 0, 0, 63, 66, 66, 66, 62, 18, 18, 34, 34, 66, 199, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x3F 0x42    
   \              0x42 0x42    
   \              0x3E 0x12    
   \              0x12 0x22    
   \              0x22 0x42    
   \              0xC7 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x332   0x00 0x7C          DC8 0, 124, 66, 66, 2, 4, 24, 32, 64, 66, 66, 62, 0, 0, 0, 0, 0, 127
   \              0x42 0x42    
   \              0x02 0x04    
   \              0x18 0x20    
   \              0x40 0x42    
   \              0x42 0x3E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x7F    
   \      0x344   0x49 0x08          DC8 73, 8, 8, 8, 8, 8, 8, 8, 8, 28, 0, 0, 0, 0, 0, 231, 66, 66, 66, 66
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x08 0x1C    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE7    
   \              0x42 0x42    
   \              0x42 0x42    
   \      0x358   0x42 0x42          DC8 66, 66, 66, 66, 66, 60, 0, 0, 0, 0, 0, 231, 66, 66, 34, 36, 36, 20
   \              0x42 0x42    
   \              0x42 0x3C    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE7    
   \              0x42 0x42    
   \              0x22 0x24    
   \              0x24 0x14    
   \      0x36A   0x14 0x18          DC8 20, 24, 8, 8, 0, 0, 0, 0, 0, 107, 73, 73, 73, 73, 85, 85, 54, 34
   \              0x08 0x08    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x6B    
   \              0x49 0x49    
   \              0x49 0x49    
   \              0x55 0x55    
   \              0x36 0x22    
   \      0x37C   0x22 0x22          DC8 34, 34, 0, 0, 0, 0, 0, 231, 66, 36, 36, 24, 24, 24, 36, 36, 66, 231
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xE7    
   \              0x42 0x24    
   \              0x24 0x18    
   \              0x18 0x18    
   \              0x24 0x24    
   \              0x42 0xE7    
   \      0x38E   0x00 0x00          DC8 0, 0, 0, 0, 0, 119, 34, 34, 20, 20, 8, 8, 8, 8, 8, 28, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x77    
   \              0x22 0x22    
   \              0x14 0x14    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x08 0x1C    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x3A2   0x00 0x7E          DC8 0, 126, 33, 32, 16, 16, 8, 4, 4, 66, 66, 63, 0, 0, 0, 120, 8, 8, 8
   \              0x21 0x20    
   \              0x10 0x10    
   \              0x08 0x04    
   \              0x04 0x42    
   \              0x42 0x3F    
   \              0x00 0x00    
   \              0x00 0x78    
   \              0x08 0x08    
   \              0x08         
   \      0x3B5   0x08 0x08          DC8 8, 8, 8, 8, 8, 8, 8, 8, 8, 120, 0, 0, 0, 2, 2, 4, 4, 8, 8, 8, 16
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x08 0x78    
   \              0x00 0x00    
   \              0x00 0x02    
   \              0x02 0x04    
   \              0x04 0x08    
   \              0x08 0x08    
   \              0x10         
   \      0x3CA   0x10 0x20          DC8 16, 32, 32, 32, 64, 64, 0, 30, 16, 16, 16, 16, 16, 16, 16, 16, 16
   \              0x20 0x20    
   \              0x40 0x40    
   \              0x00 0x1E    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10         
   \      0x3DB   0x10 0x10          DC8 16, 16, 16, 30, 0, 0, 56, 68, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x10 0x1E    
   \              0x00 0x00    
   \              0x38 0x44    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x3F0   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 255, 0, 6, 8, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0xFF    
   \              0x00 0x06    
   \              0x08 0x00    
   \              0x00 0x00    
   \      0x406   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 60, 66, 120, 68
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x3C    
   \              0x42 0x78    
   \              0x44         
   \      0x41B   0x42 0x42          DC8 66, 66, 252, 0, 0, 0, 0, 0, 3, 2, 2, 2, 26, 38, 66, 66, 66, 38, 26
   \              0xFC 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x03 0x02    
   \              0x02 0x02    
   \              0x1A 0x26    
   \              0x42 0x42    
   \              0x42 0x26    
   \              0x1A         
   \      0x42E   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 56, 68, 2, 2, 2, 68, 56, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x38    
   \              0x44 0x02    
   \              0x02 0x02    
   \              0x44 0x38    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x443   0x60 0x40          DC8 96, 64, 64, 64, 120, 68, 66, 66, 66, 100, 216, 0, 0, 0, 0, 0, 0, 0
   \              0x40 0x40    
   \              0x78 0x44    
   \              0x42 0x42    
   \              0x42 0x64    
   \              0xD8 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x455   0x00 0x00          DC8 0, 0, 60, 66, 126, 2, 2, 66, 60, 0, 0, 0, 0, 0, 240, 136, 8, 8, 126
   \              0x3C 0x42    
   \              0x7E 0x02    
   \              0x02 0x42    
   \              0x3C 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xF0 0x88    
   \              0x08 0x08    
   \              0x7E         
   \      0x468   0x08 0x08          DC8 8, 8, 8, 8, 8, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 34, 34, 28, 2
   \              0x08 0x08    
   \              0x08 0x3E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x7C    
   \              0x22 0x22    
   \              0x1C 0x02    
   \      0x47C   0x3C 0x42          DC8 60, 66, 66, 60, 0, 0, 0, 3, 2, 2, 2, 58, 70, 66, 66, 66, 66, 231, 0
   \              0x42 0x3C    
   \              0x00 0x00    
   \              0x00 0x03    
   \              0x02 0x02    
   \              0x02 0x3A    
   \              0x46 0x42    
   \              0x42 0x42    
   \              0x42 0xE7    
   \              0x00         
   \      0x48F   0x00 0x00          DC8 0, 0, 0, 0, 12, 12, 0, 0, 14, 8, 8, 8, 8, 8, 62, 0, 0, 0, 0, 0, 48
   \              0x00 0x00    
   \              0x0C 0x0C    
   \              0x00 0x00    
   \              0x0E 0x08    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x3E 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x30         
   \      0x4A4   0x30 0x00          DC8 48, 0, 0, 56, 32, 32, 32, 32, 32, 32, 34, 30, 0, 0, 0, 3, 2, 2, 2
   \              0x00 0x38    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x22 0x1E    
   \              0x00 0x00    
   \              0x00 0x03    
   \              0x02 0x02    
   \              0x02         
   \      0x4B7   0x72 0x12          DC8 114, 18, 10, 22, 18, 34, 119, 0, 0, 0, 0, 0, 14, 8, 8, 8, 8, 8, 8
   \              0x0A 0x16    
   \              0x12 0x22    
   \              0x77 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x0E 0x08    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x08         
   \      0x4CA   0x08 0x08          DC8 8, 8, 8, 62, 0, 0, 0, 0, 0, 0, 0, 0, 0, 127, 146, 146, 146, 146
   \              0x08 0x3E    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x7F    
   \              0x92 0x92    
   \              0x92 0x92    
   \      0x4DC   0x92 0xB7          DC8 146, 183, 0, 0, 0, 0, 0, 0, 0, 0, 0, 59, 70, 66, 66, 66, 66, 231, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x3B    
   \              0x46 0x42    
   \              0x42 0x42    
   \              0x42 0xE7    
   \              0x00         
   \      0x4EF   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 60, 66, 66, 66, 66, 66, 60, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x3C 0x42    
   \              0x42 0x42    
   \              0x42 0x42    
   \              0x3C 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x503   0x00 0x00          DC8 0, 0, 0, 0, 27, 38, 66, 66, 66, 34, 30, 2, 7, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x1B 0x26    
   \              0x42 0x42    
   \              0x42 0x22    
   \              0x1E 0x02    
   \              0x07 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x517   0x78 0x44          DC8 120, 68, 66, 66, 66, 68, 120, 64, 224, 0, 0, 0, 0, 0, 0, 0, 119, 76
   \              0x42 0x42    
   \              0x42 0x44    
   \              0x78 0x40    
   \              0xE0 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x77 0x4C    
   \      0x529   0x04 0x04          DC8 4, 4, 4, 4, 31, 0, 0, 0, 0, 0, 0, 0, 0, 0, 124, 66, 2, 60, 64, 66
   \              0x04 0x04    
   \              0x1F 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7C 0x42    
   \              0x02 0x3C    
   \              0x40 0x42    
   \      0x53D   0x3E 0x00          DC8 62, 0, 0, 0, 0, 0, 0, 0, 8, 8, 62, 8, 8, 8, 8, 8, 48, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x08 0x08    
   \              0x3E 0x08    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x30 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x553   0x00 0x00          DC8 0, 0, 0, 0, 99, 66, 66, 66, 66, 98, 220, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x63 0x42    
   \              0x42 0x42    
   \              0x42 0x62    
   \              0xDC 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \      0x567   0xE7 0x42          DC8 231, 66, 36, 36, 20, 8, 8, 0, 0, 0, 0, 0, 0, 0, 0, 0, 235, 73, 73
   \              0x24 0x24    
   \              0x14 0x08    
   \              0x08 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xEB 0x49    
   \              0x49         
   \      0x57A   0x55 0x55          DC8 85, 85, 34, 34, 0, 0, 0, 0, 0, 0, 0, 0, 0, 118, 36, 24, 24, 24, 36
   \              0x22 0x22    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x76    
   \              0x24 0x18    
   \              0x18 0x18    
   \              0x24         
   \      0x58D   0x6E 0x00          DC8 110, 0, 0, 0, 0, 0, 0, 0, 0, 0, 231, 66, 36, 36, 20, 24, 8, 8, 7, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0xE7 0x42    
   \              0x24 0x24    
   \              0x14 0x18    
   \              0x08 0x08    
   \              0x07 0x00    
   \      0x5A1   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 126, 34, 16, 8, 8, 68, 126, 0, 0, 0, 192, 32, 32
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x7E 0x22    
   \              0x10 0x08    
   \              0x08 0x44    
   \              0x7E 0x00    
   \              0x00 0x00    
   \              0xC0 0x20    
   \              0x20         
   \      0x5B4   0x20 0x20          DC8 32, 32, 32, 16, 32, 32, 32, 32, 32, 32, 192, 0, 16, 16, 16, 16, 16
   \              0x20 0x10    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0x20 0x20    
   \              0xC0 0x00    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10         
   \      0x5C5   0x10 0x10          DC8 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 16, 0, 6, 8, 8, 8, 8, 8, 16
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10 0x10    
   \              0x10 0x00    
   \              0x06 0x08    
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x10         
   \      0x5D8   0x08 0x08          DC8 8, 8, 8, 8, 8, 8, 6, 0, 12, 50, 194, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x08 0x08    
   \              0x08 0x08    
   \              0x06 0x00    
   \              0x0C 0x32    
   \              0xC2 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00         
   \      0x5ED   0x00 0x00          DC8 0, 0, 0
   \              0x00         
     26          
     27          static void LCD_Reset(void);
     28          static void LCD_FLEXBUS_Init(uint16 lcd_id);
     29          static void LCD_IO_Cfg(void);
     30          static void LCD_WriteIndex(uint16 index);
     31          static void LCD_WriteData(uint16 data);
     32          static uint16 LCD_ReadData(void);
     33          static void LCD_WriteReg(uint16 LCD_Reg,uint16 LCD_RegValue);
     34          static uint16 LCD_ReadReg(uint16 LCD_Reg);
     35          static void LCD_SetCursor( uint16 Xpos, uint16 Ypos );
     36          static void LCD_Delayms(uint16 ms);
     37          

   \                                 In section .bss, align 4
     38          LCD_Info_t LCD_INFO;
   \                     LCD_INFO:
   \        0x0                      DS8 8

   \                                 In section .bss, align 2
     39          uint16 PreX=0, PreY=0;
   \                     PreX:
   \        0x0                      DS8 2

   \                                 In section .bss, align 2
   \                     PreY:
   \        0x0                      DS8 2

   \                                 In section .bss, align 4
     40          uint16 *LCD_GRAM;
   \                     LCD_GRAM:
   \        0x0                      DS8 4

   \                                 In section .bss, align 2
     41          uint16 CurX=0, CurY=0;
   \                     CurX:
   \        0x0                      DS8 2

   \                                 In section .bss, align 2
   \                     CurY:
   \        0x0                      DS8 2
     42          
     43          /*
     44           * LCD_Delayms
     45           * LCD内部延时函数，内部调用
     46           */

   \                                 In section .text, align 4, keep-with-next
     47          static void LCD_Delayms(uint16 n)
     48          {
     49            uint16 i;
     50            while(n--)
   \                     _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt: (+1)
   \                     ??LCD_Delayms_0: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0x1E48             SUBS     R0,R1,#+1
   \        0x4   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \        0x6   0x2900             CMP      R1,#+0
   \        0x8   0xD009             BEQ.N    ??LCD_Delayms_1
     51            {
     52              for(i=0; i<400; i++)
   \        0xA   0x2100             MOVS     R1,#+0
   \        0xC   0x000A             MOVS     R2,R1
   \                     ??LCD_Delayms_2: (+1)
   \        0xE   0x0011             MOVS     R1,R2
   \       0x10   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x12   0xF5B1 0x7FC8      CMP      R1,#+400
   \       0x16   0xDAF3             BGE.N    ??LCD_Delayms_0
     53              {
     54                asm("nop");
   \       0x18   0xBF00             nop
     55              }
   \       0x1A   0x1C52             ADDS     R2,R2,#+1
   \       0x1C   0xE7F7             B.N      ??LCD_Delayms_2
     56            }
     57          }
   \                     ??LCD_Delayms_1: (+1)
   \       0x1E   0x4770             BX       LR               ;; return
     58          
     59          /*
     60           * LCD_FLEXBUS_Init
     61           * LCD FlexBus初始化函数，内部调用
     62           * 
     63           * 说明:
     64           *    本初始化函数用来配置FlexBus与LCD的连接
     65           *    配置为16位端口大小
     66           *    地址与数据线复用
     67           *    数据及地址线为FB_AD[15:0]
     68           *    RS:FB_AD[16]
     69           *    CS:FB_CS0
     70           *    RW:FB_FB_RW
     71           *    RD:FB_OE 
     72           */

   \                                 In section .text, align 2, keep-with-next
     73          static void LCD_FLEXBUS_Init(uint16 lcd_id)
     74          {
   \                     _ZN26_INTERNAL_9_DEV_LCD_c_PreX16LCD_FLEXBUS_InitEt: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB086             SUB      SP,SP,#+24
   \        0x4   0x0004             MOVS     R4,R0
     75            FB_InitTypeDef fb_init;
     76            fb_init.FB_Fbx = FB0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0xF88D 0x0004      STRB     R0,[SP, #+4]
     77            fb_init.FB_ChipSelAddress = LCD_CMD_ADDRESS;
   \        0xC   0xF05F 0x40C0      MOVS     R0,#+1610612736
   \       0x10   0x9002             STR      R0,[SP, #+8]
     78            fb_init.FB_AutoAckEnable = TRUE;
   \       0x12   0x2001             MOVS     R0,#+1
   \       0x14   0xF88D 0x0012      STRB     R0,[SP, #+18]
     79            fb_init.FB_IsRightJustied = TRUE;
   \       0x18   0x2001             MOVS     R0,#+1
   \       0x1A   0xF88D 0x0011      STRB     R0,[SP, #+17]
     80            fb_init.FB_WateStates = 0x02;
   \       0x1E   0x2002             MOVS     R0,#+2
   \       0x20   0xF88D 0x0013      STRB     R0,[SP, #+19]
     81            fb_init.FB_PortSize = FB_SIZE_16BIT;
   \       0x24   0x2002             MOVS     R0,#+2
   \       0x26   0xF88D 0x0010      STRB     R0,[SP, #+16]
     82            fb_init.FB_AddressSpace = FB_SPACE_KB(128);   //128K
   \       0x2A   0xF45F 0x3000      MOVS     R0,#+131072
   \       0x2E   0x9003             STR      R0,[SP, #+12]
     83            fb_init.FB_ReadAddrHold = 0;
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0xF88D 0x0014      STRB     R0,[SP, #+20]
     84            fb_init.FB_WriteAddrHold = 0;
   \       0x36   0x2000             MOVS     R0,#+0
   \       0x38   0xF88D 0x0015      STRB     R0,[SP, #+21]
     85            FlexBus_Init(fb_init); 
   \       0x3C   0xA901             ADD      R1,SP,#+4
   \       0x3E   0xB084             SUB      SP,SP,#+16
   \       0x40   0x4668             MOV      R0,SP
   \       0x42   0x2214             MOVS     R2,#+20
   \       0x44   0x.... 0x....      BL       __aeabi_memcpy4
   \       0x48   0xBC0F             POP      {R0-R3}
   \       0x4A   0x.... 0x....      BL       FlexBus_Init
     86          }
   \                     ??LCD_FLEXBUS_Init_0: (+1)
   \       0x4E   0xB006             ADD      SP,SP,#+24
   \       0x50   0xBD10             POP      {R4,PC}          ;; return
     87          
     88          /*
     89           * LCD_IO_Cfg
     90           * LCD IO引脚初始化，内部调用
     91           *
     92           * 说明：
     93           * 此处初始化复位引脚，可根据实际硬件更改
     94           */

   \                                 In section .text, align 2, keep-with-next
     95          static void LCD_IO_Cfg(void)
     96          {
   \                     _ZN26_INTERNAL_9_DEV_LCD_c_PreX10LCD_IO_CfgEv: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
   \        0x2   0xB086             SUB      SP,SP,#+24
     97            GPIO_InitTypeDef ptc_init;
     98            //RST 
     99            ptc_init.GPIO_PTx = PTD;
   \        0x4   0x....             LDR.N    R0,??DataTable5  ;; 0x400ff0c0
   \        0x6   0x9001             STR      R0,[SP, #+4]
    100            ptc_init.GPIO_Pins = GPIO_Pin15;
   \        0x8   0xF44F 0x4000      MOV      R0,#+32768
   \        0xC   0x9002             STR      R0,[SP, #+8]
    101            ptc_init.GPIO_Dir = DIR_OUTPUT;
   \        0xE   0x2001             MOVS     R0,#+1
   \       0x10   0xF88D 0x0010      STRB     R0,[SP, #+16]
    102            ptc_init.GPIO_Output = OUTPUT_H;
   \       0x14   0x2001             MOVS     R0,#+1
   \       0x16   0xF88D 0x0011      STRB     R0,[SP, #+17]
    103            ptc_init.GPIO_PinControl = IRQC_DIS; 
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0x9003             STR      R0,[SP, #+12]
    104            GPIO_Init(ptc_init);    
   \       0x1E   0xA901             ADD      R1,SP,#+4
   \       0x20   0xB084             SUB      SP,SP,#+16
   \       0x22   0x4668             MOV      R0,SP
   \       0x24   0x2214             MOVS     R2,#+20
   \       0x26   0x.... 0x....      BL       __aeabi_memcpy4
   \       0x2A   0xBC0F             POP      {R0-R3}
   \       0x2C   0x.... 0x....      BL       GPIO_Init
    105          }
   \                     ??LCD_IO_Cfg_0: (+1)
   \       0x30   0xB007             ADD      SP,SP,#+28
   \       0x32   0xBD00             POP      {PC}             ;; return
    106          
    107          /*
    108           * LCD_WriteIndex
    109           * LCD写控制命令，内部调用
    110           */

   \                                 In section .text, align 2, keep-with-next
    111          static void LCD_WriteIndex(uint16 index)
    112          {
    113            *(vuint16*)LCD_CMD_ADDRESS = index;  //write
   \                     _ZN26_INTERNAL_9_DEV_LCD_c_PreX14LCD_WriteIndexEt: (+1)
   \        0x0   0xF05F 0x41C0      MOVS     R1,#+1610612736
   \        0x4   0x8008             STRH     R0,[R1, #+0]
    114          }
   \        0x6   0x4770             BX       LR               ;; return
    115          
    116          /*
    117           * LCD_WriteData
    118           * LCD写数据，内部调用
    119           */

   \                                 In section .text, align 2, keep-with-next
    120          void LCD_WriteData(uint16 data)
    121          {
    122            *(vuint16*)LCD_DATA_ADDRESS = data;  //write
   \                     _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_WriteDataEt: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable5_1  ;; 0x60010000
   \        0x2   0x8008             STRH     R0,[R1, #+0]
    123          }
   \        0x4   0x4770             BX       LR               ;; return
    124          
    125          /*
    126           * LCD_ReadData
    127           * LCD读数据，内部调用
    128           */

   \                                 In section .text, align 2, keep-with-next
    129          static uint16 LCD_ReadData(void)
    130          { 
    131            uint16 value;
    132            value = *(vuint16*)LCD_DATA_ADDRESS;  //read
   \                     _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_ReadDataEv: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable5_1  ;; 0x60010000
   \        0x2   0x8800             LDRH     R0,[R0, #+0]
    133            return value;
   \        0x4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \        0x6   0x4770             BX       LR               ;; return
    134          }
    135          
    136          /*
    137           * LCD_WriteReg
    138           * LCD写寄存器，内部调用
    139           */

   \                                 In section .text, align 2, keep-with-next
    140          static void LCD_WriteReg(uint16 LCD_Reg,uint16 LCD_RegValue)
    141          { 
   \                     _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    142            /* Write 16-bit Index, then Write Reg */  
    143            LCD_WriteIndex(LCD_Reg);         
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \        0xA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX14LCD_WriteIndexEt
    144            /* Write 16-bit Reg */
    145            LCD_WriteData(LCD_RegValue);  
   \        0xE   0x0028             MOVS     R0,R5
   \       0x10   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x12   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_WriteDataEt
    146          }
   \       0x16   0xBD31             POP      {R0,R4,R5,PC}    ;; return
    147          
    148          /*
    149           * LCD_ReadReg
    150           * LCD读寄存器，内部调用
    151           */

   \                                 In section .text, align 2, keep-with-next
    152          static uint16 LCD_ReadReg(uint16 LCD_Reg)
    153          {
   \                     _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_ReadRegEt: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    154            uint16 LCD_RAM;
    155            /* Write 16-bit Index (then Read Reg) */
    156            LCD_WriteIndex(LCD_Reg);
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \        0x8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX14LCD_WriteIndexEt
    157            /* Read 16-bit Reg */
    158            LCD_RAM = LCD_ReadData();      	
   \        0xC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_ReadDataEv
    159            return LCD_RAM;
   \       0x10   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x12   0xBD10             POP      {R4,PC}          ;; return
    160          }
    161          
    162          /*
    163           * LCD_SetCursor
    164           * 设置LCD内部GRAM光标位置，内部调用
    165           */

   \                                 In section .text, align 2, keep-with-next
    166          static void LCD_SetCursor( uint16 Xpos, uint16 Ypos )
    167          {
   \                     _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_SetCursorEtt: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000E             MOVS     R6,R1
    168          #if(HORIZONTAL)
    169              
    170            uint16 temp = Xpos;
   \        0x8   0x46A0             MOV      R8,R4
    171            Xpos = Ypos;
   \        0xA   0x0035             MOVS     R5,R6
    172            Ypos = temp;  
   \        0xC   0x4647             MOV      R7,R8
    173          
    174          #else
    175                      
    176          #endif
    177          //  LCD_WriteReg(LCD_INFO.X_GRAM, Xpos );      
    178          //  LCD_WriteReg(LCD_INFO.Y_GRAM, Ypos );          
    179             
    180            LCD_WriteIndex(LCD_INFO.X_GRAM); 
   \        0xE   0x.... 0x....      LDR.W    R9,??DataTable5_2
   \       0x12   0xF8B9 0x0004      LDRH     R0,[R9, #+4]
   \       0x16   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX14LCD_WriteIndexEt
    181            LCD_WriteData(Xpos>>8); 
   \       0x1A   0x0028             MOVS     R0,R5
   \       0x1C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x1E   0x0A00             LSRS     R0,R0,#+8
   \       0x20   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_WriteDataEt
    182            LCD_WriteIndex(LCD_INFO.X_GRAM+1); 
   \       0x24   0xF8B9 0x0004      LDRH     R0,[R9, #+4]
   \       0x28   0x1C40             ADDS     R0,R0,#+1
   \       0x2A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x2C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX14LCD_WriteIndexEt
    183            LCD_WriteData(Xpos&0XFF);	 
   \       0x30   0xF005 0x00FF      AND      R0,R5,#0xFF
   \       0x34   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_WriteDataEt
    184            LCD_WriteIndex(LCD_INFO.Y_GRAM); 
   \       0x38   0xF8B9 0x0006      LDRH     R0,[R9, #+6]
   \       0x3C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX14LCD_WriteIndexEt
    185            LCD_WriteData(Ypos>>8); 
   \       0x40   0x0038             MOVS     R0,R7
   \       0x42   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x44   0x0A00             LSRS     R0,R0,#+8
   \       0x46   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_WriteDataEt
    186            LCD_WriteIndex(LCD_INFO.Y_GRAM+1); 
   \       0x4A   0xF8B9 0x0006      LDRH     R0,[R9, #+6]
   \       0x4E   0x1C40             ADDS     R0,R0,#+1
   \       0x50   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x52   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX14LCD_WriteIndexEt
    187            LCD_WriteData(Ypos&0XFF);	
   \       0x56   0xF007 0x00FF      AND      R0,R7,#0xFF
   \       0x5A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_WriteDataEt
    188          }
   \       0x5E   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    189          
    190          
    191          /*
    192           * LCD_Reset
    193           * 复位LCD控制器，内部调用
    194           */

   \                                 In section .text, align 2, keep-with-next
    195          static void LCD_Reset(void)
    196          {
   \                     _ZN26_INTERNAL_9_DEV_LCD_c_PreX9LCD_ResetEv: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    197            LCD_CLR_RST;
   \        0x2   0x....             LDR.N    R4,??DataTable5_3  ;; 0x43fe183c
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x6020             STR      R0,[R4, #+0]
    198            LCD_Delayms(10); //延时
   \        0x8   0x200A             MOVS     R0,#+10
   \        0xA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    199            LCD_SET_RST;
   \        0xE   0x2001             MOVS     R0,#+1
   \       0x10   0x6020             STR      R0,[R4, #+0]
    200          }
   \       0x12   0xBD10             POP      {R4,PC}          ;; return
    201          
    202          /*
    203           * LCD_Init
    204           * LCD初始化
    205           * 
    206           * 参数:
    207           *    无
    208           *
    209           * 输出:
    210           *    LCD控制型号
    211           *    0x9320--9320
    212           *    0x8989--8989
    213           */

   \                                 In section .bss, align 4
    214          uint16 dID[4];
   \                     dID:
   \        0x0                      DS8 8

   \                                 In section .text, align 4, keep-with-next
    215          uint16 LCD_Init(void)
    216          {
   \                     _Z8LCD_Initv: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
    217            
    218             
    219            LCD_FLEXBUS_Init(0);
   \        0x4   0x2000             MOVS     R0,#+0
   \        0x6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX16LCD_FLEXBUS_InitEt
    220            LCD_IO_Cfg();
   \        0xA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX10LCD_IO_CfgEv
    221            LCD_Delayms(50);
   \        0xE   0x2032             MOVS     R0,#+50
   \       0x10   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    222            
    223            LCD_Reset();                 //硬件复位
   \       0x14   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX9LCD_ResetEv
    224            
    225            dID[0] = LCD_ReadReg(0xda00);   //获取LCD控制器设备ID
   \       0x18   0xF8DF 0x4F44      LDR.W    R4,??LCD_Init_0
   \       0x1C   0xF44F 0x405A      MOV      R0,#+55808
   \       0x20   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_ReadRegEt
   \       0x24   0x8020             STRH     R0,[R4, #+0]
    226            dID[1] = LCD_ReadReg(0xdb00);
   \       0x26   0xF44F 0x405B      MOV      R0,#+56064
   \       0x2A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_ReadRegEt
   \       0x2E   0x8060             STRH     R0,[R4, #+2]
    227            dID[2] = LCD_ReadReg(0xdc00);
   \       0x30   0xF44F 0x405C      MOV      R0,#+56320
   \       0x34   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_ReadRegEt
   \       0x38   0x80A0             STRH     R0,[R4, #+4]
    228            dID[3]  = 0X8000;
   \       0x3A   0xF44F 0x4000      MOV      R0,#+32768
   \       0x3E   0x80E0             STRH     R0,[R4, #+6]
    229            LCD_INFO.Lcd_Id = dID[3];
   \       0x40   0xF8DF 0x5F20      LDR.W    R5,??LCD_Init_0+0x4
   \       0x44   0x88E0             LDRH     R0,[R4, #+6]
   \       0x46   0x8028             STRH     R0,[R5, #+0]
    230            
    231            if(dID[3] == 0X8000)
   \       0x48   0x88E0             LDRH     R0,[R4, #+6]
   \       0x4A   0xF5B0 0x4F00      CMP      R0,#+32768
   \       0x4E   0xF040 0x878B      BNE.W    ??LCD_Init_1
    232            {
    233              
    234              
    235          		LCD_WriteReg(0xF000,0x55);
   \       0x52   0x2155             MOVS     R1,#+85
   \       0x54   0xF44F 0x4070      MOV      R0,#+61440
   \       0x58   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    236          		LCD_WriteReg(0xF001,0xAA);
   \       0x5C   0x21AA             MOVS     R1,#+170
   \       0x5E   0xF24F 0x0001      MOVW     R0,#+61441
   \       0x62   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    237          		LCD_WriteReg(0xF002,0x52);
   \       0x66   0x2152             MOVS     R1,#+82
   \       0x68   0xF24F 0x0002      MOVW     R0,#+61442
   \       0x6C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    238          		LCD_WriteReg(0xF003,0x08);
   \       0x70   0x2108             MOVS     R1,#+8
   \       0x72   0xF24F 0x0003      MOVW     R0,#+61443
   \       0x76   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    239          		LCD_WriteReg(0xF004,0x01);
   \       0x7A   0x2101             MOVS     R1,#+1
   \       0x7C   0xF24F 0x0004      MOVW     R0,#+61444
   \       0x80   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    240          		//AVDD Set AVDD 5.2V
    241          		LCD_WriteReg(0xB000,0x0D);
   \       0x84   0x210D             MOVS     R1,#+13
   \       0x86   0xF44F 0x4030      MOV      R0,#+45056
   \       0x8A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    242          		LCD_WriteReg(0xB001,0x0D);
   \       0x8E   0x210D             MOVS     R1,#+13
   \       0x90   0xF24B 0x0001      MOVW     R0,#+45057
   \       0x94   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    243          		LCD_WriteReg(0xB002,0x0D);
   \       0x98   0x210D             MOVS     R1,#+13
   \       0x9A   0xF24B 0x0002      MOVW     R0,#+45058
   \       0x9E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    244          		//AVDD ratio
    245          		LCD_WriteReg(0xB600,0x34);
   \       0xA2   0x2134             MOVS     R1,#+52
   \       0xA4   0xF44F 0x4036      MOV      R0,#+46592
   \       0xA8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    246          		LCD_WriteReg(0xB601,0x34);
   \       0xAC   0x2134             MOVS     R1,#+52
   \       0xAE   0xF24B 0x6001      MOVW     R0,#+46593
   \       0xB2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    247          		LCD_WriteReg(0xB602,0x34);
   \       0xB6   0x2134             MOVS     R1,#+52
   \       0xB8   0xF24B 0x6002      MOVW     R0,#+46594
   \       0xBC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    248          		//AVEE -5.2V
    249          		LCD_WriteReg(0xB100,0x0D);
   \       0xC0   0x210D             MOVS     R1,#+13
   \       0xC2   0xF44F 0x4031      MOV      R0,#+45312
   \       0xC6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    250          		LCD_WriteReg(0xB101,0x0D);
   \       0xCA   0xF24B 0x1601      MOVW     R6,#+45313
   \       0xCE   0x210D             MOVS     R1,#+13
   \       0xD0   0x0030             MOVS     R0,R6
   \       0xD2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    251          		LCD_WriteReg(0xB102,0x0D);
   \       0xD6   0x210D             MOVS     R1,#+13
   \       0xD8   0xF24B 0x1002      MOVW     R0,#+45314
   \       0xDC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    252          		//AVEE ratio
    253          		LCD_WriteReg(0xB700,0x34);
   \       0xE0   0x2134             MOVS     R1,#+52
   \       0xE2   0xF44F 0x4037      MOV      R0,#+46848
   \       0xE6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    254          		LCD_WriteReg(0xB701,0x34);
   \       0xEA   0xF24B 0x7701      MOVW     R7,#+46849
   \       0xEE   0x2134             MOVS     R1,#+52
   \       0xF0   0x0038             MOVS     R0,R7
   \       0xF2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    255          		LCD_WriteReg(0xB702,0x34);
   \       0xF6   0x2134             MOVS     R1,#+52
   \       0xF8   0xF24B 0x7002      MOVW     R0,#+46850
   \       0xFC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    256          		//VCL -2.5V
    257          		LCD_WriteReg(0xB200,0x00);
   \      0x100   0x2100             MOVS     R1,#+0
   \      0x102   0xF44F 0x4032      MOV      R0,#+45568
   \      0x106   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    258          		LCD_WriteReg(0xB201,0x00);
   \      0x10A   0x2100             MOVS     R1,#+0
   \      0x10C   0xF24B 0x2001      MOVW     R0,#+45569
   \      0x110   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    259          		LCD_WriteReg(0xB202,0x00);
   \      0x114   0x2100             MOVS     R1,#+0
   \      0x116   0xF24B 0x2002      MOVW     R0,#+45570
   \      0x11A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    260          		//VCL ratio
    261          		LCD_WriteReg(0xB800,0x24);
   \      0x11E   0x2124             MOVS     R1,#+36
   \      0x120   0xF44F 0x4038      MOV      R0,#+47104
   \      0x124   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    262          		LCD_WriteReg(0xB801,0x24);
   \      0x128   0xF64B 0x0801      MOVW     R8,#+47105
   \      0x12C   0x2124             MOVS     R1,#+36
   \      0x12E   0x4640             MOV      R0,R8
   \      0x130   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    263          		LCD_WriteReg(0xB802,0x24);
   \      0x134   0xF64B 0x0902      MOVW     R9,#+47106
   \      0x138   0x2124             MOVS     R1,#+36
   \      0x13A   0x4648             MOV      R0,R9
   \      0x13C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    264          		//VGH 15V (Free pump)
    265          		LCD_WriteReg(0xBF00,0x01);
   \      0x140   0x2101             MOVS     R1,#+1
   \      0x142   0xF44F 0x403F      MOV      R0,#+48896
   \      0x146   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    266          		LCD_WriteReg(0xB300,0x0F);
   \      0x14A   0x210F             MOVS     R1,#+15
   \      0x14C   0xF44F 0x4033      MOV      R0,#+45824
   \      0x150   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    267          		LCD_WriteReg(0xB301,0x0F);
   \      0x154   0x210F             MOVS     R1,#+15
   \      0x156   0xF24B 0x3001      MOVW     R0,#+45825
   \      0x15A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    268          		LCD_WriteReg(0xB302,0x0F);
   \      0x15E   0x210F             MOVS     R1,#+15
   \      0x160   0xF24B 0x3002      MOVW     R0,#+45826
   \      0x164   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    269          		//VGH ratio
    270          		LCD_WriteReg(0xB900,0x34);
   \      0x168   0x2134             MOVS     R1,#+52
   \      0x16A   0xF44F 0x4039      MOV      R0,#+47360
   \      0x16E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    271          		LCD_WriteReg(0xB901,0x34);
   \      0x172   0x2134             MOVS     R1,#+52
   \      0x174   0xF64B 0x1001      MOVW     R0,#+47361
   \      0x178   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    272          		LCD_WriteReg(0xB902,0x34);
   \      0x17C   0x2134             MOVS     R1,#+52
   \      0x17E   0xF64B 0x1002      MOVW     R0,#+47362
   \      0x182   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    273          		//VGL_REG -10V
    274          		LCD_WriteReg(0xB500,0x08);
   \      0x186   0x2108             MOVS     R1,#+8
   \      0x188   0xF44F 0x4035      MOV      R0,#+46336
   \      0x18C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    275          		LCD_WriteReg(0xB501,0x08);
   \      0x190   0x2108             MOVS     R1,#+8
   \      0x192   0xF24B 0x5001      MOVW     R0,#+46337
   \      0x196   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    276          		LCD_WriteReg(0xB502,0x08);
   \      0x19A   0x2108             MOVS     R1,#+8
   \      0x19C   0xF24B 0x5002      MOVW     R0,#+46338
   \      0x1A0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    277          		LCD_WriteReg(0xC200,0x03);
   \      0x1A4   0x2103             MOVS     R1,#+3
   \      0x1A6   0xF44F 0x4042      MOV      R0,#+49664
   \      0x1AA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    278          		//VGLX ratio
    279          		LCD_WriteReg(0xBA00,0x24);
   \      0x1AE   0x2124             MOVS     R1,#+36
   \      0x1B0   0xF44F 0x403A      MOV      R0,#+47616
   \      0x1B4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    280          		LCD_WriteReg(0xBA01,0x24);
   \      0x1B8   0x2124             MOVS     R1,#+36
   \      0x1BA   0xF64B 0x2001      MOVW     R0,#+47617
   \      0x1BE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    281          		LCD_WriteReg(0xBA02,0x24);
   \      0x1C2   0x2124             MOVS     R1,#+36
   \      0x1C4   0xF64B 0x2002      MOVW     R0,#+47618
   \      0x1C8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    282          		//VGMP/VGSP 4.5V/0V
    283          		LCD_WriteReg(0xBC00,0x00);
   \      0x1CC   0x2100             MOVS     R1,#+0
   \      0x1CE   0xF44F 0x403C      MOV      R0,#+48128
   \      0x1D2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    284          		LCD_WriteReg(0xBC01,0x78);
   \      0x1D6   0xF64B 0x4A01      MOVW     R10,#+48129
   \      0x1DA   0x2178             MOVS     R1,#+120
   \      0x1DC   0x4650             MOV      R0,R10
   \      0x1DE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    285          		LCD_WriteReg(0xBC02,0x00);
   \      0x1E2   0xF64B 0x4B02      MOVW     R11,#+48130
   \      0x1E6   0x2100             MOVS     R1,#+0
   \      0x1E8   0x4658             MOV      R0,R11
   \      0x1EA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    286          		//VGMN/VGSN -4.5V/0V
    287          		LCD_WriteReg(0xBD00,0x00);
   \      0x1EE   0x2100             MOVS     R1,#+0
   \      0x1F0   0xF44F 0x403D      MOV      R0,#+48384
   \      0x1F4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    288          		LCD_WriteReg(0xBD01,0x78);
   \      0x1F8   0x2178             MOVS     R1,#+120
   \      0x1FA   0xF64B 0x5001      MOVW     R0,#+48385
   \      0x1FE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    289          		LCD_WriteReg(0xBD02,0x00);
   \      0x202   0x2100             MOVS     R1,#+0
   \      0x204   0xF64B 0x5002      MOVW     R0,#+48386
   \      0x208   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    290          		//VCOM
    291          		LCD_WriteReg(0xBE00,0x00);
   \      0x20C   0x2100             MOVS     R1,#+0
   \      0x20E   0xF44F 0x403E      MOV      R0,#+48640
   \      0x212   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    292          		LCD_WriteReg(0xBE01,0x64);
   \      0x216   0x2164             MOVS     R1,#+100
   \      0x218   0xF64B 0x6001      MOVW     R0,#+48641
   \      0x21C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    293          		//Gamma Setting
    294          		LCD_WriteReg(0xD100,0x00);
   \      0x220   0x2100             MOVS     R1,#+0
   \      0x222   0xF44F 0x4051      MOV      R0,#+53504
   \      0x226   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    295          		LCD_WriteReg(0xD101,0x33);
   \      0x22A   0x2133             MOVS     R1,#+51
   \      0x22C   0xF24D 0x1001      MOVW     R0,#+53505
   \      0x230   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    296          		LCD_WriteReg(0xD102,0x00);
   \      0x234   0x2100             MOVS     R1,#+0
   \      0x236   0xF24D 0x1002      MOVW     R0,#+53506
   \      0x23A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    297          		LCD_WriteReg(0xD103,0x34);
   \      0x23E   0x2134             MOVS     R1,#+52
   \      0x240   0xF24D 0x1003      MOVW     R0,#+53507
   \      0x244   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    298          		LCD_WriteReg(0xD104,0x00);
   \      0x248   0x2100             MOVS     R1,#+0
   \      0x24A   0xF24D 0x1004      MOVW     R0,#+53508
   \      0x24E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    299          		LCD_WriteReg(0xD105,0x3A);
   \      0x252   0x213A             MOVS     R1,#+58
   \      0x254   0xF24D 0x1005      MOVW     R0,#+53509
   \      0x258   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    300          		LCD_WriteReg(0xD106,0x00);
   \      0x25C   0x2100             MOVS     R1,#+0
   \      0x25E   0xF24D 0x1006      MOVW     R0,#+53510
   \      0x262   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    301          		LCD_WriteReg(0xD107,0x4A);
   \      0x266   0x214A             MOVS     R1,#+74
   \      0x268   0xF24D 0x1007      MOVW     R0,#+53511
   \      0x26C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    302          		LCD_WriteReg(0xD108,0x00);
   \      0x270   0x2100             MOVS     R1,#+0
   \      0x272   0xF24D 0x1008      MOVW     R0,#+53512
   \      0x276   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    303          		LCD_WriteReg(0xD109,0x5C);
   \      0x27A   0x215C             MOVS     R1,#+92
   \      0x27C   0xF24D 0x1009      MOVW     R0,#+53513
   \      0x280   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    304          		LCD_WriteReg(0xD10A,0x00);
   \      0x284   0x2100             MOVS     R1,#+0
   \      0x286   0xF24D 0x100A      MOVW     R0,#+53514
   \      0x28A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    305          		LCD_WriteReg(0xD10B,0x81);
   \      0x28E   0x2181             MOVS     R1,#+129
   \      0x290   0xF24D 0x100B      MOVW     R0,#+53515
   \      0x294   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    306          		LCD_WriteReg(0xD10C,0x00);
   \      0x298   0x2100             MOVS     R1,#+0
   \      0x29A   0xF24D 0x100C      MOVW     R0,#+53516
   \      0x29E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    307          		LCD_WriteReg(0xD10D,0xA6);
   \      0x2A2   0x21A6             MOVS     R1,#+166
   \      0x2A4   0xF24D 0x100D      MOVW     R0,#+53517
   \      0x2A8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    308          		LCD_WriteReg(0xD10E,0x00);
   \      0x2AC   0x2100             MOVS     R1,#+0
   \      0x2AE   0xF24D 0x100E      MOVW     R0,#+53518
   \      0x2B2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    309          		LCD_WriteReg(0xD10F,0xE5);
   \      0x2B6   0x21E5             MOVS     R1,#+229
   \      0x2B8   0xF24D 0x100F      MOVW     R0,#+53519
   \      0x2BC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    310          		LCD_WriteReg(0xD110,0x01);
   \      0x2C0   0x2101             MOVS     R1,#+1
   \      0x2C2   0xF24D 0x1010      MOVW     R0,#+53520
   \      0x2C6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    311          		LCD_WriteReg(0xD111,0x13);
   \      0x2CA   0x2113             MOVS     R1,#+19
   \      0x2CC   0xF24D 0x1011      MOVW     R0,#+53521
   \      0x2D0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    312          		LCD_WriteReg(0xD112,0x01);
   \      0x2D4   0x2101             MOVS     R1,#+1
   \      0x2D6   0xF24D 0x1012      MOVW     R0,#+53522
   \      0x2DA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    313          		LCD_WriteReg(0xD113,0x54);
   \      0x2DE   0x2154             MOVS     R1,#+84
   \      0x2E0   0xF24D 0x1013      MOVW     R0,#+53523
   \      0x2E4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    314          		LCD_WriteReg(0xD114,0x01);
   \      0x2E8   0x2101             MOVS     R1,#+1
   \      0x2EA   0xF24D 0x1014      MOVW     R0,#+53524
   \      0x2EE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    315          		LCD_WriteReg(0xD115,0x82);
   \      0x2F2   0x2182             MOVS     R1,#+130
   \      0x2F4   0xF24D 0x1015      MOVW     R0,#+53525
   \      0x2F8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    316          		LCD_WriteReg(0xD116,0x01);
   \      0x2FC   0x2101             MOVS     R1,#+1
   \      0x2FE   0xF24D 0x1016      MOVW     R0,#+53526
   \      0x302   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    317          		LCD_WriteReg(0xD117,0xCA);
   \      0x306   0x21CA             MOVS     R1,#+202
   \      0x308   0xF24D 0x1017      MOVW     R0,#+53527
   \      0x30C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    318          		LCD_WriteReg(0xD118,0x02);
   \      0x310   0x2102             MOVS     R1,#+2
   \      0x312   0xF24D 0x1018      MOVW     R0,#+53528
   \      0x316   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    319          		LCD_WriteReg(0xD119,0x00);
   \      0x31A   0x2100             MOVS     R1,#+0
   \      0x31C   0xF24D 0x1019      MOVW     R0,#+53529
   \      0x320   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    320          		LCD_WriteReg(0xD11A,0x02);
   \      0x324   0x2102             MOVS     R1,#+2
   \      0x326   0xF24D 0x101A      MOVW     R0,#+53530
   \      0x32A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    321          		LCD_WriteReg(0xD11B,0x01);
   \      0x32E   0x2101             MOVS     R1,#+1
   \      0x330   0xF24D 0x101B      MOVW     R0,#+53531
   \      0x334   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    322          		LCD_WriteReg(0xD11C,0x02);
   \      0x338   0x2102             MOVS     R1,#+2
   \      0x33A   0xF24D 0x101C      MOVW     R0,#+53532
   \      0x33E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    323          		LCD_WriteReg(0xD11D,0x34);
   \      0x342   0x2134             MOVS     R1,#+52
   \      0x344   0xF24D 0x101D      MOVW     R0,#+53533
   \      0x348   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    324          		LCD_WriteReg(0xD11E,0x02);
   \      0x34C   0x2102             MOVS     R1,#+2
   \      0x34E   0xF24D 0x101E      MOVW     R0,#+53534
   \      0x352   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    325          		LCD_WriteReg(0xD11F,0x67);
   \      0x356   0x2167             MOVS     R1,#+103
   \      0x358   0xF24D 0x101F      MOVW     R0,#+53535
   \      0x35C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    326          		LCD_WriteReg(0xD120,0x02);
   \      0x360   0x2102             MOVS     R1,#+2
   \      0x362   0xF24D 0x1020      MOVW     R0,#+53536
   \      0x366   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    327          		LCD_WriteReg(0xD121,0x84);
   \      0x36A   0x2184             MOVS     R1,#+132
   \      0x36C   0xF24D 0x1021      MOVW     R0,#+53537
   \      0x370   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    328          		LCD_WriteReg(0xD122,0x02);
   \      0x374   0x2102             MOVS     R1,#+2
   \      0x376   0xF24D 0x1022      MOVW     R0,#+53538
   \      0x37A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    329          		LCD_WriteReg(0xD123,0xA4);
   \      0x37E   0x21A4             MOVS     R1,#+164
   \      0x380   0xF24D 0x1023      MOVW     R0,#+53539
   \      0x384   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    330          		LCD_WriteReg(0xD124,0x02);
   \      0x388   0x2102             MOVS     R1,#+2
   \      0x38A   0xF24D 0x1024      MOVW     R0,#+53540
   \      0x38E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    331          		LCD_WriteReg(0xD125,0xB7);
   \      0x392   0x21B7             MOVS     R1,#+183
   \      0x394   0xF24D 0x1025      MOVW     R0,#+53541
   \      0x398   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    332          		LCD_WriteReg(0xD126,0x02);
   \      0x39C   0x2102             MOVS     R1,#+2
   \      0x39E   0xF24D 0x1026      MOVW     R0,#+53542
   \      0x3A2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    333          		LCD_WriteReg(0xD127,0xCF);
   \      0x3A6   0x21CF             MOVS     R1,#+207
   \      0x3A8   0xF24D 0x1027      MOVW     R0,#+53543
   \      0x3AC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    334          		LCD_WriteReg(0xD128,0x02);
   \      0x3B0   0x2102             MOVS     R1,#+2
   \      0x3B2   0xF24D 0x1028      MOVW     R0,#+53544
   \      0x3B6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    335          		LCD_WriteReg(0xD129,0xDE);
   \      0x3BA   0x21DE             MOVS     R1,#+222
   \      0x3BC   0xF24D 0x1029      MOVW     R0,#+53545
   \      0x3C0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    336          		LCD_WriteReg(0xD12A,0x02);
   \      0x3C4   0x2102             MOVS     R1,#+2
   \      0x3C6   0xF24D 0x102A      MOVW     R0,#+53546
   \      0x3CA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    337          		LCD_WriteReg(0xD12B,0xF2);
   \      0x3CE   0x21F2             MOVS     R1,#+242
   \      0x3D0   0xF24D 0x102B      MOVW     R0,#+53547
   \      0x3D4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    338          		LCD_WriteReg(0xD12C,0x02);
   \      0x3D8   0x2102             MOVS     R1,#+2
   \      0x3DA   0xF24D 0x102C      MOVW     R0,#+53548
   \      0x3DE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    339          		LCD_WriteReg(0xD12D,0xFE);
   \      0x3E2   0x21FE             MOVS     R1,#+254
   \      0x3E4   0xF24D 0x102D      MOVW     R0,#+53549
   \      0x3E8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    340          		LCD_WriteReg(0xD12E,0x03);
   \      0x3EC   0x2103             MOVS     R1,#+3
   \      0x3EE   0xF24D 0x102E      MOVW     R0,#+53550
   \      0x3F2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    341          		LCD_WriteReg(0xD12F,0x10);
   \      0x3F6   0x2110             MOVS     R1,#+16
   \      0x3F8   0xF24D 0x102F      MOVW     R0,#+53551
   \      0x3FC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    342          		LCD_WriteReg(0xD130,0x03);
   \      0x400   0x2103             MOVS     R1,#+3
   \      0x402   0xF24D 0x1030      MOVW     R0,#+53552
   \      0x406   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    343          		LCD_WriteReg(0xD131,0x33);
   \      0x40A   0x2133             MOVS     R1,#+51
   \      0x40C   0xF24D 0x1031      MOVW     R0,#+53553
   \      0x410   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    344          		LCD_WriteReg(0xD132,0x03);
   \      0x414   0x2103             MOVS     R1,#+3
   \      0x416   0xF24D 0x1032      MOVW     R0,#+53554
   \      0x41A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    345          		LCD_WriteReg(0xD133,0x6D);
   \      0x41E   0x216D             MOVS     R1,#+109
   \      0x420   0xF24D 0x1033      MOVW     R0,#+53555
   \      0x424   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    346          		LCD_WriteReg(0xD200,0x00);
   \      0x428   0x2100             MOVS     R1,#+0
   \      0x42A   0xF44F 0x4052      MOV      R0,#+53760
   \      0x42E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    347          		LCD_WriteReg(0xD201,0x33);
   \      0x432   0x2133             MOVS     R1,#+51
   \      0x434   0xF24D 0x2001      MOVW     R0,#+53761
   \      0x438   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    348          		LCD_WriteReg(0xD202,0x00);
   \      0x43C   0x2100             MOVS     R1,#+0
   \      0x43E   0xF24D 0x2002      MOVW     R0,#+53762
   \      0x442   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    349          		LCD_WriteReg(0xD203,0x34);
   \      0x446   0x2134             MOVS     R1,#+52
   \      0x448   0xF24D 0x2003      MOVW     R0,#+53763
   \      0x44C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    350          		LCD_WriteReg(0xD204,0x00);
   \      0x450   0x2100             MOVS     R1,#+0
   \      0x452   0xF24D 0x2004      MOVW     R0,#+53764
   \      0x456   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    351          		LCD_WriteReg(0xD205,0x3A);
   \      0x45A   0x213A             MOVS     R1,#+58
   \      0x45C   0xF24D 0x2005      MOVW     R0,#+53765
   \      0x460   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    352          		LCD_WriteReg(0xD206,0x00);
   \      0x464   0x2100             MOVS     R1,#+0
   \      0x466   0xF24D 0x2006      MOVW     R0,#+53766
   \      0x46A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    353          		LCD_WriteReg(0xD207,0x4A);
   \      0x46E   0x214A             MOVS     R1,#+74
   \      0x470   0xF24D 0x2007      MOVW     R0,#+53767
   \      0x474   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    354          		LCD_WriteReg(0xD208,0x00);
   \      0x478   0x2100             MOVS     R1,#+0
   \      0x47A   0xF24D 0x2008      MOVW     R0,#+53768
   \      0x47E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    355          		LCD_WriteReg(0xD209,0x5C);
   \      0x482   0x215C             MOVS     R1,#+92
   \      0x484   0xF24D 0x2009      MOVW     R0,#+53769
   \      0x488   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    356          		LCD_WriteReg(0xD20A,0x00);
   \      0x48C   0x2100             MOVS     R1,#+0
   \      0x48E   0xF24D 0x200A      MOVW     R0,#+53770
   \      0x492   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    357          
    358          		LCD_WriteReg(0xD20B,0x81);
   \      0x496   0x2181             MOVS     R1,#+129
   \      0x498   0xF24D 0x200B      MOVW     R0,#+53771
   \      0x49C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    359          		LCD_WriteReg(0xD20C,0x00);
   \      0x4A0   0x2100             MOVS     R1,#+0
   \      0x4A2   0xF24D 0x200C      MOVW     R0,#+53772
   \      0x4A6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    360          		LCD_WriteReg(0xD20D,0xA6);
   \      0x4AA   0x21A6             MOVS     R1,#+166
   \      0x4AC   0xF24D 0x200D      MOVW     R0,#+53773
   \      0x4B0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    361          		LCD_WriteReg(0xD20E,0x00);
   \      0x4B4   0x2100             MOVS     R1,#+0
   \      0x4B6   0xF24D 0x200E      MOVW     R0,#+53774
   \      0x4BA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    362          		LCD_WriteReg(0xD20F,0xE5);
   \      0x4BE   0x21E5             MOVS     R1,#+229
   \      0x4C0   0xF24D 0x200F      MOVW     R0,#+53775
   \      0x4C4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    363          		LCD_WriteReg(0xD210,0x01);
   \      0x4C8   0x2101             MOVS     R1,#+1
   \      0x4CA   0xF24D 0x2010      MOVW     R0,#+53776
   \      0x4CE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    364          		LCD_WriteReg(0xD211,0x13);
   \      0x4D2   0x2113             MOVS     R1,#+19
   \      0x4D4   0xF24D 0x2011      MOVW     R0,#+53777
   \      0x4D8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    365          		LCD_WriteReg(0xD212,0x01);
   \      0x4DC   0x2101             MOVS     R1,#+1
   \      0x4DE   0xF24D 0x2012      MOVW     R0,#+53778
   \      0x4E2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    366          		LCD_WriteReg(0xD213,0x54);
   \      0x4E6   0x2154             MOVS     R1,#+84
   \      0x4E8   0xF24D 0x2013      MOVW     R0,#+53779
   \      0x4EC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    367          		LCD_WriteReg(0xD214,0x01);
   \      0x4F0   0x2101             MOVS     R1,#+1
   \      0x4F2   0xF24D 0x2014      MOVW     R0,#+53780
   \      0x4F6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    368          		LCD_WriteReg(0xD215,0x82);
   \      0x4FA   0x2182             MOVS     R1,#+130
   \      0x4FC   0xF24D 0x2015      MOVW     R0,#+53781
   \      0x500   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    369          		LCD_WriteReg(0xD216,0x01);
   \      0x504   0x2101             MOVS     R1,#+1
   \      0x506   0xF24D 0x2016      MOVW     R0,#+53782
   \      0x50A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    370          		LCD_WriteReg(0xD217,0xCA);
   \      0x50E   0x21CA             MOVS     R1,#+202
   \      0x510   0xF24D 0x2017      MOVW     R0,#+53783
   \      0x514   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    371          		LCD_WriteReg(0xD218,0x02);
   \      0x518   0x2102             MOVS     R1,#+2
   \      0x51A   0xF24D 0x2018      MOVW     R0,#+53784
   \      0x51E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    372          		LCD_WriteReg(0xD219,0x00);
   \      0x522   0x2100             MOVS     R1,#+0
   \      0x524   0xF24D 0x2019      MOVW     R0,#+53785
   \      0x528   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    373          		LCD_WriteReg(0xD21A,0x02);
   \      0x52C   0x2102             MOVS     R1,#+2
   \      0x52E   0xF24D 0x201A      MOVW     R0,#+53786
   \      0x532   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    374          		LCD_WriteReg(0xD21B,0x01);
   \      0x536   0x2101             MOVS     R1,#+1
   \      0x538   0xF24D 0x201B      MOVW     R0,#+53787
   \      0x53C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    375          		LCD_WriteReg(0xD21C,0x02);
   \      0x540   0x2102             MOVS     R1,#+2
   \      0x542   0xF24D 0x201C      MOVW     R0,#+53788
   \      0x546   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    376          		LCD_WriteReg(0xD21D,0x34);
   \      0x54A   0x2134             MOVS     R1,#+52
   \      0x54C   0xF24D 0x201D      MOVW     R0,#+53789
   \      0x550   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    377          		LCD_WriteReg(0xD21E,0x02);
   \      0x554   0x2102             MOVS     R1,#+2
   \      0x556   0xF24D 0x201E      MOVW     R0,#+53790
   \      0x55A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    378          		LCD_WriteReg(0xD21F,0x67);
   \      0x55E   0x2167             MOVS     R1,#+103
   \      0x560   0xF24D 0x201F      MOVW     R0,#+53791
   \      0x564   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    379          		LCD_WriteReg(0xD220,0x02);
   \      0x568   0x2102             MOVS     R1,#+2
   \      0x56A   0xF24D 0x2020      MOVW     R0,#+53792
   \      0x56E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    380          		LCD_WriteReg(0xD221,0x84);
   \      0x572   0x2184             MOVS     R1,#+132
   \      0x574   0xF24D 0x2021      MOVW     R0,#+53793
   \      0x578   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    381          		LCD_WriteReg(0xD222,0x02);
   \      0x57C   0x2102             MOVS     R1,#+2
   \      0x57E   0xF24D 0x2022      MOVW     R0,#+53794
   \      0x582   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    382          		LCD_WriteReg(0xD223,0xA4);
   \      0x586   0x21A4             MOVS     R1,#+164
   \      0x588   0xF24D 0x2023      MOVW     R0,#+53795
   \      0x58C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    383          		LCD_WriteReg(0xD224,0x02);
   \      0x590   0x2102             MOVS     R1,#+2
   \      0x592   0xF24D 0x2024      MOVW     R0,#+53796
   \      0x596   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    384          		LCD_WriteReg(0xD225,0xB7);
   \      0x59A   0x21B7             MOVS     R1,#+183
   \      0x59C   0xF24D 0x2025      MOVW     R0,#+53797
   \      0x5A0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    385          		LCD_WriteReg(0xD226,0x02);
   \      0x5A4   0x2102             MOVS     R1,#+2
   \      0x5A6   0xF24D 0x2026      MOVW     R0,#+53798
   \      0x5AA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    386          		LCD_WriteReg(0xD227,0xCF);
   \      0x5AE   0x21CF             MOVS     R1,#+207
   \      0x5B0   0xF24D 0x2027      MOVW     R0,#+53799
   \      0x5B4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    387          		LCD_WriteReg(0xD228,0x02);
   \      0x5B8   0x2102             MOVS     R1,#+2
   \      0x5BA   0xF24D 0x2028      MOVW     R0,#+53800
   \      0x5BE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    388          		LCD_WriteReg(0xD229,0xDE);
   \      0x5C2   0x21DE             MOVS     R1,#+222
   \      0x5C4   0xF24D 0x2029      MOVW     R0,#+53801
   \      0x5C8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    389          		LCD_WriteReg(0xD22A,0x02);
   \      0x5CC   0x2102             MOVS     R1,#+2
   \      0x5CE   0xF24D 0x202A      MOVW     R0,#+53802
   \      0x5D2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    390          		LCD_WriteReg(0xD22B,0xF2);
   \      0x5D6   0x21F2             MOVS     R1,#+242
   \      0x5D8   0xF24D 0x202B      MOVW     R0,#+53803
   \      0x5DC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    391          		LCD_WriteReg(0xD22C,0x02);
   \      0x5E0   0x2102             MOVS     R1,#+2
   \      0x5E2   0xF24D 0x202C      MOVW     R0,#+53804
   \      0x5E6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    392          		LCD_WriteReg(0xD22D,0xFE);
   \      0x5EA   0x21FE             MOVS     R1,#+254
   \      0x5EC   0xF24D 0x202D      MOVW     R0,#+53805
   \      0x5F0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    393          		LCD_WriteReg(0xD22E,0x03);
   \      0x5F4   0x2103             MOVS     R1,#+3
   \      0x5F6   0xF24D 0x202E      MOVW     R0,#+53806
   \      0x5FA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    394          		LCD_WriteReg(0xD22F,0x10);
   \      0x5FE   0x2110             MOVS     R1,#+16
   \      0x600   0xF24D 0x202F      MOVW     R0,#+53807
   \      0x604   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    395          		LCD_WriteReg(0xD230,0x03);
   \      0x608   0x2103             MOVS     R1,#+3
   \      0x60A   0xF24D 0x2030      MOVW     R0,#+53808
   \      0x60E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    396          		LCD_WriteReg(0xD231,0x33);
   \      0x612   0x2133             MOVS     R1,#+51
   \      0x614   0xF24D 0x2031      MOVW     R0,#+53809
   \      0x618   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    397          		LCD_WriteReg(0xD232,0x03);
   \      0x61C   0x2103             MOVS     R1,#+3
   \      0x61E   0xF24D 0x2032      MOVW     R0,#+53810
   \      0x622   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    398          		LCD_WriteReg(0xD233,0x6D);
   \      0x626   0x216D             MOVS     R1,#+109
   \      0x628   0xF24D 0x2033      MOVW     R0,#+53811
   \      0x62C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    399          		LCD_WriteReg(0xD300,0x00);
   \      0x630   0x2100             MOVS     R1,#+0
   \      0x632   0xF44F 0x4053      MOV      R0,#+54016
   \      0x636   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    400          		LCD_WriteReg(0xD301,0x33);
   \      0x63A   0x2133             MOVS     R1,#+51
   \      0x63C   0xF24D 0x3001      MOVW     R0,#+54017
   \      0x640   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    401          		LCD_WriteReg(0xD302,0x00);
   \      0x644   0x2100             MOVS     R1,#+0
   \      0x646   0xF24D 0x3002      MOVW     R0,#+54018
   \      0x64A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    402          		LCD_WriteReg(0xD303,0x34);
   \      0x64E   0x2134             MOVS     R1,#+52
   \      0x650   0xF24D 0x3003      MOVW     R0,#+54019
   \      0x654   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    403          		LCD_WriteReg(0xD304,0x00);
   \      0x658   0x2100             MOVS     R1,#+0
   \      0x65A   0xF24D 0x3004      MOVW     R0,#+54020
   \      0x65E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    404          		LCD_WriteReg(0xD305,0x3A);
   \      0x662   0x213A             MOVS     R1,#+58
   \      0x664   0xF24D 0x3005      MOVW     R0,#+54021
   \      0x668   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    405          		LCD_WriteReg(0xD306,0x00);
   \      0x66C   0x2100             MOVS     R1,#+0
   \      0x66E   0xF24D 0x3006      MOVW     R0,#+54022
   \      0x672   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    406          		LCD_WriteReg(0xD307,0x4A);
   \      0x676   0x214A             MOVS     R1,#+74
   \      0x678   0xF24D 0x3007      MOVW     R0,#+54023
   \      0x67C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    407          		LCD_WriteReg(0xD308,0x00);
   \      0x680   0x2100             MOVS     R1,#+0
   \      0x682   0xF24D 0x3008      MOVW     R0,#+54024
   \      0x686   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    408          		LCD_WriteReg(0xD309,0x5C);
   \      0x68A   0x215C             MOVS     R1,#+92
   \      0x68C   0xF24D 0x3009      MOVW     R0,#+54025
   \      0x690   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    409          		LCD_WriteReg(0xD30A,0x00);
   \      0x694   0x2100             MOVS     R1,#+0
   \      0x696   0xF24D 0x300A      MOVW     R0,#+54026
   \      0x69A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    410          
    411          		LCD_WriteReg(0xD30B,0x81);
   \      0x69E   0x2181             MOVS     R1,#+129
   \      0x6A0   0xF24D 0x300B      MOVW     R0,#+54027
   \      0x6A4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    412          		LCD_WriteReg(0xD30C,0x00);
   \      0x6A8   0x2100             MOVS     R1,#+0
   \      0x6AA   0xF24D 0x300C      MOVW     R0,#+54028
   \      0x6AE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    413          		LCD_WriteReg(0xD30D,0xA6);
   \      0x6B2   0x21A6             MOVS     R1,#+166
   \      0x6B4   0xF24D 0x300D      MOVW     R0,#+54029
   \      0x6B8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    414          		LCD_WriteReg(0xD30E,0x00);
   \      0x6BC   0x2100             MOVS     R1,#+0
   \      0x6BE   0xF24D 0x300E      MOVW     R0,#+54030
   \      0x6C2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    415          		LCD_WriteReg(0xD30F,0xE5);
   \      0x6C6   0x21E5             MOVS     R1,#+229
   \      0x6C8   0xF24D 0x300F      MOVW     R0,#+54031
   \      0x6CC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    416          		LCD_WriteReg(0xD310,0x01);
   \      0x6D0   0x2101             MOVS     R1,#+1
   \      0x6D2   0xF24D 0x3010      MOVW     R0,#+54032
   \      0x6D6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    417          		LCD_WriteReg(0xD311,0x13);
   \      0x6DA   0x2113             MOVS     R1,#+19
   \      0x6DC   0xF24D 0x3011      MOVW     R0,#+54033
   \      0x6E0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    418          		LCD_WriteReg(0xD312,0x01);
   \      0x6E4   0x2101             MOVS     R1,#+1
   \      0x6E6   0xF24D 0x3012      MOVW     R0,#+54034
   \      0x6EA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    419          		LCD_WriteReg(0xD313,0x54);
   \      0x6EE   0x2154             MOVS     R1,#+84
   \      0x6F0   0xF24D 0x3013      MOVW     R0,#+54035
   \      0x6F4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    420          		LCD_WriteReg(0xD314,0x01);
   \      0x6F8   0x2101             MOVS     R1,#+1
   \      0x6FA   0xF24D 0x3014      MOVW     R0,#+54036
   \      0x6FE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    421          		LCD_WriteReg(0xD315,0x82);
   \      0x702   0x2182             MOVS     R1,#+130
   \      0x704   0xF24D 0x3015      MOVW     R0,#+54037
   \      0x708   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    422          		LCD_WriteReg(0xD316,0x01);
   \      0x70C   0x2101             MOVS     R1,#+1
   \      0x70E   0xF24D 0x3016      MOVW     R0,#+54038
   \      0x712   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    423          		LCD_WriteReg(0xD317,0xCA);
   \      0x716   0x21CA             MOVS     R1,#+202
   \      0x718   0xF24D 0x3017      MOVW     R0,#+54039
   \      0x71C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    424          		LCD_WriteReg(0xD318,0x02);
   \      0x720   0x2102             MOVS     R1,#+2
   \      0x722   0xF24D 0x3018      MOVW     R0,#+54040
   \      0x726   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    425          		LCD_WriteReg(0xD319,0x00);
   \      0x72A   0x2100             MOVS     R1,#+0
   \      0x72C   0xF24D 0x3019      MOVW     R0,#+54041
   \      0x730   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    426          		LCD_WriteReg(0xD31A,0x02);
   \      0x734   0x2102             MOVS     R1,#+2
   \      0x736   0xF24D 0x301A      MOVW     R0,#+54042
   \      0x73A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    427          		LCD_WriteReg(0xD31B,0x01);
   \      0x73E   0x2101             MOVS     R1,#+1
   \      0x740   0xF24D 0x301B      MOVW     R0,#+54043
   \      0x744   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    428          		LCD_WriteReg(0xD31C,0x02);
   \      0x748   0x2102             MOVS     R1,#+2
   \      0x74A   0xF24D 0x301C      MOVW     R0,#+54044
   \      0x74E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    429          		LCD_WriteReg(0xD31D,0x34);
   \      0x752   0x2134             MOVS     R1,#+52
   \      0x754   0xF24D 0x301D      MOVW     R0,#+54045
   \      0x758   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    430          		LCD_WriteReg(0xD31E,0x02);
   \      0x75C   0x2102             MOVS     R1,#+2
   \      0x75E   0xF24D 0x301E      MOVW     R0,#+54046
   \      0x762   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    431          		LCD_WriteReg(0xD31F,0x67);
   \      0x766   0x2167             MOVS     R1,#+103
   \      0x768   0xF24D 0x301F      MOVW     R0,#+54047
   \      0x76C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    432          		LCD_WriteReg(0xD320,0x02);
   \      0x770   0x2102             MOVS     R1,#+2
   \      0x772   0xF24D 0x3020      MOVW     R0,#+54048
   \      0x776   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    433          		LCD_WriteReg(0xD321,0x84);
   \      0x77A   0x2184             MOVS     R1,#+132
   \      0x77C   0xF24D 0x3021      MOVW     R0,#+54049
   \      0x780   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    434          		LCD_WriteReg(0xD322,0x02);
   \      0x784   0x2102             MOVS     R1,#+2
   \      0x786   0xF24D 0x3022      MOVW     R0,#+54050
   \      0x78A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    435          		LCD_WriteReg(0xD323,0xA4);
   \      0x78E   0x21A4             MOVS     R1,#+164
   \      0x790   0xF24D 0x3023      MOVW     R0,#+54051
   \      0x794   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    436          		LCD_WriteReg(0xD324,0x02);
   \      0x798   0x2102             MOVS     R1,#+2
   \      0x79A   0xF24D 0x3024      MOVW     R0,#+54052
   \      0x79E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    437          		LCD_WriteReg(0xD325,0xB7);
   \      0x7A2   0x21B7             MOVS     R1,#+183
   \      0x7A4   0xF24D 0x3025      MOVW     R0,#+54053
   \      0x7A8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    438          		LCD_WriteReg(0xD326,0x02);
   \      0x7AC   0x2102             MOVS     R1,#+2
   \      0x7AE   0xF24D 0x3026      MOVW     R0,#+54054
   \      0x7B2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    439          		LCD_WriteReg(0xD327,0xCF);
   \      0x7B6   0x21CF             MOVS     R1,#+207
   \      0x7B8   0xF24D 0x3027      MOVW     R0,#+54055
   \      0x7BC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    440          		LCD_WriteReg(0xD328,0x02);
   \      0x7C0   0x2102             MOVS     R1,#+2
   \      0x7C2   0xF24D 0x3028      MOVW     R0,#+54056
   \      0x7C6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    441          		LCD_WriteReg(0xD329,0xDE);
   \      0x7CA   0x21DE             MOVS     R1,#+222
   \      0x7CC   0xF24D 0x3029      MOVW     R0,#+54057
   \      0x7D0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    442          		LCD_WriteReg(0xD32A,0x02);
   \      0x7D4   0x2102             MOVS     R1,#+2
   \      0x7D6   0xF24D 0x302A      MOVW     R0,#+54058
   \      0x7DA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    443          		LCD_WriteReg(0xD32B,0xF2);
   \      0x7DE   0x21F2             MOVS     R1,#+242
   \      0x7E0   0xF24D 0x302B      MOVW     R0,#+54059
   \      0x7E4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    444          		LCD_WriteReg(0xD32C,0x02);
   \      0x7E8   0x2102             MOVS     R1,#+2
   \      0x7EA   0xF24D 0x302C      MOVW     R0,#+54060
   \      0x7EE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    445          		LCD_WriteReg(0xD32D,0xFE);
   \      0x7F2   0x21FE             MOVS     R1,#+254
   \      0x7F4   0xF24D 0x302D      MOVW     R0,#+54061
   \      0x7F8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    446          		LCD_WriteReg(0xD32E,0x03);
   \      0x7FC   0x2103             MOVS     R1,#+3
   \      0x7FE   0xF24D 0x302E      MOVW     R0,#+54062
   \      0x802   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    447          		LCD_WriteReg(0xD32F,0x10);
   \      0x806   0x2110             MOVS     R1,#+16
   \      0x808   0xF24D 0x302F      MOVW     R0,#+54063
   \      0x80C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    448          		LCD_WriteReg(0xD330,0x03);
   \      0x810   0x2103             MOVS     R1,#+3
   \      0x812   0xF24D 0x3030      MOVW     R0,#+54064
   \      0x816   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    449          		LCD_WriteReg(0xD331,0x33);
   \      0x81A   0x2133             MOVS     R1,#+51
   \      0x81C   0xF24D 0x3031      MOVW     R0,#+54065
   \      0x820   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    450          		LCD_WriteReg(0xD332,0x03);
   \      0x824   0x2103             MOVS     R1,#+3
   \      0x826   0xF24D 0x3032      MOVW     R0,#+54066
   \      0x82A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    451          		LCD_WriteReg(0xD333,0x6D);
   \      0x82E   0x216D             MOVS     R1,#+109
   \      0x830   0xF24D 0x3033      MOVW     R0,#+54067
   \      0x834   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    452          		LCD_WriteReg(0xD400,0x00);
   \      0x838   0x2100             MOVS     R1,#+0
   \      0x83A   0xF44F 0x4054      MOV      R0,#+54272
   \      0x83E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    453          		LCD_WriteReg(0xD401,0x33);
   \      0x842   0x2133             MOVS     R1,#+51
   \      0x844   0xF24D 0x4001      MOVW     R0,#+54273
   \      0x848   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    454          		LCD_WriteReg(0xD402,0x00);
   \      0x84C   0x2100             MOVS     R1,#+0
   \      0x84E   0xF24D 0x4002      MOVW     R0,#+54274
   \      0x852   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    455          		LCD_WriteReg(0xD403,0x34);
   \      0x856   0x2134             MOVS     R1,#+52
   \      0x858   0xF24D 0x4003      MOVW     R0,#+54275
   \      0x85C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    456          		LCD_WriteReg(0xD404,0x00);
   \      0x860   0x2100             MOVS     R1,#+0
   \      0x862   0xF24D 0x4004      MOVW     R0,#+54276
   \      0x866   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    457          		LCD_WriteReg(0xD405,0x3A);
   \      0x86A   0x213A             MOVS     R1,#+58
   \      0x86C   0xF24D 0x4005      MOVW     R0,#+54277
   \      0x870   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    458          		LCD_WriteReg(0xD406,0x00);
   \      0x874   0x2100             MOVS     R1,#+0
   \      0x876   0xF24D 0x4006      MOVW     R0,#+54278
   \      0x87A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    459          		LCD_WriteReg(0xD407,0x4A);
   \      0x87E   0x214A             MOVS     R1,#+74
   \      0x880   0xF24D 0x4007      MOVW     R0,#+54279
   \      0x884   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    460          		LCD_WriteReg(0xD408,0x00);
   \      0x888   0x2100             MOVS     R1,#+0
   \      0x88A   0xF24D 0x4008      MOVW     R0,#+54280
   \      0x88E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    461          		LCD_WriteReg(0xD409,0x5C);
   \      0x892   0x215C             MOVS     R1,#+92
   \      0x894   0xF24D 0x4009      MOVW     R0,#+54281
   \      0x898   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    462          		LCD_WriteReg(0xD40A,0x00);
   \      0x89C   0x2100             MOVS     R1,#+0
   \      0x89E   0xF24D 0x400A      MOVW     R0,#+54282
   \      0x8A2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    463          		LCD_WriteReg(0xD40B,0x81);
   \      0x8A6   0x2181             MOVS     R1,#+129
   \      0x8A8   0xF24D 0x400B      MOVW     R0,#+54283
   \      0x8AC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    464          
    465          		LCD_WriteReg(0xD40C,0x00);
   \      0x8B0   0x2100             MOVS     R1,#+0
   \      0x8B2   0xF24D 0x400C      MOVW     R0,#+54284
   \      0x8B6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    466          		LCD_WriteReg(0xD40D,0xA6);
   \      0x8BA   0x21A6             MOVS     R1,#+166
   \      0x8BC   0xF24D 0x400D      MOVW     R0,#+54285
   \      0x8C0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    467          		LCD_WriteReg(0xD40E,0x00);
   \      0x8C4   0x2100             MOVS     R1,#+0
   \      0x8C6   0xF24D 0x400E      MOVW     R0,#+54286
   \      0x8CA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    468          		LCD_WriteReg(0xD40F,0xE5);
   \      0x8CE   0x21E5             MOVS     R1,#+229
   \      0x8D0   0xF24D 0x400F      MOVW     R0,#+54287
   \      0x8D4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    469          		LCD_WriteReg(0xD410,0x01);
   \      0x8D8   0x2101             MOVS     R1,#+1
   \      0x8DA   0xF24D 0x4010      MOVW     R0,#+54288
   \      0x8DE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    470          		LCD_WriteReg(0xD411,0x13);
   \      0x8E2   0x2113             MOVS     R1,#+19
   \      0x8E4   0xF24D 0x4011      MOVW     R0,#+54289
   \      0x8E8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    471          		LCD_WriteReg(0xD412,0x01);
   \      0x8EC   0x2101             MOVS     R1,#+1
   \      0x8EE   0xF24D 0x4012      MOVW     R0,#+54290
   \      0x8F2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    472          		LCD_WriteReg(0xD413,0x54);
   \      0x8F6   0x2154             MOVS     R1,#+84
   \      0x8F8   0xF24D 0x4013      MOVW     R0,#+54291
   \      0x8FC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    473          		LCD_WriteReg(0xD414,0x01);
   \      0x900   0x2101             MOVS     R1,#+1
   \      0x902   0xF24D 0x4014      MOVW     R0,#+54292
   \      0x906   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    474          		LCD_WriteReg(0xD415,0x82);
   \      0x90A   0x2182             MOVS     R1,#+130
   \      0x90C   0xF24D 0x4015      MOVW     R0,#+54293
   \      0x910   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    475          		LCD_WriteReg(0xD416,0x01);
   \      0x914   0x2101             MOVS     R1,#+1
   \      0x916   0xF24D 0x4016      MOVW     R0,#+54294
   \      0x91A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    476          		LCD_WriteReg(0xD417,0xCA);
   \      0x91E   0x21CA             MOVS     R1,#+202
   \      0x920   0xF24D 0x4017      MOVW     R0,#+54295
   \      0x924   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    477          		LCD_WriteReg(0xD418,0x02);
   \      0x928   0x2102             MOVS     R1,#+2
   \      0x92A   0xF24D 0x4018      MOVW     R0,#+54296
   \      0x92E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    478          		LCD_WriteReg(0xD419,0x00);
   \      0x932   0x2100             MOVS     R1,#+0
   \      0x934   0xF24D 0x4019      MOVW     R0,#+54297
   \      0x938   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    479          		LCD_WriteReg(0xD41A,0x02);
   \      0x93C   0x2102             MOVS     R1,#+2
   \      0x93E   0xF24D 0x401A      MOVW     R0,#+54298
   \      0x942   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    480          		LCD_WriteReg(0xD41B,0x01);
   \      0x946   0x2101             MOVS     R1,#+1
   \      0x948   0xF24D 0x401B      MOVW     R0,#+54299
   \      0x94C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    481          		LCD_WriteReg(0xD41C,0x02);
   \      0x950   0x2102             MOVS     R1,#+2
   \      0x952   0xF24D 0x401C      MOVW     R0,#+54300
   \      0x956   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    482          		LCD_WriteReg(0xD41D,0x34);
   \      0x95A   0x2134             MOVS     R1,#+52
   \      0x95C   0xF24D 0x401D      MOVW     R0,#+54301
   \      0x960   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    483          		LCD_WriteReg(0xD41E,0x02);
   \      0x964   0x2102             MOVS     R1,#+2
   \      0x966   0xF24D 0x401E      MOVW     R0,#+54302
   \      0x96A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    484          		LCD_WriteReg(0xD41F,0x67);
   \      0x96E   0x2167             MOVS     R1,#+103
   \      0x970   0xF24D 0x401F      MOVW     R0,#+54303
   \      0x974   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    485          		LCD_WriteReg(0xD420,0x02);
   \      0x978   0x2102             MOVS     R1,#+2
   \      0x97A   0xF24D 0x4020      MOVW     R0,#+54304
   \      0x97E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    486          		LCD_WriteReg(0xD421,0x84);
   \      0x982   0x2184             MOVS     R1,#+132
   \      0x984   0xF24D 0x4021      MOVW     R0,#+54305
   \      0x988   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    487          		LCD_WriteReg(0xD422,0x02);
   \      0x98C   0x2102             MOVS     R1,#+2
   \      0x98E   0xF24D 0x4022      MOVW     R0,#+54306
   \      0x992   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    488          		LCD_WriteReg(0xD423,0xA4);
   \      0x996   0x21A4             MOVS     R1,#+164
   \      0x998   0xF24D 0x4023      MOVW     R0,#+54307
   \      0x99C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    489          		LCD_WriteReg(0xD424,0x02);
   \      0x9A0   0x2102             MOVS     R1,#+2
   \      0x9A2   0xF24D 0x4024      MOVW     R0,#+54308
   \      0x9A6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    490          		LCD_WriteReg(0xD425,0xB7);
   \      0x9AA   0x21B7             MOVS     R1,#+183
   \      0x9AC   0xF24D 0x4025      MOVW     R0,#+54309
   \      0x9B0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    491          		LCD_WriteReg(0xD426,0x02);
   \      0x9B4   0x2102             MOVS     R1,#+2
   \      0x9B6   0xF24D 0x4026      MOVW     R0,#+54310
   \      0x9BA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    492          		LCD_WriteReg(0xD427,0xCF);
   \      0x9BE   0x21CF             MOVS     R1,#+207
   \      0x9C0   0xF24D 0x4027      MOVW     R0,#+54311
   \      0x9C4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    493          		LCD_WriteReg(0xD428,0x02);
   \      0x9C8   0x2102             MOVS     R1,#+2
   \      0x9CA   0xF24D 0x4028      MOVW     R0,#+54312
   \      0x9CE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    494          		LCD_WriteReg(0xD429,0xDE);
   \      0x9D2   0x21DE             MOVS     R1,#+222
   \      0x9D4   0xF24D 0x4029      MOVW     R0,#+54313
   \      0x9D8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    495          		LCD_WriteReg(0xD42A,0x02);
   \      0x9DC   0x2102             MOVS     R1,#+2
   \      0x9DE   0xF24D 0x402A      MOVW     R0,#+54314
   \      0x9E2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    496          		LCD_WriteReg(0xD42B,0xF2);
   \      0x9E6   0x21F2             MOVS     R1,#+242
   \      0x9E8   0xF24D 0x402B      MOVW     R0,#+54315
   \      0x9EC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    497          		LCD_WriteReg(0xD42C,0x02);
   \      0x9F0   0x2102             MOVS     R1,#+2
   \      0x9F2   0xF24D 0x402C      MOVW     R0,#+54316
   \      0x9F6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    498          		LCD_WriteReg(0xD42D,0xFE);
   \      0x9FA   0x21FE             MOVS     R1,#+254
   \      0x9FC   0xF24D 0x402D      MOVW     R0,#+54317
   \      0xA00   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    499          		LCD_WriteReg(0xD42E,0x03);
   \      0xA04   0x2103             MOVS     R1,#+3
   \      0xA06   0xF24D 0x402E      MOVW     R0,#+54318
   \      0xA0A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    500          		LCD_WriteReg(0xD42F,0x10);
   \      0xA0E   0x2110             MOVS     R1,#+16
   \      0xA10   0xF24D 0x402F      MOVW     R0,#+54319
   \      0xA14   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    501          		LCD_WriteReg(0xD430,0x03);
   \      0xA18   0x2103             MOVS     R1,#+3
   \      0xA1A   0xF24D 0x4030      MOVW     R0,#+54320
   \      0xA1E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    502          		LCD_WriteReg(0xD431,0x33);
   \      0xA22   0x2133             MOVS     R1,#+51
   \      0xA24   0xF24D 0x4031      MOVW     R0,#+54321
   \      0xA28   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    503          		LCD_WriteReg(0xD432,0x03);
   \      0xA2C   0x2103             MOVS     R1,#+3
   \      0xA2E   0xF24D 0x4032      MOVW     R0,#+54322
   \      0xA32   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    504          		LCD_WriteReg(0xD433,0x6D);
   \      0xA36   0x216D             MOVS     R1,#+109
   \      0xA38   0xF24D 0x4033      MOVW     R0,#+54323
   \      0xA3C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    505          		LCD_WriteReg(0xD500,0x00);
   \      0xA40   0x2100             MOVS     R1,#+0
   \      0xA42   0xF44F 0x4055      MOV      R0,#+54528
   \      0xA46   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    506          		LCD_WriteReg(0xD501,0x33);
   \      0xA4A   0x2133             MOVS     R1,#+51
   \      0xA4C   0xF24D 0x5001      MOVW     R0,#+54529
   \      0xA50   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    507          		LCD_WriteReg(0xD502,0x00);
   \      0xA54   0x2100             MOVS     R1,#+0
   \      0xA56   0xF24D 0x5002      MOVW     R0,#+54530
   \      0xA5A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    508          		LCD_WriteReg(0xD503,0x34);
   \      0xA5E   0x2134             MOVS     R1,#+52
   \      0xA60   0xF24D 0x5003      MOVW     R0,#+54531
   \      0xA64   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    509          		LCD_WriteReg(0xD504,0x00);
   \      0xA68   0x2100             MOVS     R1,#+0
   \      0xA6A   0xF24D 0x5004      MOVW     R0,#+54532
   \      0xA6E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    510          		LCD_WriteReg(0xD505,0x3A);
   \      0xA72   0x213A             MOVS     R1,#+58
   \      0xA74   0xF24D 0x5005      MOVW     R0,#+54533
   \      0xA78   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    511          		LCD_WriteReg(0xD506,0x00);
   \      0xA7C   0x2100             MOVS     R1,#+0
   \      0xA7E   0xF24D 0x5006      MOVW     R0,#+54534
   \      0xA82   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    512          		LCD_WriteReg(0xD507,0x4A);
   \      0xA86   0x214A             MOVS     R1,#+74
   \      0xA88   0xF24D 0x5007      MOVW     R0,#+54535
   \      0xA8C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    513          		LCD_WriteReg(0xD508,0x00);
   \      0xA90   0x2100             MOVS     R1,#+0
   \      0xA92   0xF24D 0x5008      MOVW     R0,#+54536
   \      0xA96   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    514          		LCD_WriteReg(0xD509,0x5C);
   \      0xA9A   0x215C             MOVS     R1,#+92
   \      0xA9C   0xF24D 0x5009      MOVW     R0,#+54537
   \      0xAA0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    515          		LCD_WriteReg(0xD50A,0x00);
   \      0xAA4   0x2100             MOVS     R1,#+0
   \      0xAA6   0xF24D 0x500A      MOVW     R0,#+54538
   \      0xAAA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    516          		LCD_WriteReg(0xD50B,0x81);
   \      0xAAE   0x2181             MOVS     R1,#+129
   \      0xAB0   0xF24D 0x500B      MOVW     R0,#+54539
   \      0xAB4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    517          
    518          		LCD_WriteReg(0xD50C,0x00);
   \      0xAB8   0x2100             MOVS     R1,#+0
   \      0xABA   0xF24D 0x500C      MOVW     R0,#+54540
   \      0xABE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    519          		LCD_WriteReg(0xD50D,0xA6);
   \      0xAC2   0x21A6             MOVS     R1,#+166
   \      0xAC4   0xF24D 0x500D      MOVW     R0,#+54541
   \      0xAC8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    520          		LCD_WriteReg(0xD50E,0x00);
   \      0xACC   0x2100             MOVS     R1,#+0
   \      0xACE   0xF24D 0x500E      MOVW     R0,#+54542
   \      0xAD2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    521          		LCD_WriteReg(0xD50F,0xE5);
   \      0xAD6   0x21E5             MOVS     R1,#+229
   \      0xAD8   0xF24D 0x500F      MOVW     R0,#+54543
   \      0xADC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    522          		LCD_WriteReg(0xD510,0x01);
   \      0xAE0   0x2101             MOVS     R1,#+1
   \      0xAE2   0xF24D 0x5010      MOVW     R0,#+54544
   \      0xAE6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    523          		LCD_WriteReg(0xD511,0x13);
   \      0xAEA   0x2113             MOVS     R1,#+19
   \      0xAEC   0xF24D 0x5011      MOVW     R0,#+54545
   \      0xAF0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    524          		LCD_WriteReg(0xD512,0x01);
   \      0xAF4   0x2101             MOVS     R1,#+1
   \      0xAF6   0xF24D 0x5012      MOVW     R0,#+54546
   \      0xAFA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    525          		LCD_WriteReg(0xD513,0x54);
   \      0xAFE   0x2154             MOVS     R1,#+84
   \      0xB00   0xF24D 0x5013      MOVW     R0,#+54547
   \      0xB04   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    526          		LCD_WriteReg(0xD514,0x01);
   \      0xB08   0x2101             MOVS     R1,#+1
   \      0xB0A   0xF24D 0x5014      MOVW     R0,#+54548
   \      0xB0E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    527          		LCD_WriteReg(0xD515,0x82);
   \      0xB12   0x2182             MOVS     R1,#+130
   \      0xB14   0xF24D 0x5015      MOVW     R0,#+54549
   \      0xB18   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    528          		LCD_WriteReg(0xD516,0x01);
   \      0xB1C   0x2101             MOVS     R1,#+1
   \      0xB1E   0xF24D 0x5016      MOVW     R0,#+54550
   \      0xB22   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    529          		LCD_WriteReg(0xD517,0xCA);
   \      0xB26   0x21CA             MOVS     R1,#+202
   \      0xB28   0xF24D 0x5017      MOVW     R0,#+54551
   \      0xB2C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    530          		LCD_WriteReg(0xD518,0x02);
   \      0xB30   0x2102             MOVS     R1,#+2
   \      0xB32   0xF24D 0x5018      MOVW     R0,#+54552
   \      0xB36   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    531          		LCD_WriteReg(0xD519,0x00);
   \      0xB3A   0x2100             MOVS     R1,#+0
   \      0xB3C   0xF24D 0x5019      MOVW     R0,#+54553
   \      0xB40   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    532          		LCD_WriteReg(0xD51A,0x02);
   \      0xB44   0x2102             MOVS     R1,#+2
   \      0xB46   0xF24D 0x501A      MOVW     R0,#+54554
   \      0xB4A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    533          		LCD_WriteReg(0xD51B,0x01);
   \      0xB4E   0x2101             MOVS     R1,#+1
   \      0xB50   0xF24D 0x501B      MOVW     R0,#+54555
   \      0xB54   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    534          		LCD_WriteReg(0xD51C,0x02);
   \      0xB58   0x2102             MOVS     R1,#+2
   \      0xB5A   0xF24D 0x501C      MOVW     R0,#+54556
   \      0xB5E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    535          		LCD_WriteReg(0xD51D,0x34);
   \      0xB62   0x2134             MOVS     R1,#+52
   \      0xB64   0xF24D 0x501D      MOVW     R0,#+54557
   \      0xB68   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    536          		LCD_WriteReg(0xD51E,0x02);
   \      0xB6C   0x2102             MOVS     R1,#+2
   \      0xB6E   0xF24D 0x501E      MOVW     R0,#+54558
   \      0xB72   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    537          		LCD_WriteReg(0xD51F,0x67);
   \      0xB76   0x2167             MOVS     R1,#+103
   \      0xB78   0xF24D 0x501F      MOVW     R0,#+54559
   \      0xB7C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    538          		LCD_WriteReg(0xD520,0x02);
   \      0xB80   0x2102             MOVS     R1,#+2
   \      0xB82   0xF24D 0x5020      MOVW     R0,#+54560
   \      0xB86   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    539          		LCD_WriteReg(0xD521,0x84);
   \      0xB8A   0x2184             MOVS     R1,#+132
   \      0xB8C   0xF24D 0x5021      MOVW     R0,#+54561
   \      0xB90   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    540          		LCD_WriteReg(0xD522,0x02);
   \      0xB94   0x2102             MOVS     R1,#+2
   \      0xB96   0xF24D 0x5022      MOVW     R0,#+54562
   \      0xB9A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    541          		LCD_WriteReg(0xD523,0xA4);
   \      0xB9E   0x21A4             MOVS     R1,#+164
   \      0xBA0   0xF24D 0x5023      MOVW     R0,#+54563
   \      0xBA4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    542          		LCD_WriteReg(0xD524,0x02);
   \      0xBA8   0x2102             MOVS     R1,#+2
   \      0xBAA   0xF24D 0x5024      MOVW     R0,#+54564
   \      0xBAE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    543          		LCD_WriteReg(0xD525,0xB7);
   \      0xBB2   0x21B7             MOVS     R1,#+183
   \      0xBB4   0xF24D 0x5025      MOVW     R0,#+54565
   \      0xBB8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    544          		LCD_WriteReg(0xD526,0x02);
   \      0xBBC   0x2102             MOVS     R1,#+2
   \      0xBBE   0xF24D 0x5026      MOVW     R0,#+54566
   \      0xBC2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    545          		LCD_WriteReg(0xD527,0xCF);
   \      0xBC6   0x21CF             MOVS     R1,#+207
   \      0xBC8   0xF24D 0x5027      MOVW     R0,#+54567
   \      0xBCC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    546          		LCD_WriteReg(0xD528,0x02);
   \      0xBD0   0x2102             MOVS     R1,#+2
   \      0xBD2   0xF24D 0x5028      MOVW     R0,#+54568
   \      0xBD6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    547          		LCD_WriteReg(0xD529,0xDE);
   \      0xBDA   0x21DE             MOVS     R1,#+222
   \      0xBDC   0xF24D 0x5029      MOVW     R0,#+54569
   \      0xBE0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    548          		LCD_WriteReg(0xD52A,0x02);
   \      0xBE4   0x2102             MOVS     R1,#+2
   \      0xBE6   0xF24D 0x502A      MOVW     R0,#+54570
   \      0xBEA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    549          		LCD_WriteReg(0xD52B,0xF2);
   \      0xBEE   0x21F2             MOVS     R1,#+242
   \      0xBF0   0xF24D 0x502B      MOVW     R0,#+54571
   \      0xBF4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    550          		LCD_WriteReg(0xD52C,0x02);
   \      0xBF8   0x2102             MOVS     R1,#+2
   \      0xBFA   0xF24D 0x502C      MOVW     R0,#+54572
   \      0xBFE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    551          		LCD_WriteReg(0xD52D,0xFE);
   \      0xC02   0x21FE             MOVS     R1,#+254
   \      0xC04   0xF24D 0x502D      MOVW     R0,#+54573
   \      0xC08   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    552          		LCD_WriteReg(0xD52E,0x03);
   \      0xC0C   0x2103             MOVS     R1,#+3
   \      0xC0E   0xF24D 0x502E      MOVW     R0,#+54574
   \      0xC12   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    553          		LCD_WriteReg(0xD52F,0x10);
   \      0xC16   0x2110             MOVS     R1,#+16
   \      0xC18   0xF24D 0x502F      MOVW     R0,#+54575
   \      0xC1C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    554          		LCD_WriteReg(0xD530,0x03);
   \      0xC20   0x2103             MOVS     R1,#+3
   \      0xC22   0xF24D 0x5030      MOVW     R0,#+54576
   \      0xC26   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    555          		LCD_WriteReg(0xD531,0x33);
   \      0xC2A   0x2133             MOVS     R1,#+51
   \      0xC2C   0xF24D 0x5031      MOVW     R0,#+54577
   \      0xC30   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    556          		LCD_WriteReg(0xD532,0x03);
   \      0xC34   0x2103             MOVS     R1,#+3
   \      0xC36   0xF24D 0x5032      MOVW     R0,#+54578
   \      0xC3A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    557          		LCD_WriteReg(0xD533,0x6D);
   \      0xC3E   0x216D             MOVS     R1,#+109
   \      0xC40   0xF24D 0x5033      MOVW     R0,#+54579
   \      0xC44   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    558          		LCD_WriteReg(0xD600,0x00);
   \      0xC48   0x2100             MOVS     R1,#+0
   \      0xC4A   0xF44F 0x4056      MOV      R0,#+54784
   \      0xC4E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    559          		LCD_WriteReg(0xD601,0x33);
   \      0xC52   0x2133             MOVS     R1,#+51
   \      0xC54   0xF24D 0x6001      MOVW     R0,#+54785
   \      0xC58   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    560          		LCD_WriteReg(0xD602,0x00);
   \      0xC5C   0x2100             MOVS     R1,#+0
   \      0xC5E   0xF24D 0x6002      MOVW     R0,#+54786
   \      0xC62   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    561          		LCD_WriteReg(0xD603,0x34);
   \      0xC66   0x2134             MOVS     R1,#+52
   \      0xC68   0xF24D 0x6003      MOVW     R0,#+54787
   \      0xC6C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    562          		LCD_WriteReg(0xD604,0x00);
   \      0xC70   0x2100             MOVS     R1,#+0
   \      0xC72   0xF24D 0x6004      MOVW     R0,#+54788
   \      0xC76   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    563          		LCD_WriteReg(0xD605,0x3A);
   \      0xC7A   0x213A             MOVS     R1,#+58
   \      0xC7C   0xF24D 0x6005      MOVW     R0,#+54789
   \      0xC80   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    564          		LCD_WriteReg(0xD606,0x00);
   \      0xC84   0x2100             MOVS     R1,#+0
   \      0xC86   0xF24D 0x6006      MOVW     R0,#+54790
   \      0xC8A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    565          		LCD_WriteReg(0xD607,0x4A);
   \      0xC8E   0x214A             MOVS     R1,#+74
   \      0xC90   0xF24D 0x6007      MOVW     R0,#+54791
   \      0xC94   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    566          		LCD_WriteReg(0xD608,0x00);
   \      0xC98   0x2100             MOVS     R1,#+0
   \      0xC9A   0xF24D 0x6008      MOVW     R0,#+54792
   \      0xC9E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    567          		LCD_WriteReg(0xD609,0x5C);
   \      0xCA2   0x215C             MOVS     R1,#+92
   \      0xCA4   0xF24D 0x6009      MOVW     R0,#+54793
   \      0xCA8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    568          		LCD_WriteReg(0xD60A,0x00);
   \      0xCAC   0x2100             MOVS     R1,#+0
   \      0xCAE   0xF24D 0x600A      MOVW     R0,#+54794
   \      0xCB2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    569          		LCD_WriteReg(0xD60B,0x81);
   \      0xCB6   0x2181             MOVS     R1,#+129
   \      0xCB8   0xF24D 0x600B      MOVW     R0,#+54795
   \      0xCBC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    570          
    571          		LCD_WriteReg(0xD60C,0x00);
   \      0xCC0   0x2100             MOVS     R1,#+0
   \      0xCC2   0xF24D 0x600C      MOVW     R0,#+54796
   \      0xCC6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    572          		LCD_WriteReg(0xD60D,0xA6);
   \      0xCCA   0x21A6             MOVS     R1,#+166
   \      0xCCC   0xF24D 0x600D      MOVW     R0,#+54797
   \      0xCD0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    573          		LCD_WriteReg(0xD60E,0x00);
   \      0xCD4   0x2100             MOVS     R1,#+0
   \      0xCD6   0xF24D 0x600E      MOVW     R0,#+54798
   \      0xCDA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    574          		LCD_WriteReg(0xD60F,0xE5);
   \      0xCDE   0x21E5             MOVS     R1,#+229
   \      0xCE0   0xF24D 0x600F      MOVW     R0,#+54799
   \      0xCE4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    575          		LCD_WriteReg(0xD610,0x01);
   \      0xCE8   0x2101             MOVS     R1,#+1
   \      0xCEA   0xF24D 0x6010      MOVW     R0,#+54800
   \      0xCEE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    576          		LCD_WriteReg(0xD611,0x13);
   \      0xCF2   0x2113             MOVS     R1,#+19
   \      0xCF4   0xF24D 0x6011      MOVW     R0,#+54801
   \      0xCF8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    577          		LCD_WriteReg(0xD612,0x01);
   \      0xCFC   0x2101             MOVS     R1,#+1
   \      0xCFE   0xF24D 0x6012      MOVW     R0,#+54802
   \      0xD02   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    578          		LCD_WriteReg(0xD613,0x54);
   \      0xD06   0x2154             MOVS     R1,#+84
   \      0xD08   0xF24D 0x6013      MOVW     R0,#+54803
   \      0xD0C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    579          		LCD_WriteReg(0xD614,0x01);
   \      0xD10   0x2101             MOVS     R1,#+1
   \      0xD12   0xF24D 0x6014      MOVW     R0,#+54804
   \      0xD16   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    580          		LCD_WriteReg(0xD615,0x82);
   \      0xD1A   0x2182             MOVS     R1,#+130
   \      0xD1C   0xF24D 0x6015      MOVW     R0,#+54805
   \      0xD20   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    581          		LCD_WriteReg(0xD616,0x01);
   \      0xD24   0x2101             MOVS     R1,#+1
   \      0xD26   0xF24D 0x6016      MOVW     R0,#+54806
   \      0xD2A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    582          		LCD_WriteReg(0xD617,0xCA);
   \      0xD2E   0x21CA             MOVS     R1,#+202
   \      0xD30   0xF24D 0x6017      MOVW     R0,#+54807
   \      0xD34   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    583          		LCD_WriteReg(0xD618,0x02);
   \      0xD38   0x2102             MOVS     R1,#+2
   \      0xD3A   0xF24D 0x6018      MOVW     R0,#+54808
   \      0xD3E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    584          		LCD_WriteReg(0xD619,0x00);
   \      0xD42   0x2100             MOVS     R1,#+0
   \      0xD44   0xF24D 0x6019      MOVW     R0,#+54809
   \      0xD48   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    585          		LCD_WriteReg(0xD61A,0x02);
   \      0xD4C   0x2102             MOVS     R1,#+2
   \      0xD4E   0xF24D 0x601A      MOVW     R0,#+54810
   \      0xD52   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    586          		LCD_WriteReg(0xD61B,0x01);
   \      0xD56   0x2101             MOVS     R1,#+1
   \      0xD58   0xF24D 0x601B      MOVW     R0,#+54811
   \      0xD5C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    587          		LCD_WriteReg(0xD61C,0x02);
   \      0xD60   0x2102             MOVS     R1,#+2
   \      0xD62   0xF24D 0x601C      MOVW     R0,#+54812
   \      0xD66   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    588          		LCD_WriteReg(0xD61D,0x34);
   \      0xD6A   0x2134             MOVS     R1,#+52
   \      0xD6C   0xF24D 0x601D      MOVW     R0,#+54813
   \      0xD70   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    589          		LCD_WriteReg(0xD61E,0x02);
   \      0xD74   0x2102             MOVS     R1,#+2
   \      0xD76   0xF24D 0x601E      MOVW     R0,#+54814
   \      0xD7A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    590          		LCD_WriteReg(0xD61F,0x67);
   \      0xD7E   0x2167             MOVS     R1,#+103
   \      0xD80   0xF24D 0x601F      MOVW     R0,#+54815
   \      0xD84   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    591          		LCD_WriteReg(0xD620,0x02);
   \      0xD88   0x2102             MOVS     R1,#+2
   \      0xD8A   0xF24D 0x6020      MOVW     R0,#+54816
   \      0xD8E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    592          		LCD_WriteReg(0xD621,0x84);
   \      0xD92   0x2184             MOVS     R1,#+132
   \      0xD94   0xF24D 0x6021      MOVW     R0,#+54817
   \      0xD98   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    593          		LCD_WriteReg(0xD622,0x02);
   \      0xD9C   0x2102             MOVS     R1,#+2
   \      0xD9E   0xF24D 0x6022      MOVW     R0,#+54818
   \      0xDA2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    594          		LCD_WriteReg(0xD623,0xA4);
   \      0xDA6   0x21A4             MOVS     R1,#+164
   \      0xDA8   0xF24D 0x6023      MOVW     R0,#+54819
   \      0xDAC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    595          		LCD_WriteReg(0xD624,0x02);
   \      0xDB0   0x2102             MOVS     R1,#+2
   \      0xDB2   0xF24D 0x6024      MOVW     R0,#+54820
   \      0xDB6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    596          		LCD_WriteReg(0xD625,0xB7);
   \      0xDBA   0x21B7             MOVS     R1,#+183
   \      0xDBC   0xF24D 0x6025      MOVW     R0,#+54821
   \      0xDC0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    597          		LCD_WriteReg(0xD626,0x02);
   \      0xDC4   0x2102             MOVS     R1,#+2
   \      0xDC6   0xF24D 0x6026      MOVW     R0,#+54822
   \      0xDCA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    598          		LCD_WriteReg(0xD627,0xCF);
   \      0xDCE   0x21CF             MOVS     R1,#+207
   \      0xDD0   0xF24D 0x6027      MOVW     R0,#+54823
   \      0xDD4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    599          		LCD_WriteReg(0xD628,0x02);
   \      0xDD8   0x2102             MOVS     R1,#+2
   \      0xDDA   0xF24D 0x6028      MOVW     R0,#+54824
   \      0xDDE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    600          		LCD_WriteReg(0xD629,0xDE);
   \      0xDE2   0x21DE             MOVS     R1,#+222
   \      0xDE4   0xF24D 0x6029      MOVW     R0,#+54825
   \      0xDE8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    601          		LCD_WriteReg(0xD62A,0x02);
   \      0xDEC   0x2102             MOVS     R1,#+2
   \      0xDEE   0xF24D 0x602A      MOVW     R0,#+54826
   \      0xDF2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    602          		LCD_WriteReg(0xD62B,0xF2);
   \      0xDF6   0x21F2             MOVS     R1,#+242
   \      0xDF8   0xF24D 0x602B      MOVW     R0,#+54827
   \      0xDFC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    603          		LCD_WriteReg(0xD62C,0x02);
   \      0xE00   0x2102             MOVS     R1,#+2
   \      0xE02   0xF24D 0x602C      MOVW     R0,#+54828
   \      0xE06   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    604          		LCD_WriteReg(0xD62D,0xFE);
   \      0xE0A   0x21FE             MOVS     R1,#+254
   \      0xE0C   0xF24D 0x602D      MOVW     R0,#+54829
   \      0xE10   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    605          		LCD_WriteReg(0xD62E,0x03);
   \      0xE14   0x2103             MOVS     R1,#+3
   \      0xE16   0xF24D 0x602E      MOVW     R0,#+54830
   \      0xE1A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    606          		LCD_WriteReg(0xD62F,0x10);
   \      0xE1E   0x2110             MOVS     R1,#+16
   \      0xE20   0xF24D 0x602F      MOVW     R0,#+54831
   \      0xE24   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    607          		LCD_WriteReg(0xD630,0x03);
   \      0xE28   0x2103             MOVS     R1,#+3
   \      0xE2A   0xF24D 0x6030      MOVW     R0,#+54832
   \      0xE2E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    608          		LCD_WriteReg(0xD631,0x33);
   \      0xE32   0x2133             MOVS     R1,#+51
   \      0xE34   0xF24D 0x6031      MOVW     R0,#+54833
   \      0xE38   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    609          		LCD_WriteReg(0xD632,0x03);
   \      0xE3C   0x2103             MOVS     R1,#+3
   \      0xE3E   0xF24D 0x6032      MOVW     R0,#+54834
   \      0xE42   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    610          		LCD_WriteReg(0xD633,0x6D);
   \      0xE46   0x216D             MOVS     R1,#+109
   \      0xE48   0xF24D 0x6033      MOVW     R0,#+54835
   \      0xE4C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    611          		//LV2 Page 0 enable
    612          		LCD_WriteReg(0xF000,0x55);
   \      0xE50   0x2155             MOVS     R1,#+85
   \      0xE52   0xF44F 0x4070      MOV      R0,#+61440
   \      0xE56   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    613          		LCD_WriteReg(0xF001,0xAA);
   \      0xE5A   0x21AA             MOVS     R1,#+170
   \      0xE5C   0xF24F 0x0001      MOVW     R0,#+61441
   \      0xE60   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    614          		LCD_WriteReg(0xF002,0x52);
   \      0xE64   0x2152             MOVS     R1,#+82
   \      0xE66   0xF24F 0x0002      MOVW     R0,#+61442
   \      0xE6A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    615          		LCD_WriteReg(0xF003,0x08);
   \      0xE6E   0x2108             MOVS     R1,#+8
   \      0xE70   0xF24F 0x0003      MOVW     R0,#+61443
   \      0xE74   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    616          		LCD_WriteReg(0xF004,0x00);
   \      0xE78   0x2100             MOVS     R1,#+0
   \      0xE7A   0xF24F 0x0004      MOVW     R0,#+61444
   \      0xE7E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    617          		//Display control
    618          		LCD_WriteReg(0xB100, 0xCC);
   \      0xE82   0x21CC             MOVS     R1,#+204
   \      0xE84   0xF44F 0x4031      MOV      R0,#+45312
   \      0xE88   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    619          		LCD_WriteReg(0xB101, 0x00);
   \      0xE8C   0x2100             MOVS     R1,#+0
   \      0xE8E   0x0030             MOVS     R0,R6
   \      0xE90   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    620          		//Source hold time
    621          		LCD_WriteReg(0xB600,0x05);
   \      0xE94   0x2105             MOVS     R1,#+5
   \      0xE96   0xF44F 0x4036      MOV      R0,#+46592
   \      0xE9A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    622          		//Gate EQ control
    623          		LCD_WriteReg(0xB700,0x70);
   \      0xE9E   0x2170             MOVS     R1,#+112
   \      0xEA0   0xF44F 0x4037      MOV      R0,#+46848
   \      0xEA4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    624          		LCD_WriteReg(0xB701,0x70);
   \      0xEA8   0x2170             MOVS     R1,#+112
   \      0xEAA   0x0038             MOVS     R0,R7
   \      0xEAC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    625          		//Source EQ control (Mode 2)
    626          		LCD_WriteReg(0xB800,0x01);
   \      0xEB0   0x2101             MOVS     R1,#+1
   \      0xEB2   0xF44F 0x4038      MOV      R0,#+47104
   \      0xEB6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    627          		LCD_WriteReg(0xB801,0x03);
   \      0xEBA   0x2103             MOVS     R1,#+3
   \      0xEBC   0x4640             MOV      R0,R8
   \      0xEBE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    628          		LCD_WriteReg(0xB802,0x03);
   \      0xEC2   0x2103             MOVS     R1,#+3
   \      0xEC4   0x4648             MOV      R0,R9
   \      0xEC6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    629          		LCD_WriteReg(0xB803,0x03);
   \      0xECA   0x2103             MOVS     R1,#+3
   \      0xECC   0xF64B 0x0003      MOVW     R0,#+47107
   \      0xED0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    630          		//Inversion mode (2-dot)
    631                  //LCD_WriteReg(0xBC00,0x00);
    632          		LCD_WriteReg(0xBC00,0x02);
   \      0xED4   0x2102             MOVS     R1,#+2
   \      0xED6   0xF44F 0x403C      MOV      R0,#+48128
   \      0xEDA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    633          		LCD_WriteReg(0xBC01,0x00);
   \      0xEDE   0x2100             MOVS     R1,#+0
   \      0xEE0   0x4650             MOV      R0,R10
   \      0xEE2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    634          		LCD_WriteReg(0xBC02,0x00);
   \      0xEE6   0x2100             MOVS     R1,#+0
   \      0xEE8   0x4658             MOV      R0,R11
   \      0xEEA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    635          		//Timing control 4H w/ 4-delay
    636          		LCD_WriteReg(0xC900,0xD0);
   \      0xEEE   0x21D0             MOVS     R1,#+208
   \      0xEF0   0xF44F 0x4049      MOV      R0,#+51456
   \      0xEF4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    637          		LCD_WriteReg(0xC901,0x02);
   \      0xEF8   0x2102             MOVS     R1,#+2
   \      0xEFA   0xF64C 0x1001      MOVW     R0,#+51457
   \      0xEFE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    638          		LCD_WriteReg(0xC902,0x50);
   \      0xF02   0x2150             MOVS     R1,#+80
   \      0xF04   0xF64C 0x1002      MOVW     R0,#+51458
   \      0xF08   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    639          		LCD_WriteReg(0xC903,0x50);
   \      0xF0C   0x2150             MOVS     R1,#+80
   \      0xF0E   0xF64C 0x1003      MOVW     R0,#+51459
   \      0xF12   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    640          		LCD_WriteReg(0xC904,0x50);
   \      0xF16   0x2150             MOVS     R1,#+80
   \      0xF18   0xF64C 0x1004      MOVW     R0,#+51460
   \      0xF1C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    641          		LCD_WriteReg(0x3500,0x00);
   \      0xF20   0x2100             MOVS     R1,#+0
   \      0xF22   0xF44F 0x5054      MOV      R0,#+13568
   \      0xF26   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    642          		LCD_WriteReg(0x3A00,0x55);  //16-bit/pixel
   \      0xF2A   0x2155             MOVS     R1,#+85
   \      0xF2C   0xF44F 0x5068      MOV      R0,#+14848
   \      0xF30   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    643          		//LCD_WR_REG(0x1100);
    644                  LCD_WriteIndex(0x1100);
   \      0xF34   0xF44F 0x5088      MOV      R0,#+4352
   \      0xF38   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX14LCD_WriteIndexEt
    645          		LCD_Delayms(1);
   \      0xF3C   0x2001             MOVS     R0,#+1
   \      0xF3E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    646          		//LCD_WR_REG(0x2900);
    647                  LCD_WriteIndex(0x2900);
   \      0xF42   0xF44F 0x5024      MOV      R0,#+10496
   \      0xF46   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX14LCD_WriteIndexEt
    648                  LCD_INFO.Write_GRAM = 0X2C00;
   \      0xF4A   0xF44F 0x5030      MOV      R0,#+11264
   \      0xF4E   0x8068             STRH     R0,[R5, #+2]
    649                  LCD_INFO.Y_GRAM = 0X2A00;
   \      0xF50   0xF44F 0x5028      MOV      R0,#+10752
   \      0xF54   0x80E8             STRH     R0,[R5, #+6]
    650                  LCD_INFO.X_GRAM = 0X2B00;
   \      0xF56   0xF44F 0x502C      MOV      R0,#+11008
   \      0xF5A   0x80A8             STRH     R0,[R5, #+4]
   \      0xF5C   0xE21E             B.N      ??LCD_Init_2
   \      0xF5E   0xBF00             Nop      
   \                     ??LCD_Init_0:
   \      0xF60   0x....'....        DC32     dID
   \      0xF64   0x....'....        DC32     LCD_INFO
    651                  /*LCD_Delayms(50);
    652                  LCD_WriteReg(0x0000,0x0001);
    653                  LCD_Delayms(50);  */
    654          	
    655            }
    656            else if(dID[3] == 0x9320)
   \                     ??LCD_Init_1: (+1)
   \      0xF68   0x88E0             LDRH     R0,[R4, #+6]
   \      0xF6A   0xF249 0x3120      MOVW     R1,#+37664
   \      0xF6E   0x4288             CMP      R0,R1
   \      0xF70   0xF040 0x80F5      BNE.W    ??LCD_Init_3
    657            {
    658              LCD_INFO.Write_GRAM = 0x0022;
   \      0xF74   0x2022             MOVS     R0,#+34
   \      0xF76   0x8068             STRH     R0,[R5, #+2]
    659              LCD_INFO.X_GRAM = 0x0020;
   \      0xF78   0x2020             MOVS     R0,#+32
   \      0xF7A   0x80A8             STRH     R0,[R5, #+4]
    660              LCD_INFO.Y_GRAM = 0x0021;
   \      0xF7C   0x2021             MOVS     R0,#+33
   \      0xF7E   0x80E8             STRH     R0,[R5, #+6]
    661              
    662              LCD_WriteReg(0x00,0x0001);   //开启LCD内部晶振，并等待10ms稳定
   \      0xF80   0x2101             MOVS     R1,#+1
   \      0xF82   0x2000             MOVS     R0,#+0
   \      0xF84   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    663              LCD_Delayms(10);
   \      0xF88   0x200A             MOVS     R0,#+10
   \      0xF8A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    664              
    665              LCD_WriteReg(0x01,0x0000);   //Driver Output Control
   \      0xF8E   0x2100             MOVS     R1,#+0
   \      0xF90   0x2001             MOVS     R0,#+1
   \      0xF92   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    666              LCD_WriteReg(0x02,0x0700);   //LCD Driving Wave Control
   \      0xF96   0xF44F 0x61E0      MOV      R1,#+1792
   \      0xF9A   0x2002             MOVS     R0,#+2
   \      0xF9C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    667              LCD_WriteReg(0x03,0x1008);   //Entry Mode
   \      0xFA0   0xF241 0x0108      MOVW     R1,#+4104
   \      0xFA4   0x2003             MOVS     R0,#+3
   \      0xFA6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    668              LCD_WriteReg(0x04,0x0000);   //Resizing Control
   \      0xFAA   0x2100             MOVS     R1,#+0
   \      0xFAC   0x2004             MOVS     R0,#+4
   \      0xFAE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    669              LCD_WriteReg(0x08,0x0202);   //Display Control 2
   \      0xFB2   0xF240 0x2102      MOVW     R1,#+514
   \      0xFB6   0x2008             MOVS     R0,#+8
   \      0xFB8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    670              LCD_WriteReg(0x09,0x0000);   //Display Contral 3.(0x0000)
   \      0xFBC   0x2100             MOVS     R1,#+0
   \      0xFBE   0x2009             MOVS     R0,#+9
   \      0xFC0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    671              LCD_WriteReg(0x0a,0x0000);//Frame Cycle Contal.(0x0000)
   \      0xFC4   0x2100             MOVS     R1,#+0
   \      0xFC6   0x200A             MOVS     R0,#+10
   \      0xFC8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    672              LCD_WriteReg(0x0c,0x0001);//Extern Display Interface Contral 1.(0x0000)
   \      0xFCC   0x2101             MOVS     R1,#+1
   \      0xFCE   0x200C             MOVS     R0,#+12
   \      0xFD0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    673              LCD_WriteReg(0x0d,0x0000);//Frame Maker Position.
   \      0xFD4   0x2100             MOVS     R1,#+0
   \      0xFD6   0x200D             MOVS     R0,#+13
   \      0xFD8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    674              LCD_WriteReg(0x0f,0x0000);//Extern Display Interface Contral 2.
   \      0xFDC   0x2100             MOVS     R1,#+0
   \      0xFDE   0x200F             MOVS     R0,#+15
   \      0xFE0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    675              
    676              LCD_WriteReg(0x10,0x0000);//Power Control 1.(0x16b0)
   \      0xFE4   0x2100             MOVS     R1,#+0
   \      0xFE6   0x2010             MOVS     R0,#+16
   \      0xFE8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    677              LCD_WriteReg(0x11,0x0000);//Power Control 2.(0x0001)	
   \      0xFEC   0x2100             MOVS     R1,#+0
   \      0xFEE   0x2011             MOVS     R0,#+17
   \      0xFF0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    678              LCD_WriteReg(0x12,0x0000);//Power Control 3.(0x0138)
   \      0xFF4   0x2100             MOVS     R1,#+0
   \      0xFF6   0x2012             MOVS     R0,#+18
   \      0xFF8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    679              LCD_WriteReg(0x13,0x0000);
   \      0xFFC   0x2100             MOVS     R1,#+0
   \      0xFFE   0x2013             MOVS     R0,#+19
   \     0x1000   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    680              //LCD_Delayms(200);	
    681              
    682              LCD_WriteReg(0x10,0x17b0);//Power Control 1.(0x16b0)
   \     0x1004   0xF241 0x71B0      MOVW     R1,#+6064
   \     0x1008   0x2010             MOVS     R0,#+16
   \     0x100A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    683              LCD_WriteReg(0x11,0x0137);//Power Control 2.(0x0001)
   \     0x100E   0xF240 0x1137      MOVW     R1,#+311
   \     0x1012   0x2011             MOVS     R0,#+17
   \     0x1014   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    684              LCD_Delayms(50);
   \     0x1018   0x2032             MOVS     R0,#+50
   \     0x101A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    685              LCD_WriteReg(0x12,0x0139);//Power Control 3.(0x0138)
   \     0x101E   0xF240 0x1139      MOVW     R1,#+313
   \     0x1022   0x2012             MOVS     R0,#+18
   \     0x1024   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    686              LCD_Delayms(50);	
   \     0x1028   0x2032             MOVS     R0,#+50
   \     0x102A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    687              LCD_WriteReg(0x13,0x1700);	 
   \     0x102E   0xF44F 0x51B8      MOV      R1,#+5888
   \     0x1032   0x2013             MOVS     R0,#+19
   \     0x1034   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    688             
    689              LCD_WriteReg(0x29,0x0000);
   \     0x1038   0x2100             MOVS     R1,#+0
   \     0x103A   0x2029             MOVS     R0,#+41
   \     0x103C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    690              LCD_WriteReg(0x2B,0x0000);
   \     0x1040   0x2100             MOVS     R1,#+0
   \     0x1042   0x202B             MOVS     R0,#+43
   \     0x1044   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    691              LCD_Delayms(50);						
   \     0x1048   0x2032             MOVS     R0,#+50
   \     0x104A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    692              
    693              LCD_WriteReg(0x30,0x0000);					
   \     0x104E   0x2100             MOVS     R1,#+0
   \     0x1050   0x2030             MOVS     R0,#+48
   \     0x1052   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    694              LCD_WriteReg(0x31,0x0507);
   \     0x1056   0xF240 0x5107      MOVW     R1,#+1287
   \     0x105A   0x2031             MOVS     R0,#+49
   \     0x105C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    695              LCD_WriteReg(0x32,0x0104);	
   \     0x1060   0xF44F 0x7182      MOV      R1,#+260
   \     0x1064   0x2032             MOVS     R0,#+50
   \     0x1066   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    696              LCD_WriteReg(0x35,0x0105);	
   \     0x106A   0xF240 0x1105      MOVW     R1,#+261
   \     0x106E   0x2035             MOVS     R0,#+53
   \     0x1070   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    697              LCD_WriteReg(0x36,0x0404);
   \     0x1074   0xF240 0x4504      MOVW     R5,#+1028
   \     0x1078   0x0029             MOVS     R1,R5
   \     0x107A   0x2036             MOVS     R0,#+54
   \     0x107C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    698              LCD_WriteReg(0x37,0x0603);	
   \     0x1080   0xF240 0x6103      MOVW     R1,#+1539
   \     0x1084   0x2037             MOVS     R0,#+55
   \     0x1086   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    699              LCD_WriteReg(0x38,0x0004);	
   \     0x108A   0x2104             MOVS     R1,#+4
   \     0x108C   0x2038             MOVS     R0,#+56
   \     0x108E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    700              LCD_WriteReg(0x39,0x0007);
   \     0x1092   0x2107             MOVS     R1,#+7
   \     0x1094   0x2039             MOVS     R0,#+57
   \     0x1096   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    701              LCD_WriteReg(0x3c,0x0501);	
   \     0x109A   0xF240 0x5101      MOVW     R1,#+1281
   \     0x109E   0x203C             MOVS     R0,#+60
   \     0x10A0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    702              LCD_WriteReg(0x3d,0x0404);
   \     0x10A4   0x0029             MOVS     R1,R5
   \     0x10A6   0x203D             MOVS     R0,#+61
   \     0x10A8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    703              
    704              LCD_WriteReg(0x0050,0x0000);
   \     0x10AC   0x2100             MOVS     R1,#+0
   \     0x10AE   0x2050             MOVS     R0,#+80
   \     0x10B0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    705              LCD_WriteReg(0x0051,239);
   \     0x10B4   0x21EF             MOVS     R1,#+239
   \     0x10B6   0x2051             MOVS     R0,#+81
   \     0x10B8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    706              LCD_WriteReg(0x0052,0x0000);
   \     0x10BC   0x2100             MOVS     R1,#+0
   \     0x10BE   0x2052             MOVS     R0,#+82
   \     0x10C0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    707              LCD_WriteReg(0x0053,319);
   \     0x10C4   0xF240 0x113F      MOVW     R1,#+319
   \     0x10C8   0x2053             MOVS     R0,#+83
   \     0x10CA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    708            
    709              LCD_WriteReg(0x60,0x2700);//Driver Output Control.
   \     0x10CE   0xF44F 0x511C      MOV      R1,#+9984
   \     0x10D2   0x2060             MOVS     R0,#+96
   \     0x10D4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    710              LCD_WriteReg(0x61,0x0001);//Driver Output Control.
   \     0x10D8   0x2101             MOVS     R1,#+1
   \     0x10DA   0x2061             MOVS     R0,#+97
   \     0x10DC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    711              LCD_WriteReg(0x6a,0x0000);//Vertical Srcoll Control.
   \     0x10E0   0x2100             MOVS     R1,#+0
   \     0x10E2   0x206A             MOVS     R0,#+106
   \     0x10E4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    712              
    713              LCD_WriteReg(0x80,0x0000);//Display Position? Partial Display 1.
   \     0x10E8   0x2100             MOVS     R1,#+0
   \     0x10EA   0x2080             MOVS     R0,#+128
   \     0x10EC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    714              LCD_WriteReg(0x81,0x0000);//RAM Address Start? Partial Display 1.
   \     0x10F0   0x2100             MOVS     R1,#+0
   \     0x10F2   0x2081             MOVS     R0,#+129
   \     0x10F4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    715              LCD_WriteReg(0x82,0x0000);//RAM Address End-Partial Display 1.
   \     0x10F8   0x2100             MOVS     R1,#+0
   \     0x10FA   0x2082             MOVS     R0,#+130
   \     0x10FC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    716              LCD_WriteReg(0x83,0x0000);//Displsy Position? Partial Display 2.
   \     0x1100   0x2100             MOVS     R1,#+0
   \     0x1102   0x2083             MOVS     R0,#+131
   \     0x1104   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    717              LCD_WriteReg(0x84,0x0000);//RAM Address Start? Partial Display 2.
   \     0x1108   0x2100             MOVS     R1,#+0
   \     0x110A   0x2084             MOVS     R0,#+132
   \     0x110C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    718              LCD_WriteReg(0x85,0x0000);//RAM Address End? Partial Display 2.
   \     0x1110   0x2100             MOVS     R1,#+0
   \     0x1112   0x2085             MOVS     R0,#+133
   \     0x1114   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    719              
    720              LCD_WriteReg(0x90,0x0010);//Frame Cycle Contral.(0x0013)
   \     0x1118   0x2110             MOVS     R1,#+16
   \     0x111A   0x2090             MOVS     R0,#+144
   \     0x111C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    721              LCD_WriteReg(0x92,0x0000);//Panel Interface Contral 2.(0x0000)
   \     0x1120   0x2100             MOVS     R1,#+0
   \     0x1122   0x2092             MOVS     R0,#+146
   \     0x1124   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    722              LCD_WriteReg(0x93,0x0003);//Panel Interface Contral 3.
   \     0x1128   0x2103             MOVS     R1,#+3
   \     0x112A   0x2093             MOVS     R0,#+147
   \     0x112C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    723              LCD_WriteReg(0x95,0x0110);//Frame Cycle Contral.(0x0110)
   \     0x1130   0xF44F 0x7188      MOV      R1,#+272
   \     0x1134   0x2095             MOVS     R0,#+149
   \     0x1136   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    724              LCD_WriteReg(0x97,0x0000);//
   \     0x113A   0x2100             MOVS     R1,#+0
   \     0x113C   0x2097             MOVS     R0,#+151
   \     0x113E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    725              LCD_WriteReg(0x98,0x0000);//Frame Cycle Contral.
   \     0x1142   0x2100             MOVS     R1,#+0
   \     0x1144   0x2098             MOVS     R0,#+152
   \     0x1146   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    726          
    727              LCD_WriteReg(0x07,0x0133);
   \     0x114A   0xF240 0x1133      MOVW     R1,#+307
   \     0x114E   0x2007             MOVS     R0,#+7
   \     0x1150   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    728              LCD_Delayms(300);
   \     0x1154   0xF44F 0x7096      MOV      R0,#+300
   \     0x1158   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
   \     0x115C   0xE11E             B.N      ??LCD_Init_2
    729            }  
    730            else if(dID[3] == 0x8989)
   \                     ??LCD_Init_3: (+1)
   \     0x115E   0x88E0             LDRH     R0,[R4, #+6]
   \     0x1160   0xF648 0x1189      MOVW     R1,#+35209
   \     0x1164   0x4288             CMP      R0,R1
   \     0x1166   0xF040 0x8119      BNE.W    ??LCD_Init_2
    731            {
    732              LCD_INFO.Write_GRAM = 0x0022;
   \     0x116A   0x2022             MOVS     R0,#+34
   \     0x116C   0x8068             STRH     R0,[R5, #+2]
    733              LCD_INFO.X_GRAM = 0x004e;
   \     0x116E   0x204E             MOVS     R0,#+78
   \     0x1170   0x80A8             STRH     R0,[R5, #+4]
    734              LCD_INFO.Y_GRAM = 0x004f;
   \     0x1172   0x204F             MOVS     R0,#+79
   \     0x1174   0x80E8             STRH     R0,[R5, #+6]
    735              
    736              //SSD1289;
    737              /* 打开晶振 */
    738              LCD_WriteReg(0x0000,0x0001);    LCD_Delayms(LCD_DELAY_TIME); 
   \     0x1176   0x2101             MOVS     R1,#+1
   \     0x1178   0x2000             MOVS     R0,#+0
   \     0x117A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x117E   0x2002             MOVS     R0,#+2
   \     0x1180   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    739              //启动频率设置为最大osc/16 消耗功率设置在large档位，提高显示画质
    740              //LCD_WriteReg(0x0003,0xF8F8);    LCD_Delayms(LCD_DELAY_TIME);
    741              LCD_WriteReg(0x0003,0xA8A4);    LCD_Delayms(LCD_DELAY_TIME);   //0210
   \     0x1184   0xF64A 0x01A4      MOVW     R1,#+43172
   \     0x1188   0x2003             MOVS     R0,#+3
   \     0x118A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x118E   0x2002             MOVS     R0,#+2
   \     0x1190   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    742              LCD_WriteReg(0x000C,0x0000);    LCD_Delayms(LCD_DELAY_TIME);   
   \     0x1194   0x2100             MOVS     R1,#+0
   \     0x1196   0x200C             MOVS     R0,#+12
   \     0x1198   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x119C   0x2002             MOVS     R0,#+2
   \     0x119E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    743              LCD_WriteReg(0x000D,0x080C);    LCD_Delayms(LCD_DELAY_TIME);   
   \     0x11A2   0xF640 0x010C      MOVW     R1,#+2060
   \     0x11A6   0x200D             MOVS     R0,#+13
   \     0x11A8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x11AC   0x2002             MOVS     R0,#+2
   \     0x11AE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    744              LCD_WriteReg(0x000E,0x2B00);    LCD_Delayms(LCD_DELAY_TIME);   
   \     0x11B2   0xF44F 0x512C      MOV      R1,#+11008
   \     0x11B6   0x200E             MOVS     R0,#+14
   \     0x11B8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x11BC   0x2002             MOVS     R0,#+2
   \     0x11BE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    745              LCD_WriteReg(0x001E,0x00B0);    LCD_Delayms(LCD_DELAY_TIME); 
   \     0x11C2   0x21B0             MOVS     R1,#+176
   \     0x11C4   0x201E             MOVS     R0,#+30
   \     0x11C6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x11CA   0x2002             MOVS     R0,#+2
   \     0x11CC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    746              //驱动输出控制320*240 0x2B3F 
    747              LCD_WriteReg(0x0001,0x2B3F);    LCD_Delayms(LCD_DELAY_TIME); 
   \     0x11D0   0xF642 0x313F      MOVW     R1,#+11071
   \     0x11D4   0x2001             MOVS     R0,#+1
   \     0x11D6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x11DA   0x2002             MOVS     R0,#+2
   \     0x11DC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    748              //驱动输出控制320*240 0x233F 将原来的第11位BGR清零这样输出是RGB就不会红色与蓝色颠倒 
    749              //LCD_WriteReg(0x0001,0x233F);    LCD_Delayms(LCD_DELAY_TIME);   
    750              LCD_WriteReg(0x0002,0x0600);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x11E0   0xF44F 0x61C0      MOV      R1,#+1536
   \     0x11E4   0x2002             MOVS     R0,#+2
   \     0x11E6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x11EA   0x2002             MOVS     R0,#+2
   \     0x11EC   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    751              LCD_WriteReg(0x0010,0x0000);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x11F0   0x2100             MOVS     R1,#+0
   \     0x11F2   0x2010             MOVS     R0,#+16
   \     0x11F4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x11F8   0x2002             MOVS     R0,#+2
   \     0x11FA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    752              /* 定义数据格式 16位色 横屏 0x6070 */
    753              // TY1（bit7） TY0 ID1 ID0 AM LG2 LG1 LG0
    754              //   0          0   1   1   1  0   0   0
    755              // type A  0 0
    756              // type B  0 1
    757              // type C  1 1
    758              // AM   指针自动增加
    759              // 65K颜色
    760              // 寄存器 4f/4e 定义窗口大小
    761              LCD_WriteReg(0x0011,0x6028);    LCD_Delayms(LCD_DELAY_TIME);   
   \     0x11FE   0xF246 0x0128      MOVW     R1,#+24616
   \     0x1202   0x2011             MOVS     R0,#+17
   \     0x1204   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1208   0x2002             MOVS     R0,#+2
   \     0x120A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    762              //LCD_WriteReg(0x0011,0x6070);    LCD_Delayms(LCD_DELAY_TIME);   
    763              //
    764              LCD_WriteReg(0x0005,0x0000);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x120E   0x2100             MOVS     R1,#+0
   \     0x1210   0x2005             MOVS     R0,#+5
   \     0x1212   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1216   0x2002             MOVS     R0,#+2
   \     0x1218   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    765              LCD_WriteReg(0x0006,0x0000);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x121C   0x2100             MOVS     R1,#+0
   \     0x121E   0x2006             MOVS     R0,#+6
   \     0x1220   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1224   0x2002             MOVS     R0,#+2
   \     0x1226   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    766              LCD_WriteReg(0x0016,0xEF1C);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x122A   0xF64E 0x711C      MOVW     R1,#+61212
   \     0x122E   0x2016             MOVS     R0,#+22
   \     0x1230   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1234   0x2002             MOVS     R0,#+2
   \     0x1236   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    767              LCD_WriteReg(0x0017,0x0003);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x123A   0x2103             MOVS     R1,#+3
   \     0x123C   0x2017             MOVS     R0,#+23
   \     0x123E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1242   0x2002             MOVS     R0,#+2
   \     0x1244   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    768              //PT1 PT0 VLE2 VLE1 SPT 0  0 GON DTE CM 0 D1 D0
    769              //  0   0        1   0  0  0  1   1  0  0  1  1
    770              LCD_WriteReg(0x0007,0x0233);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x1248   0xF240 0x2133      MOVW     R1,#+563
   \     0x124C   0x2007             MOVS     R0,#+7
   \     0x124E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1252   0x2002             MOVS     R0,#+2
   \     0x1254   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    771              //LCD_WriteReg(0x0007,0x0133);    LCD_Delayms(LCD_DELAY_TIME);
    772              //NO1 NO0 SDT1 SDT0 0 EQ2 EQ1 EQ0 DIV1 DIV0 SDIV SRTN RTN3 RTN2 RTN1 RTN0
    773              //                                 1     1    0    0    0    0   0   0
    774              //将DIV设置成2分频
    775              //
    776              //LCD_WriteReg(0x000B,0x0020);    LCD_Delayms(LCD_DELAY_TIME);
    777              LCD_WriteReg(0x000B,0x0020);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x1258   0x2120             MOVS     R1,#+32
   \     0x125A   0x200B             MOVS     R0,#+11
   \     0x125C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1260   0x2002             MOVS     R0,#+2
   \     0x1262   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    778              //配置扫描模式
    779              LCD_WriteReg(0x000F,0x0000);    LCD_Delayms(LCD_DELAY_TIME);   
   \     0x1266   0x2100             MOVS     R1,#+0
   \     0x1268   0x200F             MOVS     R0,#+15
   \     0x126A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x126E   0x2002             MOVS     R0,#+2
   \     0x1270   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    780              /* 扫描开始地址 */
    781              //垂直控制
    782              LCD_WriteReg(0x0041,0x0000);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x1274   0x2100             MOVS     R1,#+0
   \     0x1276   0x2041             MOVS     R0,#+65
   \     0x1278   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x127C   0x2002             MOVS     R0,#+2
   \     0x127E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    783              LCD_WriteReg(0x0042,0x0000);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x1282   0x2100             MOVS     R1,#+0
   \     0x1284   0x2042             MOVS     R0,#+66
   \     0x1286   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x128A   0x2002             MOVS     R0,#+2
   \     0x128C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    784              //水平RAMposition
    785              LCD_WriteReg(0x0048,0x0000);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x1290   0x2100             MOVS     R1,#+0
   \     0x1292   0x2048             MOVS     R0,#+72
   \     0x1294   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1298   0x2002             MOVS     R0,#+2
   \     0x129A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    786              LCD_WriteReg(0x0049,0x013F);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x129E   0xF240 0x113F      MOVW     R1,#+319
   \     0x12A2   0x2049             MOVS     R0,#+73
   \     0x12A4   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x12A8   0x2002             MOVS     R0,#+2
   \     0x12AA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    787              
    788              LCD_WriteReg(0x004A,0x0000);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x12AE   0x2100             MOVS     R1,#+0
   \     0x12B0   0x204A             MOVS     R0,#+74
   \     0x12B2   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x12B6   0x2002             MOVS     R0,#+2
   \     0x12B8   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    789              LCD_WriteReg(0x004B,0x0000);    LCD_Delayms(LCD_DELAY_TIME); 
   \     0x12BC   0x2100             MOVS     R1,#+0
   \     0x12BE   0x204B             MOVS     R0,#+75
   \     0x12C0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x12C4   0x2002             MOVS     R0,#+2
   \     0x12C6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    790              
    791              LCD_WriteReg(0x0030,0x0707);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x12CA   0xF240 0x7107      MOVW     R1,#+1799
   \     0x12CE   0x2030             MOVS     R0,#+48
   \     0x12D0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x12D4   0x2002             MOVS     R0,#+2
   \     0x12D6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    792              LCD_WriteReg(0x0031,0x0204);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x12DA   0xF44F 0x7101      MOV      R1,#+516
   \     0x12DE   0x2031             MOVS     R0,#+49
   \     0x12E0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x12E4   0x2002             MOVS     R0,#+2
   \     0x12E6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    793              LCD_WriteReg(0x0032,0x0204);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x12EA   0xF44F 0x7101      MOV      R1,#+516
   \     0x12EE   0x2032             MOVS     R0,#+50
   \     0x12F0   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x12F4   0x2002             MOVS     R0,#+2
   \     0x12F6   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    794              LCD_WriteReg(0x0033,0x0502);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x12FA   0xF240 0x5502      MOVW     R5,#+1282
   \     0x12FE   0x0029             MOVS     R1,R5
   \     0x1300   0x2033             MOVS     R0,#+51
   \     0x1302   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1306   0x2002             MOVS     R0,#+2
   \     0x1308   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    795              LCD_WriteReg(0x0034,0x0507);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x130C   0xF240 0x5107      MOVW     R1,#+1287
   \     0x1310   0x2034             MOVS     R0,#+52
   \     0x1312   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1316   0x2002             MOVS     R0,#+2
   \     0x1318   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    796              LCD_WriteReg(0x0035,0x0204);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x131C   0xF44F 0x7101      MOV      R1,#+516
   \     0x1320   0x2035             MOVS     R0,#+53
   \     0x1322   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1326   0x2002             MOVS     R0,#+2
   \     0x1328   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    797              LCD_WriteReg(0x0036,0x0204);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x132C   0xF44F 0x7101      MOV      R1,#+516
   \     0x1330   0x2036             MOVS     R0,#+54
   \     0x1332   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1336   0x2002             MOVS     R0,#+2
   \     0x1338   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    798              LCD_WriteReg(0x0037,0x0502);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x133C   0x0029             MOVS     R1,R5
   \     0x133E   0x2037             MOVS     R0,#+55
   \     0x1340   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1344   0x2002             MOVS     R0,#+2
   \     0x1346   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    799              LCD_WriteReg(0x003A,0x0302);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x134A   0xF240 0x3502      MOVW     R5,#+770
   \     0x134E   0x0029             MOVS     R1,R5
   \     0x1350   0x203A             MOVS     R0,#+58
   \     0x1352   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1356   0x2002             MOVS     R0,#+2
   \     0x1358   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    800              LCD_WriteReg(0x003B,0x0302);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x135C   0x0029             MOVS     R1,R5
   \     0x135E   0x203B             MOVS     R0,#+59
   \     0x1360   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1364   0x2002             MOVS     R0,#+2
   \     0x1366   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    801              LCD_WriteReg(0x0023,0x0000);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x136A   0x2100             MOVS     R1,#+0
   \     0x136C   0x2023             MOVS     R0,#+35
   \     0x136E   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1372   0x2002             MOVS     R0,#+2
   \     0x1374   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    802              LCD_WriteReg(0x0024,0x0000);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x1378   0x2100             MOVS     R1,#+0
   \     0x137A   0x2024             MOVS     R0,#+36
   \     0x137C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1380   0x2002             MOVS     R0,#+2
   \     0x1382   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    803              /*0000 390K  50 
    804                0010 430K  55 
    805                0101 470K  60 
    806                1000 510K  65 
    807                1010 548K  70 
    808                1100 587K  75 
    809                1110 626K  80 */
    810              //LCD_WriteReg(0x0025,0x8000);    LCD_Delayms(LCD_DELAY_TIME);
    811              LCD_WriteReg(0x0025,0xe000);    LCD_Delayms(LCD_DELAY_TIME);
   \     0x1386   0xF44F 0x4160      MOV      R1,#+57344
   \     0x138A   0x2025             MOVS     R0,#+37
   \     0x138C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
   \     0x1390   0x2002             MOVS     R0,#+2
   \     0x1392   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    812              //设定显示窗口       
    813              //LCD_UpdateData();	//更新写入的数据使之生效*/
    814              LCD_Delayms(20);         //等待LCD启动
   \     0x1396   0x2014             MOVS     R0,#+20
   \     0x1398   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX11LCD_DelaymsEt
    815            }
    816            
    817            return dID[3];
   \                     ??LCD_Init_2: (+1)
   \     0x139C   0x88E0             LDRH     R0,[R4, #+6]
   \                     ??LCD_Init_4: (+1)
   \     0x139E   0xE8BD 0x8FF2      POP      {R1,R4-R11,PC}   ;; return
    818          }
    819          
    820          /*
    821           * LCD_FillBackground
    822           * 填充LCD背景色
    823           * 
    824           * 参数:
    825           *    Color--16位RGB颜色值
    826           *
    827           * 输出:
    828           *    无
    829           */

   \                                 In section .text, align 2, keep-with-next
    830          void LCD_FillBackground(uint16 Color)
    831          {
   \                     _Z18LCD_FillBackgroundt: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
    832            uint32_t index=0;
   \        0x4   0x2500             MOVS     R5,#+0
    833            LCD_SetCursor(0,0); 
   \        0x6   0x2100             MOVS     R1,#+0
   \        0x8   0x2000             MOVS     R0,#+0
   \        0xA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_SetCursorEtt
    834            LCD_WriteIndex(LCD_INFO.Write_GRAM);
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable20
   \       0x12   0x8840             LDRH     R0,[R0, #+2]
   \       0x14   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX14LCD_WriteIndexEt
    835            for( index = 0; index < MAX_X * MAX_Y; index++ )
   \       0x18   0x2600             MOVS     R6,#+0
   \                     ??LCD_FillBackground_0: (+1)
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable20_1  ;; 0x5dc00
   \       0x1E   0x4286             CMP      R6,R0
   \       0x20   0xD205             BCS.N    ??LCD_FillBackground_1
    836            {
    837              LCD_WriteData(Color);
   \       0x22   0x0020             MOVS     R0,R4
   \       0x24   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x26   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_WriteDataEt
    838            }
   \       0x2A   0x1C76             ADDS     R6,R6,#+1
   \       0x2C   0xE7F5             B.N      ??LCD_FillBackground_0
    839          }
   \                     ??LCD_FillBackground_1: (+1)
   \       0x2E   0xBD70             POP      {R4-R6,PC}       ;; return
    840          
    841          /*
    842           * LCD_FillBackgroundGRAM
    843           * 填充LCD背景色到LCD_GRAM
    844           * 
    845           * 参数:
    846           *    *Color--16位RGB颜色值数组，长度为LCD_GRAM数组的长度
    847           *
    848           * 输出:
    849           *    无
    850           */

   \                                 In section .text, align 2, keep-with-next
    851          void LCD_FillBackgroundGRAM(uint16 *Color)
    852          {
   \                     _Z22LCD_FillBackgroundGRAMPt: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
    853            uint32_t index=0;
   \        0x4   0x2500             MOVS     R5,#+0
    854            LCD_SetCursor(0,0); 
   \        0x6   0x2100             MOVS     R1,#+0
   \        0x8   0x2000             MOVS     R0,#+0
   \        0xA   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_SetCursorEtt
    855            LCD_WriteIndex(LCD_INFO.Write_GRAM);
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable20
   \       0x12   0x8840             LDRH     R0,[R0, #+2]
   \       0x14   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX14LCD_WriteIndexEt
    856            for( index = 0; index < MAX_X * MAX_Y; index++ )
   \       0x18   0x2600             MOVS     R6,#+0
   \                     ??LCD_FillBackgroundGRAM_0: (+1)
   \       0x1A   0x.... 0x....      LDR.W    R0,??DataTable20_1  ;; 0x5dc00
   \       0x1E   0x4286             CMP      R6,R0
   \       0x20   0xD205             BCS.N    ??LCD_FillBackgroundGRAM_1
    857            {
    858              LCD_WriteData(Color[index]);
   \       0x22   0xF834 0x0016      LDRH     R0,[R4, R6, LSL #+1]
   \       0x26   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_WriteDataEt
    859            }
   \       0x2A   0x1C76             ADDS     R6,R6,#+1
   \       0x2C   0xE7F5             B.N      ??LCD_FillBackgroundGRAM_0
    860          }
   \                     ??LCD_FillBackgroundGRAM_1: (+1)
   \       0x2E   0xBD70             POP      {R4-R6,PC}       ;; return
    861          
    862          /*
    863           * LCD_BGR2RGB
    864           * BGR颜色转RGB颜色
    865           * 
    866           * 参数:
    867           *    Color--16位BGR颜色值
    868           *
    869           * 输出:
    870           *    16位RGB颜色值
    871           */

   \                                 In section .text, align 2, keep-with-next
    872          uint16 LCD_BGR2RGB(uint16 Color)
    873          {
   \                     _Z11LCD_BGR2RGBt: (+1)
   \        0x0   0xB410             PUSH     {R4}
   \        0x2   0x0001             MOVS     R1,R0
    874            uint16  r, g, b, rgb;
    875            
    876            b = ( Color>>0 )  & 0x1f;
   \        0x4   0xF011 0x041F      ANDS     R4,R1,#0x1F
    877            g = ( Color>>5 )  & 0x3f;
   \        0x8   0xF3C1 0x1345      UBFX     R3,R1,#+5,#+6
    878            r = ( Color>>11 ) & 0x1f;
   \        0xC   0x000A             MOVS     R2,R1
   \        0xE   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x10   0x0AD2             LSRS     R2,R2,#+11
    879            
    880            rgb =  (b<<11) + (g<<5) + (r<<0);
   \       0x12   0x0158             LSLS     R0,R3,#+5
   \       0x14   0xEB10 0x20C4      ADDS     R0,R0,R4, LSL #+11
   \       0x18   0x1810             ADDS     R0,R2,R0
    881            
    882            return( rgb );
   \       0x1A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x1C   0xBC10             POP      {R4}
   \       0x1E   0x4770             BX       LR               ;; return
    883          }
    884          
    885          /*
    886           * LCD_U8GRAY2RGB
    887           * U8灰度颜色转为RGB颜色
    888           * 
    889           * 参数:
    890           *    Color--8位灰度颜色值
    891           *
    892           * 输出:
    893           *    16位RGB颜色值
    894           */

   \                                 In section .text, align 2, keep-with-next
    895          uint16 LCD_U8GRAY2RGB(uint8 Color)
    896          {
   \                     _Z14LCD_U8GRAY2RGBh: (+1)
   \        0x0   0xB410             PUSH     {R4}
   \        0x2   0x0001             MOVS     R1,R0
    897            uint16  r, g, b, rgb;
    898            
    899            b = ( Color>>3 )  & 0x1f;
   \        0x4   0x000C             MOVS     R4,R1
   \        0x6   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
   \        0x8   0x08E4             LSRS     R4,R4,#+3
   \        0xA   0xB2E4             UXTB     R4,R4            ;; ZeroExt  R4,R4,#+24,#+24
    900            g = ( Color>>2 )  & 0x3f;
   \        0xC   0x000B             MOVS     R3,R1
   \        0xE   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x10   0x089B             LSRS     R3,R3,#+2
   \       0x12   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
    901            r = ( Color>>3 )  & 0x1f;
   \       0x14   0x000A             MOVS     R2,R1
   \       0x16   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x18   0x08D2             LSRS     R2,R2,#+3
   \       0x1A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
    902            
    903            rgb =  (b<<11) + (g<<5) + (r<<0);
   \       0x1C   0x0158             LSLS     R0,R3,#+5
   \       0x1E   0xEB10 0x20C4      ADDS     R0,R0,R4, LSL #+11
   \       0x22   0x1810             ADDS     R0,R2,R0
    904            
    905            return( rgb );
   \       0x24   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x26   0xBC10             POP      {R4}
   \       0x28   0x4770             BX       LR               ;; return
    906          }
    907          
    908          /*
    909           * LCD_GetPoint
    910           * 取得LCD某点的16位RGB值
    911           * 
    912           * 参数:
    913           *    Xpos--X轴坐标
    914           *    Ypos--Y轴坐标
    915           *
    916           * 输出:
    917           *    16位RGB颜色值
    918           */

   \                                 In section .text, align 2, keep-with-next
    919          uint16 LCD_GetPoint(uint16 Xpos,uint16 Ypos)
    920          {
   \                     _Z12LCD_GetPointtt: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    921            uint16 dummy;
    922            
    923            LCD_SetCursor(Xpos,Ypos);
   \        0x6   0x0029             MOVS     R1,R5
   \        0x8   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \        0xE   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_SetCursorEtt
    924            LCD_WriteIndex(LCD_INFO.Write_GRAM);  
   \       0x12   0x.... 0x....      LDR.W    R0,??DataTable20
   \       0x16   0x8840             LDRH     R0,[R0, #+2]
   \       0x18   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX14LCD_WriteIndexEt
    925           
    926            dummy = LCD_ReadData();   /* 空读一次 */
   \       0x1C   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_ReadDataEv
   \       0x20   0x0006             MOVS     R6,R0
    927            dummy = LCD_ReadData(); 
   \       0x22   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_ReadDataEv
    928            return  dummy;	          
   \       0x26   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x28   0xBD70             POP      {R4-R6,PC}       ;; return
    929          }
    930          
    931          /*
    932           * LCD_SetPoint
    933           * 设置LCD某点的16位RGB值
    934           * 
    935           * 参数:
    936           *    Xpos--X轴坐标
    937           *    Ypos--Y轴坐标
    938           *    Color--16位RGB颜色值
    939           *
    940           * 输出:
    941           *    无
    942           */

   \                                 In section .text, align 2, keep-with-next
    943          void LCD_SetPoint(uint16 Xpos,uint16 Ypos,uint16 Color)
    944          {
   \                     _Z12LCD_SetPointttt: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
    945            if( Xpos >= MAX_X || Ypos >= MAX_Y )
   \        0x8   0x0020             MOVS     R0,R4
   \        0xA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \        0xC   0xF5B0 0x7F48      CMP      R0,#+800
   \       0x10   0xDA04             BGE.N    ??LCD_SetPoint_0
   \       0x12   0x0028             MOVS     R0,R5
   \       0x14   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x16   0xF5B0 0x7FF0      CMP      R0,#+480
   \       0x1A   0xDB00             BLT.N    ??LCD_SetPoint_1
    946            {
    947              return;
   \                     ??LCD_SetPoint_0: (+1)
   \       0x1C   0xE00C             B.N      ??LCD_SetPoint_2
    948            } 
    949            LCD_SetCursor(Xpos,Ypos);
   \                     ??LCD_SetPoint_1: (+1)
   \       0x1E   0x0029             MOVS     R1,R5
   \       0x20   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x22   0x0020             MOVS     R0,R4
   \       0x24   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x26   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_SetCursorEtt
    950            LCD_WriteReg(LCD_INFO.Write_GRAM,Color);
   \       0x2A   0x0031             MOVS     R1,R6
   \       0x2C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x2E   0x.... 0x....      LDR.W    R0,??DataTable20
   \       0x32   0x8840             LDRH     R0,[R0, #+2]
   \       0x34   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX12LCD_WriteRegEtt
    951          }
   \                     ??LCD_SetPoint_2: (+1)
   \       0x38   0xBD70             POP      {R4-R6,PC}       ;; return
    952          
    953          /*
    954           * LCD_DrawLine
    955           * 在指定坐标显示直线
    956           * 
    957           * 参数:
    958           *    x0--X轴起始坐标
    959           *    y0--Y轴起始坐标
    960           *    x1--X轴结束坐标
    961           *    y1--Y轴结束坐标
    962           *    Color--16位RGB颜色值
    963           *
    964           * 输出:
    965           *    无
    966           */	 

   \                                 In section .text, align 2, keep-with-next
    967          void LCD_DrawLine( uint16 x0, uint16 y0, uint16 x1, uint16 y1 , uint16 color )
    968          {
   \                     _Z12LCD_DrawLinettttt: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0x0005             MOVS     R5,R0
   \        0x6   0x000E             MOVS     R6,R1
   \        0x8   0x0017             MOVS     R7,R2
   \        0xA   0x4698             MOV      R8,R3
   \        0xC   0x9C0A             LDR      R4,[SP, #+40]
    969            short dx,dy;      /* 定义X Y轴上增加的变量值 */
    970            short temp;       /* 起点 终点大小比较 交换数据时的中间变量 */
    971            
    972            if( x0 > x1 )     /* X轴上起点大于终点 交换数据 */
   \        0xE   0x0038             MOVS     R0,R7
   \       0x10   0x0029             MOVS     R1,R5
   \       0x12   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x14   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x16   0x4288             CMP      R0,R1
   \       0x18   0xD208             BCS.N    ??LCD_DrawLine_0
    973            {
    974              temp = x1;
   \       0x1A   0x0038             MOVS     R0,R7
   \       0x1C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x1E   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    975              x1 = x0;
   \       0x22   0x002F             MOVS     R7,R5
    976              x0 = temp;   
   \       0x24   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \       0x28   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x2A   0x0005             MOVS     R5,R0
    977            }
    978            if( y0 > y1 )     /* Y轴上起点大于终点 交换数据 */
   \                     ??LCD_DrawLine_0: (+1)
   \       0x2C   0x4640             MOV      R0,R8
   \       0x2E   0x0031             MOVS     R1,R6
   \       0x30   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x32   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x34   0x4288             CMP      R0,R1
   \       0x36   0xD208             BCS.N    ??LCD_DrawLine_1
    979            {
    980              temp = y1;
   \       0x38   0x4640             MOV      R0,R8
   \       0x3A   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x3C   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    981              y1 = y0;
   \       0x40   0x46B0             MOV      R8,R6
    982              y0 = temp;   
   \       0x42   0xF9BD 0x0000      LDRSH    R0,[SP, #+0]
   \       0x46   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x48   0x0006             MOVS     R6,R0
    983            }
    984            
    985            dx = x1-x0;       /* X轴方向上的增量 */
   \                     ??LCD_DrawLine_1: (+1)
   \       0x4A   0xEBB7 0x0A05      SUBS     R10,R7,R5
    986            dy = y1-y0;       /* Y轴方向上的增量 */
   \       0x4E   0xEBB8 0x0906      SUBS     R9,R8,R6
    987            
    988            if( dx == 0 )     /* X轴上没有增量 画垂直线 */ 
   \       0x52   0x4650             MOV      R0,R10
   \       0x54   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x56   0x2800             CMP      R0,#+0
   \       0x58   0xD10F             BNE.N    ??LCD_DrawLine_2
    989            {
    990              do
    991              { 
    992                LCD_SetPoint(x0, y0, color);   /* 逐点显示 描垂直线 */
   \                     ??LCD_DrawLine_3: (+1)
   \       0x5A   0x0022             MOVS     R2,R4
   \       0x5C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x5E   0x0031             MOVS     R1,R6
   \       0x60   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x62   0x0028             MOVS     R0,R5
   \       0x64   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x66   0x.... 0x....      BL       _Z12LCD_SetPointttt
    993                y0++;
   \       0x6A   0x1C76             ADDS     R6,R6,#+1
    994              }
    995              while( y1 >= y0 ); 
   \       0x6C   0x4640             MOV      R0,R8
   \       0x6E   0x0031             MOVS     R1,R6
   \       0x70   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x72   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x74   0x4288             CMP      R0,R1
   \       0x76   0xD2F0             BCS.N    ??LCD_DrawLine_3
    996                return; 
   \       0x78   0xE080             B.N      ??LCD_DrawLine_4
    997            }
    998            if( dy == 0 )     /* Y轴上没有增量 画水平直线 */ 
   \                     ??LCD_DrawLine_2: (+1)
   \       0x7A   0x4648             MOV      R0,R9
   \       0x7C   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0x7E   0x2800             CMP      R0,#+0
   \       0x80   0xD10F             BNE.N    ??LCD_DrawLine_5
    999            {
   1000              do
   1001              {
   1002                LCD_SetPoint(x0, y0, color);   /* 逐点显示 描水平线 */
   \                     ??LCD_DrawLine_6: (+1)
   \       0x82   0x0022             MOVS     R2,R4
   \       0x84   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x86   0x0031             MOVS     R1,R6
   \       0x88   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x8A   0x0028             MOVS     R0,R5
   \       0x8C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x8E   0x.... 0x....      BL       _Z12LCD_SetPointttt
   1003                x0++;
   \       0x92   0x1C6D             ADDS     R5,R5,#+1
   1004              }
   1005              while( x1 >= x0 ); 
   \       0x94   0x0038             MOVS     R0,R7
   \       0x96   0x0029             MOVS     R1,R5
   \       0x98   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x9A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x9C   0x4288             CMP      R0,R1
   \       0x9E   0xD2F0             BCS.N    ??LCD_DrawLine_6
   1006                return;
   \       0xA0   0xE06C             B.N      ??LCD_DrawLine_4
   1007            }
   1008            /* 布兰森汉姆(Bresenham)算法画线 */
   1009            if( dx > dy )                         /* 靠近X轴 */
   \                     ??LCD_DrawLine_5: (+1)
   \       0xA2   0x4648             MOV      R0,R9
   \       0xA4   0x4651             MOV      R1,R10
   \       0xA6   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xA8   0xB209             SXTH     R1,R1            ;; SignExt  R1,R1,#+16,#+16
   \       0xAA   0x4288             CMP      R0,R1
   \       0xAC   0xDA33             BGE.N    ??LCD_DrawLine_7
   1010            {
   1011              temp = 2 * dy - dx;               /* 计算下个点的位置 */         
   \       0xAE   0x4648             MOV      R0,R9
   \       0xB0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xB2   0x46D3             MOV      R11,R10
   \       0xB4   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \       0xB8   0xEBDB 0x0B40      RSBS     R11,R11,R0, LSL #+1
   1012              while( x0 != x1 )
   \                     ??LCD_DrawLine_8: (+1)
   \       0xBC   0x0028             MOVS     R0,R5
   \       0xBE   0x0039             MOVS     R1,R7
   \       0xC0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0xC2   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xC4   0x4288             CMP      R0,R1
   \       0xC6   0xD01D             BEQ.N    ??LCD_DrawLine_9
   1013              {
   1014                LCD_SetPoint(x0,y0,color);    /* 画起点 */ 
   \       0xC8   0x0022             MOVS     R2,R4
   \       0xCA   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0xCC   0x0031             MOVS     R1,R6
   \       0xCE   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xD0   0x0028             MOVS     R0,R5
   \       0xD2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0xD4   0x.... 0x....      BL       _Z12LCD_SetPointttt
   1015                x0++;                         /* X轴上加1 */
   \       0xD8   0x1C6D             ADDS     R5,R5,#+1
   1016                if( temp > 0 )                /* 判断下下个点的位置 */
   \       0xDA   0x4658             MOV      R0,R11
   \       0xDC   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xDE   0x2801             CMP      R0,#+1
   \       0xE0   0xDB0A             BLT.N    ??LCD_DrawLine_10
   1017                {
   1018                  y0++;                     /* 为右上相邻点，即（x0+1,y0+1） */ 
   \       0xE2   0x1C76             ADDS     R6,R6,#+1
   1019                  temp += 2 * dy - 2 * dx; 
   \       0xE4   0x2002             MOVS     R0,#+2
   \       0xE6   0xFB19 0xF000      SMULBB   R0,R9,R0
   \       0xEA   0xFA00 0xFB8B      SXTAH    R11,R0,R11
   \       0xEE   0x4650             MOV      R0,R10
   \       0xF0   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \       0xF2   0xEBBB 0x0B40      SUBS     R11,R11,R0, LSL #+1
   \       0xF6   0xE7E1             B.N      ??LCD_DrawLine_8
   1020                }
   1021                else         
   1022                {
   1023                  temp += 2 * dy;           /* 判断下下个点的位置 */  
   \                     ??LCD_DrawLine_10: (+1)
   \       0xF8   0x2002             MOVS     R0,#+2
   \       0xFA   0xFB19 0xF000      SMULBB   R0,R9,R0
   \       0xFE   0xFA00 0xFB8B      SXTAH    R11,R0,R11
   \      0x102   0xE7DB             B.N      ??LCD_DrawLine_8
   1024                }       
   1025              }
   1026              LCD_SetPoint(x0,y0,color);
   \                     ??LCD_DrawLine_9: (+1)
   \      0x104   0x0022             MOVS     R2,R4
   \      0x106   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \      0x108   0x0031             MOVS     R1,R6
   \      0x10A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \      0x10C   0x0028             MOVS     R0,R5
   \      0x10E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \      0x110   0x.... 0x....      BL       _Z12LCD_SetPointttt
   \      0x114   0xE032             B.N      ??LCD_DrawLine_11
   1027              }  
   1028              else
   1029              {
   1030                temp = 2 * dx - dy;                      /* 靠近Y轴 */       
   \                     ??LCD_DrawLine_7: (+1)
   \      0x116   0x4650             MOV      R0,R10
   \      0x118   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x11A   0x46CB             MOV      R11,R9
   \      0x11C   0xFA0F 0xFB8B      SXTH     R11,R11          ;; SignExt  R11,R11,#+16,#+16
   \      0x120   0xEBDB 0x0B40      RSBS     R11,R11,R0, LSL #+1
   1031                while( y0 != y1 )
   \                     ??LCD_DrawLine_12: (+1)
   \      0x124   0x0030             MOVS     R0,R6
   \      0x126   0x4641             MOV      R1,R8
   \      0x128   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \      0x12A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \      0x12C   0x4288             CMP      R0,R1
   \      0x12E   0xD01D             BEQ.N    ??LCD_DrawLine_13
   1032                {
   1033                  LCD_SetPoint(x0,y0,color);     
   \      0x130   0x0022             MOVS     R2,R4
   \      0x132   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \      0x134   0x0031             MOVS     R1,R6
   \      0x136   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \      0x138   0x0028             MOVS     R0,R5
   \      0x13A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \      0x13C   0x.... 0x....      BL       _Z12LCD_SetPointttt
   1034                  y0++;                 
   \      0x140   0x1C76             ADDS     R6,R6,#+1
   1035                  if( temp > 0 )           
   \      0x142   0x4658             MOV      R0,R11
   \      0x144   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x146   0x2801             CMP      R0,#+1
   \      0x148   0xDB0A             BLT.N    ??LCD_DrawLine_14
   1036                  {
   1037                    x0++;               
   \      0x14A   0x1C6D             ADDS     R5,R5,#+1
   1038                    temp+=2*dy-2*dx; 
   \      0x14C   0x2002             MOVS     R0,#+2
   \      0x14E   0xFB19 0xF000      SMULBB   R0,R9,R0
   \      0x152   0xFA00 0xFB8B      SXTAH    R11,R0,R11
   \      0x156   0x4650             MOV      R0,R10
   \      0x158   0xB200             SXTH     R0,R0            ;; SignExt  R0,R0,#+16,#+16
   \      0x15A   0xEBBB 0x0B40      SUBS     R11,R11,R0, LSL #+1
   \      0x15E   0xE7E1             B.N      ??LCD_DrawLine_12
   1039                  }
   1040                  else
   1041                  {
   1042                    temp += 2 * dy;
   \                     ??LCD_DrawLine_14: (+1)
   \      0x160   0x2002             MOVS     R0,#+2
   \      0x162   0xFB19 0xF000      SMULBB   R0,R9,R0
   \      0x166   0xFA00 0xFB8B      SXTAH    R11,R0,R11
   \      0x16A   0xE7DB             B.N      ??LCD_DrawLine_12
   1043                  }
   1044               } 
   1045            LCD_SetPoint(x0,y0,color);
   \                     ??LCD_DrawLine_13: (+1)
   \      0x16C   0x0022             MOVS     R2,R4
   \      0x16E   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \      0x170   0x0031             MOVS     R1,R6
   \      0x172   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \      0x174   0x0028             MOVS     R0,R5
   \      0x176   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \      0x178   0x.... 0x....      BL       _Z12LCD_SetPointttt
   1046            }
   1047          } 
   \                     ??LCD_DrawLine_11: (+1)
   \                     ??LCD_DrawLine_4: (+1)
   \      0x17C   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
   1048          
   1049          
   1050          /*
   1051           * LCD_DrawSquare
   1052           * 在指定坐标显示正方形
   1053           * 
   1054           * 参数： 
   1055           *    x0--正方形的起始横坐标 
   1056           *    y0--正方形的起始纵坐标
   1057           *    side_length--正方形的边长
   1058           *    Line_color--正方形边的颜色
   1059           *    Fill_color--正方形整体填充的颜色
   1060           *
   1061           * 输出:
   1062           *    无
   1063           */

   \                                 In section .text, align 2, keep-with-next
   1064          void LCD_DrawSquare(uint16 x0,uint16 y0,uint16 side_length,uint16 Line_color,uint16 Fill_color)
   1065          {
   \                     _Z14LCD_DrawSquarettttt: (+1)
   \        0x0   0xE92D 0x47FC      PUSH     {R2-R10,LR}
   \        0x4   0x0005             MOVS     R5,R0
   \        0x6   0x000E             MOVS     R6,R1
   \        0x8   0x0017             MOVS     R7,R2
   \        0xA   0x4698             MOV      R8,R3
   \        0xC   0x9C0A             LDR      R4,[SP, #+40]
   1066            uint16 i,j;
   1067            if(side_length > MAX_X || side_length > MAX_Y)
   \        0xE   0xF240 0x3021      MOVW     R0,#+801
   \       0x12   0x0039             MOVS     R1,R7
   \       0x14   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x16   0x4281             CMP      R1,R0
   \       0x18   0xDA05             BGE.N    ??LCD_DrawSquare_0
   \       0x1A   0xF240 0x1AE1      MOVW     R10,#+481
   \       0x1E   0x0039             MOVS     R1,R7
   \       0x20   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x22   0x4551             CMP      R1,R10
   \       0x24   0xDB00             BLT.N    ??LCD_DrawSquare_1
   1068              return;
   \                     ??LCD_DrawSquare_0: (+1)
   \       0x26   0xE063             B.N      ??LCD_DrawSquare_2
   1069            
   1070            if(x0+side_length > MAX_X)
   \                     ??LCD_DrawSquare_1: (+1)
   \       0x28   0x0039             MOVS     R1,R7
   \       0x2A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x2C   0xFA11 0xF185      UXTAH    R1,R1,R5
   \       0x30   0x4281             CMP      R1,R0
   \       0x32   0xDA5D             BGE.N    ??LCD_DrawSquare_2
   1071              return;
   1072            else
   1073              LCD_DrawLine(x0,y0,x0+side_length,y0,Line_color);
   \                     ??LCD_DrawSquare_3: (+1)
   \       0x34   0x4640             MOV      R0,R8
   \       0x36   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x38   0x9000             STR      R0,[SP, #+0]
   \       0x3A   0x0033             MOVS     R3,R6
   \       0x3C   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0x3E   0x197A             ADDS     R2,R7,R5
   \       0x40   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x42   0x0031             MOVS     R1,R6
   \       0x44   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x46   0x0028             MOVS     R0,R5
   \       0x48   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x4A   0x.... 0x....      BL       _Z12LCD_DrawLinettttt
   1074            
   1075            if(y0+side_length > MAX_Y)
   \       0x4E   0x0038             MOVS     R0,R7
   \       0x50   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x52   0xFA10 0xF086      UXTAH    R0,R0,R6
   \       0x56   0x4550             CMP      R0,R10
   \       0x58   0xDA4A             BGE.N    ??LCD_DrawSquare_2
   1076              return;
   1077            else
   1078              LCD_DrawLine(x0,y0,x0,y0+side_length,Line_color);
   \                     ??LCD_DrawSquare_4: (+1)
   \       0x5A   0x4640             MOV      R0,R8
   \       0x5C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x5E   0x9000             STR      R0,[SP, #+0]
   \       0x60   0x19BB             ADDS     R3,R7,R6
   \       0x62   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0x64   0x002A             MOVS     R2,R5
   \       0x66   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x68   0x0031             MOVS     R1,R6
   \       0x6A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x6C   0x0028             MOVS     R0,R5
   \       0x6E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x70   0x.... 0x....      BL       _Z12LCD_DrawLinettttt
   1079            
   1080            LCD_DrawLine(x0+side_length,y0,x0+side_length,y0+side_length,Line_color);
   \       0x74   0x4640             MOV      R0,R8
   \       0x76   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x78   0x9000             STR      R0,[SP, #+0]
   \       0x7A   0x19BB             ADDS     R3,R7,R6
   \       0x7C   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0x7E   0x197A             ADDS     R2,R7,R5
   \       0x80   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x82   0x0031             MOVS     R1,R6
   \       0x84   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x86   0x1978             ADDS     R0,R7,R5
   \       0x88   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x8A   0x.... 0x....      BL       _Z12LCD_DrawLinettttt
   1081            LCD_DrawLine(x0,y0+side_length,x0+side_length,y0+side_length,Line_color);
   \       0x8E   0x4640             MOV      R0,R8
   \       0x90   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x92   0x9000             STR      R0,[SP, #+0]
   \       0x94   0x19BB             ADDS     R3,R7,R6
   \       0x96   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0x98   0x197A             ADDS     R2,R7,R5
   \       0x9A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x9C   0x19B9             ADDS     R1,R7,R6
   \       0x9E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xA0   0x0028             MOVS     R0,R5
   \       0xA2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0xA4   0x.... 0x....      BL       _Z12LCD_DrawLinettttt
   1082            
   1083            for(i=0;i<side_length-1;i++)
   \       0xA8   0xF05F 0x0A00      MOVS     R10,#+0
   \                     ??LCD_DrawSquare_5: (+1)
   \       0xAC   0x4650             MOV      R0,R10
   \       0xAE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0xB0   0x0039             MOVS     R1,R7
   \       0xB2   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xB4   0x1E49             SUBS     R1,R1,#+1
   \       0xB6   0x4288             CMP      R0,R1
   \       0xB8   0xDA1A             BGE.N    ??LCD_DrawSquare_6
   1084            {
   1085              for(j=0;j<side_length-1;j++)
   \       0xBA   0x2000             MOVS     R0,#+0
   \       0xBC   0x4681             MOV      R9,R0
   \                     ??LCD_DrawSquare_7: (+1)
   \       0xBE   0x4648             MOV      R0,R9
   \       0xC0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0xC2   0x0039             MOVS     R1,R7
   \       0xC4   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xC6   0x1E49             SUBS     R1,R1,#+1
   \       0xC8   0x4288             CMP      R0,R1
   \       0xCA   0xDA0E             BGE.N    ??LCD_DrawSquare_8
   1086              {
   1087                LCD_SetPoint(x0+1+i,y0+1+j,Fill_color);
   \       0xCC   0x0022             MOVS     R2,R4
   \       0xCE   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0xD0   0xEB19 0x0106      ADDS     R1,R9,R6
   \       0xD4   0x1C49             ADDS     R1,R1,#+1
   \       0xD6   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xD8   0xEB1A 0x0005      ADDS     R0,R10,R5
   \       0xDC   0x1C40             ADDS     R0,R0,#+1
   \       0xDE   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0xE0   0x.... 0x....      BL       _Z12LCD_SetPointttt
   1088              }
   \       0xE4   0xF119 0x0901      ADDS     R9,R9,#+1
   \       0xE8   0xE7E9             B.N      ??LCD_DrawSquare_7
   1089            }
   \                     ??LCD_DrawSquare_8: (+1)
   \       0xEA   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \       0xEE   0xE7DD             B.N      ??LCD_DrawSquare_5
   1090          }
   \                     ??LCD_DrawSquare_6: (+1)
   \                     ??LCD_DrawSquare_2: (+1)
   \       0xF0   0xE8BD 0x87F3      POP      {R0,R1,R4-R10,PC}  ;; return
   1091          
   1092          /*
   1093           * LCD_DrawRectangle
   1094           * 在指定坐标显示矩形
   1095           * 
   1096           * 参数： 
   1097           *    x0--长方形的起始横坐标 
   1098           *    y0--长方形的起始纵坐标
   1099           *    side_xlength--长
   1100           *    side_ylength--宽
   1101           *    Line_color--长方形边的颜色
   1102           *    Fill_color--长方形整体填充的颜色
   1103           *
   1104           * 输出:
   1105           *    无
   1106           */

   \                                 In section .text, align 2, keep-with-next
   1107          void LCD_DrawRectangle(uint16 x0,uint16 y0,uint16 side_xlength,uint16 side_ylength,uint16 Line_color,uint16 Fill_color)
   1108          {
   \                     _Z17LCD_DrawRectangletttttt: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0x0006             MOVS     R6,R0
   \        0x6   0x000F             MOVS     R7,R1
   \        0x8   0x4690             MOV      R8,R2
   \        0xA   0x4699             MOV      R9,R3
   \        0xC   0x9C0A             LDR      R4,[SP, #+40]
   \        0xE   0x9D0B             LDR      R5,[SP, #+44]
   1109            uint16 i,j;
   1110            if(side_xlength > MAX_X || side_ylength > MAX_Y)
   \       0x10   0xF240 0x3021      MOVW     R0,#+801
   \       0x14   0x4641             MOV      R1,R8
   \       0x16   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x18   0x4281             CMP      R1,R0
   \       0x1A   0xDA05             BGE.N    ??LCD_DrawRectangle_0
   \       0x1C   0xF240 0x1BE1      MOVW     R11,#+481
   \       0x20   0x4649             MOV      R1,R9
   \       0x22   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x24   0x4559             CMP      R1,R11
   \       0x26   0xDB00             BLT.N    ??LCD_DrawRectangle_1
   1111              return;
   \                     ??LCD_DrawRectangle_0: (+1)
   \       0x28   0xE06B             B.N      ??LCD_DrawRectangle_2
   1112            
   1113            if(x0+side_xlength > MAX_X)
   \                     ??LCD_DrawRectangle_1: (+1)
   \       0x2A   0x4641             MOV      R1,R8
   \       0x2C   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x2E   0xFA11 0xF186      UXTAH    R1,R1,R6
   \       0x32   0x4281             CMP      R1,R0
   \       0x34   0xDA65             BGE.N    ??LCD_DrawRectangle_2
   1114              return;
   1115            else
   1116              LCD_DrawLine(x0,y0,x0+side_xlength,y0,Line_color);
   \                     ??LCD_DrawRectangle_3: (+1)
   \       0x36   0x0020             MOVS     R0,R4
   \       0x38   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x3A   0x9000             STR      R0,[SP, #+0]
   \       0x3C   0x003B             MOVS     R3,R7
   \       0x3E   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0x40   0xEB18 0x0206      ADDS     R2,R8,R6
   \       0x44   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x46   0x0039             MOVS     R1,R7
   \       0x48   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x4A   0x0030             MOVS     R0,R6
   \       0x4C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x4E   0x.... 0x....      BL       _Z12LCD_DrawLinettttt
   1117            
   1118            if(y0+side_ylength > MAX_Y)
   \       0x52   0x4648             MOV      R0,R9
   \       0x54   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x56   0xFA10 0xF087      UXTAH    R0,R0,R7
   \       0x5A   0x4558             CMP      R0,R11
   \       0x5C   0xDA51             BGE.N    ??LCD_DrawRectangle_2
   1119              return;
   1120            else
   1121              LCD_DrawLine(x0,y0,x0,y0+side_ylength,Line_color);
   \                     ??LCD_DrawRectangle_4: (+1)
   \       0x5E   0x0020             MOVS     R0,R4
   \       0x60   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x62   0x9000             STR      R0,[SP, #+0]
   \       0x64   0xEB19 0x0307      ADDS     R3,R9,R7
   \       0x68   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0x6A   0x0032             MOVS     R2,R6
   \       0x6C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x6E   0x0039             MOVS     R1,R7
   \       0x70   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x72   0x0030             MOVS     R0,R6
   \       0x74   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x76   0x.... 0x....      BL       _Z12LCD_DrawLinettttt
   1122            
   1123            LCD_DrawLine(x0+side_xlength,y0,x0+side_xlength,y0+side_ylength,Line_color);
   \       0x7A   0x0020             MOVS     R0,R4
   \       0x7C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x7E   0x9000             STR      R0,[SP, #+0]
   \       0x80   0xEB19 0x0307      ADDS     R3,R9,R7
   \       0x84   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0x86   0xEB18 0x0206      ADDS     R2,R8,R6
   \       0x8A   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x8C   0x0039             MOVS     R1,R7
   \       0x8E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x90   0xEB18 0x0006      ADDS     R0,R8,R6
   \       0x94   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x96   0x.... 0x....      BL       _Z12LCD_DrawLinettttt
   1124            LCD_DrawLine(x0,y0+side_ylength,x0+side_xlength,y0+side_ylength,Line_color);
   \       0x9A   0x0020             MOVS     R0,R4
   \       0x9C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x9E   0x9000             STR      R0,[SP, #+0]
   \       0xA0   0xEB19 0x0307      ADDS     R3,R9,R7
   \       0xA4   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0xA6   0xEB18 0x0206      ADDS     R2,R8,R6
   \       0xAA   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0xAC   0xEB19 0x0107      ADDS     R1,R9,R7
   \       0xB0   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xB2   0x0030             MOVS     R0,R6
   \       0xB4   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0xB6   0x.... 0x....      BL       _Z12LCD_DrawLinettttt
   1125            
   1126            for(i=0;i<side_xlength-1;i++)
   \       0xBA   0xF05F 0x0B00      MOVS     R11,#+0
   \                     ??LCD_DrawRectangle_5: (+1)
   \       0xBE   0x4658             MOV      R0,R11
   \       0xC0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0xC2   0x4641             MOV      R1,R8
   \       0xC4   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xC6   0x1E49             SUBS     R1,R1,#+1
   \       0xC8   0x4288             CMP      R0,R1
   \       0xCA   0xDA1A             BGE.N    ??LCD_DrawRectangle_6
   1127            {
   1128              for(j=0;j<side_ylength-1;j++)
   \       0xCC   0x2000             MOVS     R0,#+0
   \       0xCE   0x4682             MOV      R10,R0
   \                     ??LCD_DrawRectangle_7: (+1)
   \       0xD0   0x4650             MOV      R0,R10
   \       0xD2   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0xD4   0x4649             MOV      R1,R9
   \       0xD6   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xD8   0x1E49             SUBS     R1,R1,#+1
   \       0xDA   0x4288             CMP      R0,R1
   \       0xDC   0xDA0E             BGE.N    ??LCD_DrawRectangle_8
   1129              {
   1130                LCD_SetPoint(x0+1+i,y0+1+j,Fill_color);
   \       0xDE   0x002A             MOVS     R2,R5
   \       0xE0   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0xE2   0xEB1A 0x0107      ADDS     R1,R10,R7
   \       0xE6   0x1C49             ADDS     R1,R1,#+1
   \       0xE8   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0xEA   0xEB1B 0x0006      ADDS     R0,R11,R6
   \       0xEE   0x1C40             ADDS     R0,R0,#+1
   \       0xF0   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0xF2   0x.... 0x....      BL       _Z12LCD_SetPointttt
   1131              }
   \       0xF6   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \       0xFA   0xE7E9             B.N      ??LCD_DrawRectangle_7
   1132            }
   \                     ??LCD_DrawRectangle_8: (+1)
   \       0xFC   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \      0x100   0xE7DD             B.N      ??LCD_DrawRectangle_5
   1133          }
   \                     ??LCD_DrawRectangle_6: (+1)
   \                     ??LCD_DrawRectangle_2: (+1)
   \      0x102   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
   1134          
   1135          /*
   1136           * LCD_GRAMFillRec
   1137           * 填充指定颜色的矩形到LCD_GRAM
   1138           * 
   1139           * 参数： 
   1140           *    x0--X轴起始坐标
   1141           *    y0--Y轴起始坐标
   1142           *    x1--X轴结束坐标
   1143           *    y1--Y轴结束坐标
   1144           *    Color--16位RGB颜色值
   1145           *
   1146           * 输出:
   1147           *    无
   1148           */

   \                                 In section .text, align 2, keep-with-next
   1149          void LCD_GRAMFillRec(uint16 x0,uint16 y0,uint16 x1,uint16 y1,uint16 Color)
   1150          {          
   \                     _Z15LCD_GRAMFillRecttttt: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x9D06             LDR      R5,[SP, #+24]
   1151            uint16 i,j;   
   1152            for(i=y0;i<=y1;i++)
   \        0x6   0x000F             MOVS     R7,R1
   \                     ??LCD_GRAMFillRec_0: (+1)
   \        0x8   0x001C             MOVS     R4,R3
   \        0xA   0x46BC             MOV      R12,R7
   \        0xC   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \        0xE   0xFA1F 0xFC8C      UXTH     R12,R12          ;; ZeroExt  R12,R12,#+16,#+16
   \       0x12   0x4564             CMP      R4,R12
   \       0x14   0xD320             BCC.N    ??LCD_GRAMFillRec_1
   1153            {
   1154              for(j=x0; j<x1; j++)
   \       0x16   0x0006             MOVS     R6,R0
   \                     ??LCD_GRAMFillRec_2: (+1)
   \       0x18   0x0034             MOVS     R4,R6
   \       0x1A   0x4694             MOV      R12,R2
   \       0x1C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \       0x1E   0xFA1F 0xFC8C      UXTH     R12,R12          ;; ZeroExt  R12,R12,#+16,#+16
   \       0x22   0x4564             CMP      R4,R12
   \       0x24   0xD216             BCS.N    ??LCD_GRAMFillRec_3
   1155              {
   1156                LCD_GRAM[MAX_X*MAX_Y - (j-1)*MAX_Y - (i)] = Color;
   \       0x26   0x.... 0x....      LDR.W    R4,??DataTable20_2
   \       0x2A   0xF8D4 0xC000      LDR      R12,[R4, #+0]
   \       0x2E   0x.... 0x....      LDR.W    LR,??DataTable20_1  ;; 0x5dc00
   \       0x32   0x46B0             MOV      R8,R6
   \       0x34   0xFA1F 0xF888      UXTH     R8,R8            ;; ZeroExt  R8,R8,#+16,#+16
   \       0x38   0xF1B8 0x0801      SUBS     R8,R8,#+1
   \       0x3C   0xF44F 0x74F0      MOV      R4,#+480
   \       0x40   0xFB04 0xEE18      MLS      LR,R4,R8,LR
   \       0x44   0x003C             MOVS     R4,R7
   \       0x46   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \       0x48   0xEBBE 0x0E04      SUBS     LR,LR,R4
   \       0x4C   0xF82C 0x501E      STRH     R5,[R12, LR, LSL #+1]
   1157              }    
   \       0x50   0x1C76             ADDS     R6,R6,#+1
   \       0x52   0xE7E1             B.N      ??LCD_GRAMFillRec_2
   1158            }
   \                     ??LCD_GRAMFillRec_3: (+1)
   \       0x54   0x1C7F             ADDS     R7,R7,#+1
   \       0x56   0xE7D7             B.N      ??LCD_GRAMFillRec_0
   1159          } 
   \                     ??LCD_GRAMFillRec_1: (+1)
   \       0x58   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   1160          
   1161          /*
   1162           * LCD_GRAMDrawHLine
   1163           * 填充指定颜色的横线到LCD_GRAM
   1164           * 
   1165           * 参数： 
   1166           *    x0--X轴起始坐标
   1167           *    y0--Y轴起始坐标
   1168           *    len--横线长度
   1169           *    Color--16位RGB颜色值
   1170           *
   1171           * 输出:
   1172           *    无
   1173           */

   \                                 In section .text, align 2, keep-with-next
   1174          void LCD_GRAMDrawHLine(uint16 x0,uint16 y0,uint16 len,uint16 Color)
   1175          {
   \                     _Z17LCD_GRAMDrawHLinetttt: (+1)
   \        0x0   0xB4F0             PUSH     {R4-R7}
   1176            uint16 i;
   1177            for(i=0; i<len; i++)
   \        0x2   0x2500             MOVS     R5,#+0
   \                     ??LCD_GRAMDrawHLine_0: (+1)
   \        0x4   0x002C             MOVS     R4,R5
   \        0x6   0x0016             MOVS     R6,R2
   \        0x8   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \        0xA   0xB2B6             UXTH     R6,R6            ;; ZeroExt  R6,R6,#+16,#+16
   \        0xC   0x42B4             CMP      R4,R6
   \        0xE   0xD213             BCS.N    ??LCD_GRAMDrawHLine_1
   1178            {
   1179              LCD_GRAM[MAX_X*MAX_Y - (x0+i-1)*MAX_Y - (y0)] = Color;
   \       0x10   0x....             LDR.N    R4,??DataTable20_2
   \       0x12   0x6826             LDR      R6,[R4, #+0]
   \       0x14   0x....             LDR.N    R7,??DataTable20_1  ;; 0x5dc00
   \       0x16   0x002C             MOVS     R4,R5
   \       0x18   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \       0x1A   0xFA14 0xFC80      UXTAH    R12,R4,R0
   \       0x1E   0xF1BC 0x0C01      SUBS     R12,R12,#+1
   \       0x22   0xF44F 0x74F0      MOV      R4,#+480
   \       0x26   0xFB04 0x771C      MLS      R7,R4,R12,R7
   \       0x2A   0x000C             MOVS     R4,R1
   \       0x2C   0xB2A4             UXTH     R4,R4            ;; ZeroExt  R4,R4,#+16,#+16
   \       0x2E   0x1B3F             SUBS     R7,R7,R4
   \       0x30   0xF826 0x3017      STRH     R3,[R6, R7, LSL #+1]
   1180            }
   \       0x34   0x1C6D             ADDS     R5,R5,#+1
   \       0x36   0xE7E5             B.N      ??LCD_GRAMDrawHLine_0
   1181          }
   \                     ??LCD_GRAMDrawHLine_1: (+1)
   \       0x38   0xBCF0             POP      {R4-R7}
   \       0x3A   0x4770             BX       LR               ;; return
   1182          
   1183          /*
   1184           * LCD_GRAMDrawHLine
   1185           * 显示一幅指定大小的U8灰度图像
   1186           * 
   1187           * 参数： 
   1188           *    *Color--8位灰度图像数组
   1189           *    w--图像宽
   1190           *    h--图像高
   1191           *
   1192           * 输出:
   1193           *    无
   1194           */

   \                                 In section .text, align 2, keep-with-next
   1195          void LCD_DrawU8Gray(uint8 *Color, uint16 w, uint16 h)
   1196          {
   \                     _Z14LCD_DrawU8GrayPhtt: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   1197            uint16 i=0, j=0;
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x2700             MOVS     R7,#+0
   1198           
   1199            for(i=0; i<w; i++)
   \        0xE   0xF05F 0x0800      MOVS     R8,#+0
   \                     ??LCD_DrawU8Gray_0: (+1)
   \       0x12   0x4640             MOV      R0,R8
   \       0x14   0x0029             MOVS     R1,R5
   \       0x16   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x18   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x1A   0x4288             CMP      R0,R1
   \       0x1C   0xD224             BCS.N    ??LCD_DrawU8Gray_1
   1200            {  
   1201              LCD_SetCursor(w-i-1, 0); 
   \       0x1E   0x2100             MOVS     R1,#+0
   \       0x20   0xEBB5 0x0008      SUBS     R0,R5,R8
   \       0x24   0x1E40             SUBS     R0,R0,#+1
   \       0x26   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x28   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_SetCursorEtt
   1202              LCD_WriteIndex(LCD_INFO.Write_GRAM);
   \       0x2C   0x....             LDR.N    R0,??DataTable20
   \       0x2E   0x8840             LDRH     R0,[R0, #+2]
   \       0x30   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX14LCD_WriteIndexEt
   1203              for(j=0; j<h; j++)
   \       0x34   0x2000             MOVS     R0,#+0
   \       0x36   0x0007             MOVS     R7,R0
   \                     ??LCD_DrawU8Gray_2: (+1)
   \       0x38   0x0038             MOVS     R0,R7
   \       0x3A   0x0031             MOVS     R1,R6
   \       0x3C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x3E   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x40   0x4288             CMP      R0,R1
   \       0x42   0xD20E             BCS.N    ??LCD_DrawU8Gray_3
   1204              {
   1205                LCD_WriteData(LCD_U8GRAY2RGB(Color[j*w+i]));
   \       0x44   0x0039             MOVS     R1,R7
   \       0x46   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x48   0x0028             MOVS     R0,R5
   \       0x4A   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x4C   0x4341             MULS     R1,R0,R1
   \       0x4E   0xFA11 0xF088      UXTAH    R0,R1,R8
   \       0x52   0x5C20             LDRB     R0,[R4, R0]
   \       0x54   0x.... 0x....      BL       _Z14LCD_U8GRAY2RGBh
   \       0x58   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x5A   0x.... 0x....      BL       _ZN26_INTERNAL_9_DEV_LCD_c_PreX13LCD_WriteDataEt
   1206              }   
   \       0x5E   0x1C7F             ADDS     R7,R7,#+1
   \       0x60   0xE7EA             B.N      ??LCD_DrawU8Gray_2
   1207            }
   \                     ??LCD_DrawU8Gray_3: (+1)
   \       0x62   0xF118 0x0801      ADDS     R8,R8,#+1
   \       0x66   0xE7D4             B.N      ??LCD_DrawU8Gray_0
   1208          }
   \                     ??LCD_DrawU8Gray_1: (+1)
   \       0x68   0xE8BD 0x81F0      POP      {R4-R8,PC}       ;; return
   1209          
   1210          /*
   1211           * LCD_ShowChar
   1212           * 在指定坐标显示字符
   1213           * 
   1214           * 参数： 
   1215           *    Xpos--X轴坐标
   1216           *    Ypos--Y轴坐标
   1217           *    ASCI--ASCI码
   1218           *    charColor--字符字体颜色
   1219           *    bkColor--字符背景颜色
   1220           *
   1221           * 输出:
   1222           *    无
   1223           */

   \                                 In section .text, align 2, keep-with-next
   1224          void LCD_ShowChar( uint16 Xpos, uint16 Ypos, uint8 ASCI, uint16 charColor, uint16 bkColor )
   1225          {
   \                     _Z12LCD_ShowChartthtt: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0x0005             MOVS     R5,R0
   \        0x6   0x000E             MOVS     R6,R1
   \        0x8   0x0017             MOVS     R7,R2
   \        0xA   0x4698             MOV      R8,R3
   \        0xC   0x9C0A             LDR      R4,[SP, #+40]
   1226            uint16 i, j;
   1227            uint8 tmp_char;
   1228            for( i=0; i<16; i++ )
   \        0xE   0xF05F 0x0B00      MOVS     R11,#+0
   \                     ??LCD_ShowChar_0: (+1)
   \       0x12   0x4658             MOV      R0,R11
   \       0x14   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x16   0x2810             CMP      R0,#+16
   \       0x18   0xDA32             BGE.N    ??LCD_ShowChar_1
   1229            {
   1230              tmp_char = asc2_1608[ASCI-32][i];
   \       0x1A   0x....             LDR.N    R0,??DataTable20_3
   \       0x1C   0x0039             MOVS     R1,R7
   \       0x1E   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x20   0x0109             LSLS     R1,R1,#+4
   \       0x22   0x4408             ADD      R0,R0,R1
   \       0x24   0x4659             MOV      R1,R11
   \       0x26   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x28   0x4408             ADD      R0,R0,R1
   \       0x2A   0xF5B0 0x7000      SUBS     R0,R0,#+512
   \       0x2E   0x7800             LDRB     R0,[R0, #+0]
   \       0x30   0x4682             MOV      R10,R0
   1231              for( j=0; j<8; j++ )
   \       0x32   0x2000             MOVS     R0,#+0
   \       0x34   0x4681             MOV      R9,R0
   \                     ??LCD_ShowChar_2: (+1)
   \       0x36   0x4648             MOV      R0,R9
   \       0x38   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x3A   0x2808             CMP      R0,#+8
   \       0x3C   0xDA1D             BGE.N    ??LCD_ShowChar_3
   1232              {
   1233                if( (tmp_char >> j) & 0x01 == 0x01 )
   \       0x3E   0x4650             MOV      R0,R10
   \       0x40   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x42   0xFA50 0xF009      ASRS     R0,R0,R9
   \       0x46   0x07C0             LSLS     R0,R0,#+31
   \       0x48   0xD50A             BPL.N    ??LCD_ShowChar_4
   1234                {
   1235                  LCD_SetPoint( Xpos + j, Ypos + i, charColor );  /* 字符颜色 */
   \       0x4A   0x4642             MOV      R2,R8
   \       0x4C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x4E   0xEB1B 0x0106      ADDS     R1,R11,R6
   \       0x52   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x54   0xEB19 0x0005      ADDS     R0,R9,R5
   \       0x58   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x5A   0x.... 0x....      BL       _Z12LCD_SetPointttt
   \       0x5E   0xE009             B.N      ??LCD_ShowChar_5
   1236                }
   1237                else
   1238                {
   1239                  LCD_SetPoint( Xpos + j, Ypos + i, bkColor );  /* 背景颜色 */
   \                     ??LCD_ShowChar_4: (+1)
   \       0x60   0x0022             MOVS     R2,R4
   \       0x62   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x64   0xEB1B 0x0106      ADDS     R1,R11,R6
   \       0x68   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x6A   0xEB19 0x0005      ADDS     R0,R9,R5
   \       0x6E   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x70   0x.... 0x....      BL       _Z12LCD_SetPointttt
   1240                }
   1241              }
   \                     ??LCD_ShowChar_5: (+1)
   \       0x74   0xF119 0x0901      ADDS     R9,R9,#+1
   \       0x78   0xE7DD             B.N      ??LCD_ShowChar_2
   1242            }
   \                     ??LCD_ShowChar_3: (+1)
   \       0x7A   0xF11B 0x0B01      ADDS     R11,R11,#+1
   \       0x7E   0xE7C8             B.N      ??LCD_ShowChar_0
   1243          }
   \                     ??LCD_ShowChar_1: (+1)
   \       0x80   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
   1244          

   \                                 In section .text, align 2, keep-with-next
   1245          uint32 mypow(uint8 m,uint8 n)
   1246          {
   \                     _Z5mypowhh: (+1)
   \        0x0   0x0003             MOVS     R3,R0
   1247          	uint32 result=1;	 
   \        0x2   0x2001             MOVS     R0,#+1
   1248          	while(n--)result*=m;    
   \                     ??mypow_0: (+1)
   \        0x4   0x000A             MOVS     R2,R1
   \        0x6   0x1E51             SUBS     R1,R2,#+1
   \        0x8   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \        0xA   0x2A00             CMP      R2,#+0
   \        0xC   0xD003             BEQ.N    ??mypow_1
   \        0xE   0x001A             MOVS     R2,R3
   \       0x10   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x12   0x4350             MULS     R0,R2,R0
   \       0x14   0xE7F6             B.N      ??mypow_0
   1249          	return result;
   \                     ??mypow_1: (+1)
   \       0x16   0x4770             BX       LR               ;; return
   1250          }
   1251          
   1252          /*
   1253           * LCD_ShowNum
   1254           * 在指定坐标显示数字
   1255           * 
   1256           * 参数： 
   1257           *    Xpos--X轴坐标
   1258           *    Ypos--Y轴坐标
   1259           *    num--数字
   1260           *    len--数字长度
   1261           *    charColor--字符字体颜色
   1262           *    bkColor--字符背景颜色
   1263           *
   1264           * 输出:
   1265           *    无
   1266           */

   \                                 In section .text, align 2, keep-with-next
   1267          void LCD_ShowNum(uint16 Xpos, uint16 Ypos, uint16 num, uint8 len, uint16 charColor, uint16 bkColor )
   1268          {         	
   \                     _Z11LCD_ShowNumttthtt: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0x0006             MOVS     R6,R0
   \        0x6   0x468B             MOV      R11,R1
   \        0x8   0x0017             MOVS     R7,R2
   \        0xA   0x4698             MOV      R8,R3
   \        0xC   0x9C0A             LDR      R4,[SP, #+40]
   \        0xE   0x9D0B             LDR      R5,[SP, #+44]
   1269            uint8 t,temp;						   
   1270            for(t=0;t<len;t++)
   \       0x10   0xF05F 0x0A00      MOVS     R10,#+0
   \                     ??LCD_ShowNum_0: (+1)
   \       0x14   0x4650             MOV      R0,R10
   \       0x16   0x4641             MOV      R1,R8
   \       0x18   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x1A   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x1C   0x4288             CMP      R0,R1
   \       0x1E   0xD229             BCS.N    ??LCD_ShowNum_1
   1271            {
   1272              temp=(num/mypow(10,len-t-1))%10;
   \       0x20   0xEBB8 0x000A      SUBS     R0,R8,R10
   \       0x24   0x1E41             SUBS     R1,R0,#+1
   \       0x26   0xB2C9             UXTB     R1,R1            ;; ZeroExt  R1,R1,#+24,#+24
   \       0x28   0x200A             MOVS     R0,#+10
   \       0x2A   0x.... 0x....      BL       _Z5mypowhh
   \       0x2E   0x0039             MOVS     R1,R7
   \       0x30   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x32   0xFBB1 0xF0F0      UDIV     R0,R1,R0
   \       0x36   0x210A             MOVS     R1,#+10
   \       0x38   0xFBB0 0xF2F1      UDIV     R2,R0,R1
   \       0x3C   0xFB01 0x0012      MLS      R0,R1,R2,R0
   \       0x40   0x4681             MOV      R9,R0
   1273              LCD_ShowChar(Xpos+(8)*t,Ypos,temp+'0',charColor,bkColor); 
   \       0x42   0x0028             MOVS     R0,R5
   \       0x44   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x46   0x9000             STR      R0,[SP, #+0]
   \       0x48   0x0023             MOVS     R3,R4
   \       0x4A   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0x4C   0xF119 0x0230      ADDS     R2,R9,#+48
   \       0x50   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x52   0x4659             MOV      R1,R11
   \       0x54   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x56   0x4650             MOV      R0,R10
   \       0x58   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x5A   0x00C0             LSLS     R0,R0,#+3
   \       0x5C   0xFA10 0xF086      UXTAH    R0,R0,R6
   \       0x60   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x62   0x.... 0x....      BL       _Z12LCD_ShowChartthtt
   1274              CurX = CurX + 8;  
   \       0x66   0x....             LDR.N    R0,??DataTable20_4
   \       0x68   0x8801             LDRH     R1,[R0, #+0]
   \       0x6A   0x3108             ADDS     R1,R1,#+8
   \       0x6C   0x8001             STRH     R1,[R0, #+0]
   1275            }
   \       0x6E   0xF11A 0x0A01      ADDS     R10,R10,#+1
   \       0x72   0xE7CF             B.N      ??LCD_ShowNum_0
   1276          } 
   \                     ??LCD_ShowNum_1: (+1)
   \       0x74   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}   ;; return
   1277          
   1278          /*
   1279           * LCD_ShowString
   1280           * 在指定坐标显示字符串
   1281           * 
   1282           * 参数： 
   1283           *    Xpos--X轴坐标
   1284           *    Ypos--Y轴坐标
   1285           *    *str--字符串
   1286           *    strColor--字符串字体颜色
   1287           *    bkColor--字符背景颜色
   1288           *
   1289           * 输出:
   1290           *    无
   1291           */

   \                                 In section .text, align 2, keep-with-next
   1292          void LCD_ShowString(uint16 Xpos, uint16 Ypos, uint8 *str,uint16 strColor, uint16 bkColor)
   1293          {
   \                     _Z14LCD_ShowStringttPhtt: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0x0005             MOVS     R5,R0
   \        0x6   0x000E             MOVS     R6,R1
   \        0x8   0x0017             MOVS     R7,R2
   \        0xA   0x4698             MOV      R8,R3
   \        0xC   0x9C08             LDR      R4,[SP, #+32]
   1294            uint8 TempChar;
   1295            do
   1296            {
   1297              TempChar = *str++;  
   \                     ??LCD_ShowString_0: (+1)
   \        0xE   0x7838             LDRB     R0,[R7, #+0]
   \       0x10   0x4681             MOV      R9,R0
   \       0x12   0x1C7F             ADDS     R7,R7,#+1
   1298              LCD_ShowChar( Xpos, Ypos, TempChar, strColor, bkColor );    
   \       0x14   0x0020             MOVS     R0,R4
   \       0x16   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x18   0x9000             STR      R0,[SP, #+0]
   \       0x1A   0x4643             MOV      R3,R8
   \       0x1C   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0x1E   0x464A             MOV      R2,R9
   \       0x20   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \       0x22   0x0031             MOVS     R1,R6
   \       0x24   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x26   0x0028             MOVS     R0,R5
   \       0x28   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x2A   0x.... 0x....      BL       _Z12LCD_ShowChartthtt
   1299              if( Xpos <= MAX_X - 8 )
   \       0x2E   0x0028             MOVS     R0,R5
   \       0x30   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x32   0xF240 0x3119      MOVW     R1,#+793
   \       0x36   0x4288             CMP      R0,R1
   \       0x38   0xDA01             BGE.N    ??LCD_ShowString_1
   1300              {
   1301                Xpos += 8;
   \       0x3A   0x3508             ADDS     R5,R5,#+8
   \       0x3C   0xE00D             B.N      ??LCD_ShowString_2
   1302              } 
   1303              else if ( Ypos <= MAX_Y - 16 )
   \                     ??LCD_ShowString_1: (+1)
   \       0x3E   0x0030             MOVS     R0,R6
   \       0x40   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x42   0xF240 0x11D1      MOVW     R1,#+465
   \       0x46   0x4288             CMP      R0,R1
   \       0x48   0xDA03             BGE.N    ??LCD_ShowString_3
   1304              {
   1305                Xpos = 0;
   \       0x4A   0x2000             MOVS     R0,#+0
   \       0x4C   0x0005             MOVS     R5,R0
   1306                Ypos += 16;
   \       0x4E   0x3610             ADDS     R6,R6,#+16
   \       0x50   0xE003             B.N      ??LCD_ShowString_2
   1307              }   
   1308              else
   1309              {
   1310                Xpos = 0;
   \                     ??LCD_ShowString_3: (+1)
   \       0x52   0x2000             MOVS     R0,#+0
   \       0x54   0x0005             MOVS     R5,R0
   1311                Ypos = 0;
   \       0x56   0x2000             MOVS     R0,#+0
   \       0x58   0x0006             MOVS     R6,R0
   1312              } 
   1313              CurX = CurX + 8;  
   \                     ??LCD_ShowString_2: (+1)
   \       0x5A   0x....             LDR.N    R0,??DataTable20_4
   \       0x5C   0x8801             LDRH     R1,[R0, #+0]
   \       0x5E   0x3108             ADDS     R1,R1,#+8
   \       0x60   0x8001             STRH     R1,[R0, #+0]
   1314            }
   1315            while ( *str != 0 );
   \       0x62   0x7838             LDRB     R0,[R7, #+0]
   \       0x64   0x2800             CMP      R0,#+0
   \       0x66   0xD1D2             BNE.N    ??LCD_ShowString_0
   1316          }
   \       0x68   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
   1317          
   1318          /*
   1319           * LCD_PrintStringLine
   1320           * 另起一行显示字符串
   1321           * 
   1322           * 参数： 
   1323           *    *str--字符串
   1324           *    strColor--字符串字体颜色
   1325           *    bkColor--字符背景颜色
   1326           *
   1327           * 输出:
   1328           *    无
   1329           */

   \                                 In section .text, align 2, keep-with-next
   1330          void LCD_PrintStringLine(uint8 *str,uint16 strColor, uint16 bkColor)
   1331          {
   \                     _Z19LCD_PrintStringLinePhtt: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   1332            CurX = 0;
   \        0xA   0x2000             MOVS     R0,#+0
   \        0xC   0x....             LDR.N    R1,??DataTable20_4
   \        0xE   0x8008             STRH     R0,[R1, #+0]
   1333            LCD_ShowString(0, CurY*18, str, strColor, bkColor);
   \       0x10   0x2712             MOVS     R7,#+18
   \       0x12   0x.... 0x....      LDR.W    R8,??DataTable20_5
   \       0x16   0x0030             MOVS     R0,R6
   \       0x18   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x1A   0x9000             STR      R0,[SP, #+0]
   \       0x1C   0x002B             MOVS     R3,R5
   \       0x1E   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0x20   0x0022             MOVS     R2,R4
   \       0x22   0xF8B8 0x0000      LDRH     R0,[R8, #+0]
   \       0x26   0xFB10 0xF107      SMULBB   R1,R0,R7
   \       0x2A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0x.... 0x....      BL       _Z14LCD_ShowStringttPhtt
   1334            CurY++;
   \       0x32   0xF8B8 0x0000      LDRH     R0,[R8, #+0]
   \       0x36   0x1C40             ADDS     R0,R0,#+1
   \       0x38   0xF8A8 0x0000      STRH     R0,[R8, #+0]
   1335            if((CurY+1)*18>MAX_Y)
   \       0x3C   0xF8B8 0x0000      LDRH     R0,[R8, #+0]
   \       0x40   0x1C40             ADDS     R0,R0,#+1
   \       0x42   0xFB07 0xF700      MUL      R7,R7,R0
   \       0x46   0xF240 0x10E1      MOVW     R0,#+481
   \       0x4A   0x4287             CMP      R7,R0
   \       0x4C   0xDB02             BLT.N    ??LCD_PrintStringLine_0
   1336            {
   1337              CurY=0;
   \       0x4E   0x2000             MOVS     R0,#+0
   \       0x50   0xF8A8 0x0000      STRH     R0,[R8, #+0]
   1338            }
   1339          }
   \                     ??LCD_PrintStringLine_0: (+1)
   \       0x54   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}  ;; return
   1340          
   1341          /*
   1342           * LCD_PrintString
   1343           * 接着当前行显示字符串
   1344           * 
   1345           * 参数： 
   1346           *    *str--字符串
   1347           *    strColor--字符串字体颜色
   1348           *    bkColor--字符背景颜色
   1349           *
   1350           * 输出:
   1351           *    无
   1352           */

   \                                 In section .text, align 2, keep-with-next
   1353          void LCD_PrintString(uint8 *str,uint16 Color, uint16 bkColor)
   1354          {
   \                     _Z15LCD_PrintStringPhtt: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
   1355            LCD_ShowString(CurX, (CurY-1)*18, str, Color, bkColor);
   \        0x8   0x0030             MOVS     R0,R6
   \        0xA   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \        0xC   0x9000             STR      R0,[SP, #+0]
   \        0xE   0x002B             MOVS     R3,R5
   \       0x10   0xB29B             UXTH     R3,R3            ;; ZeroExt  R3,R3,#+16,#+16
   \       0x12   0x0022             MOVS     R2,R4
   \       0x14   0x....             LDR.N    R0,??DataTable20_5
   \       0x16   0x8800             LDRH     R0,[R0, #+0]
   \       0x18   0x1E40             SUBS     R0,R0,#+1
   \       0x1A   0x2112             MOVS     R1,#+18
   \       0x1C   0xFB10 0xF101      SMULBB   R1,R0,R1
   \       0x20   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x22   0x....             LDR.N    R0,??DataTable20_4
   \       0x24   0x8800             LDRH     R0,[R0, #+0]
   \       0x26   0x.... 0x....      BL       _Z14LCD_ShowStringttPhtt
   1356          }
   \       0x2A   0xBD73             POP      {R0,R1,R4-R6,PC}  ;; return
   1357          
   1358          /*
   1359           * LCD_PrintNumLine
   1360           * 另起一行显示数字
   1361           * 
   1362           * 参数： 
   1363           *    num--数字
   1364           *    len--数字长度
   1365           *    numColor--字符字体颜色
   1366           *    bkColor--字符背景颜色
   1367           *
   1368           * 输出:
   1369           *    无
   1370           */

   \                                 In section .text, align 2, keep-with-next
   1371          void LCD_PrintNumLine(uint16 num,uint8 len,uint16 numColor, uint16 bkColor)
   1372          {
   \                     _Z16LCD_PrintNumLinethtt: (+1)
   \        0x0   0xE92D 0x43FE      PUSH     {R1-R9,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   1373            CurX = 0;
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0x....             LDR.N    R1,??DataTable20_4
   \       0x10   0x8008             STRH     R0,[R1, #+0]
   1374            LCD_ShowNum(0, CurY*18, num, len, numColor, bkColor);
   \       0x12   0xF05F 0x0812      MOVS     R8,#+18
   \       0x16   0x.... 0x....      LDR.W    R9,??DataTable20_5
   \       0x1A   0x0038             MOVS     R0,R7
   \       0x1C   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x1E   0x9001             STR      R0,[SP, #+4]
   \       0x20   0x0030             MOVS     R0,R6
   \       0x22   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x24   0x9000             STR      R0,[SP, #+0]
   \       0x26   0x002B             MOVS     R3,R5
   \       0x28   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x2A   0x0022             MOVS     R2,R4
   \       0x2C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x2E   0xF8B9 0x0000      LDRH     R0,[R9, #+0]
   \       0x32   0xFB10 0xF108      SMULBB   R1,R0,R8
   \       0x36   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x38   0x2000             MOVS     R0,#+0
   \       0x3A   0x.... 0x....      BL       _Z11LCD_ShowNumttthtt
   1375            CurY++;
   \       0x3E   0xF8B9 0x0000      LDRH     R0,[R9, #+0]
   \       0x42   0x1C40             ADDS     R0,R0,#+1
   \       0x44   0xF8A9 0x0000      STRH     R0,[R9, #+0]
   1376            if((CurY+1)*18>MAX_Y)
   \       0x48   0xF8B9 0x0000      LDRH     R0,[R9, #+0]
   \       0x4C   0x1C40             ADDS     R0,R0,#+1
   \       0x4E   0xFB08 0xF800      MUL      R8,R8,R0
   \       0x52   0xF240 0x10E1      MOVW     R0,#+481
   \       0x56   0x4580             CMP      R8,R0
   \       0x58   0xDB02             BLT.N    ??LCD_PrintNumLine_0
   1377            {
   1378              CurY=0;
   \       0x5A   0x2000             MOVS     R0,#+0
   \       0x5C   0xF8A9 0x0000      STRH     R0,[R9, #+0]
   1379            }
   1380          }
   \                     ??LCD_PrintNumLine_0: (+1)
   \       0x60   0xE8BD 0x83F7      POP      {R0-R2,R4-R9,PC}  ;; return
   1381          
   1382          /*
   1383           * LCD_PrintNum
   1384           * 接着当前行显示数字
   1385           * 
   1386           * 参数： 
   1387           *    num--数字
   1388           *    len--数字长度
   1389           *    numColor--字符字体颜色
   1390           *    bkColor--字符背景颜色
   1391           *
   1392           * 输出:
   1393           *    无
   1394           */

   \                                 In section .text, align 2, keep-with-next
   1395          void LCD_PrintNum(uint16 num,uint8 len,uint16 Color, uint16 bkColor)
   1396          {
   \                     _Z12LCD_PrintNumthtt: (+1)
   \        0x0   0xB5FE             PUSH     {R1-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
   \        0x8   0x001F             MOVS     R7,R3
   1397            LCD_ShowNum(CurX, (CurY-1)*18, num,len, Color, bkColor);
   \        0xA   0x0038             MOVS     R0,R7
   \        0xC   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \        0xE   0x9001             STR      R0,[SP, #+4]
   \       0x10   0x0030             MOVS     R0,R6
   \       0x12   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \       0x14   0x9000             STR      R0,[SP, #+0]
   \       0x16   0x002B             MOVS     R3,R5
   \       0x18   0xB2DB             UXTB     R3,R3            ;; ZeroExt  R3,R3,#+24,#+24
   \       0x1A   0x0022             MOVS     R2,R4
   \       0x1C   0xB292             UXTH     R2,R2            ;; ZeroExt  R2,R2,#+16,#+16
   \       0x1E   0x....             LDR.N    R0,??DataTable20_5
   \       0x20   0x8800             LDRH     R0,[R0, #+0]
   \       0x22   0x1E40             SUBS     R0,R0,#+1
   \       0x24   0x2112             MOVS     R1,#+18
   \       0x26   0xFB10 0xF101      SMULBB   R1,R0,R1
   \       0x2A   0xB289             UXTH     R1,R1            ;; ZeroExt  R1,R1,#+16,#+16
   \       0x2C   0x....             LDR.N    R0,??DataTable20_4
   \       0x2E   0x8800             LDRH     R0,[R0, #+0]
   \       0x30   0x.... 0x....      BL       _Z11LCD_ShowNumttthtt
   1398          }
   \       0x34   0xBDF7             POP      {R0-R2,R4-R7,PC}  ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5:
   \        0x0   0x400F'F0C0        DC32     0x400ff0c0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_1:
   \        0x0   0x6001'0000        DC32     0x60010000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_2:
   \        0x0   0x....'....        DC32     LCD_INFO

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable5_3:
   \        0x0   0x43FE'183C        DC32     0x43fe183c

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20:
   \        0x0   0x....'....        DC32     LCD_INFO

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_1:
   \        0x0   0x0005'DC00        DC32     0x5dc00

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_2:
   \        0x0   0x....'....        DC32     LCD_GRAM

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_3:
   \        0x0   0x....'....        DC32     asc2_1608

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_4:
   \        0x0   0x....'....        DC32     CurX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable20_5:
   \        0x0   0x....'....        DC32     CurY
   1399          
   1400          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   LCD_BGR2RGB(uint16)
       0   LCD_Delayms(uint16)
      40   LCD_DrawLine(uint16, uint16, uint16, uint16, uint16)
        40   -> LCD_SetPoint(uint16, uint16, uint16)
      40   LCD_DrawRectangle(uint16, uint16, uint16, uint16, uint16, uint16)
        40   -> LCD_DrawLine(uint16, uint16, uint16, uint16, uint16)
        40   -> LCD_SetPoint(uint16, uint16, uint16)
      40   LCD_DrawSquare(uint16, uint16, uint16, uint16, uint16)
        40   -> LCD_DrawLine(uint16, uint16, uint16, uint16, uint16)
        40   -> LCD_SetPoint(uint16, uint16, uint16)
      24   LCD_DrawU8Gray(uint8 *, uint16, uint16)
        24   -> LCD_SetCursor(uint16, uint16)
        24   -> LCD_U8GRAY2RGB(uint8)
        24   -> LCD_WriteData(uint16)
        24   -> LCD_WriteIndex(uint16)
      48   LCD_FLEXBUS_Init(uint16)
        32   -> FlexBus_Init
        48   -> __aeabi_memcpy4
      16   LCD_FillBackground(uint16)
        16   -> LCD_SetCursor(uint16, uint16)
        16   -> LCD_WriteData(uint16)
        16   -> LCD_WriteIndex(uint16)
      16   LCD_FillBackgroundGRAM(uint16 *)
        16   -> LCD_SetCursor(uint16, uint16)
        16   -> LCD_WriteData(uint16)
        16   -> LCD_WriteIndex(uint16)
      16   LCD_GRAMDrawHLine(uint16, uint16, uint16, uint16)
      24   LCD_GRAMFillRec(uint16, uint16, uint16, uint16, uint16)
      16   LCD_GetPoint(uint16, uint16)
        16   -> LCD_ReadData()
        16   -> LCD_SetCursor(uint16, uint16)
        16   -> LCD_WriteIndex(uint16)
      48   LCD_IO_Cfg()
        32   -> GPIO_Init
        48   -> __aeabi_memcpy4
      40   LCD_Init()
        40   -> LCD_Delayms(uint16)
        40   -> LCD_FLEXBUS_Init(uint16)
        40   -> LCD_IO_Cfg()
        40   -> LCD_ReadReg(uint16)
        40   -> LCD_Reset()
        40   -> LCD_WriteIndex(uint16)
        40   -> LCD_WriteReg(uint16, uint16)
      32   LCD_PrintNum(uint16, uint8, uint16, uint16)
        32   -> LCD_ShowNum(uint16, uint16, uint16, uint8, uint16, uint16)
      40   LCD_PrintNumLine(uint16, uint8, uint16, uint16)
        40   -> LCD_ShowNum(uint16, uint16, uint16, uint8, uint16, uint16)
      24   LCD_PrintString(uint8 *, uint16, uint16)
        24   -> LCD_ShowString(uint16, uint16, uint8 *, uint16, uint16)
      32   LCD_PrintStringLine(uint8 *, uint16, uint16)
        32   -> LCD_ShowString(uint16, uint16, uint8 *, uint16, uint16)
       0   LCD_ReadData()
       8   LCD_ReadReg(uint16)
         8   -> LCD_ReadData()
         8   -> LCD_WriteIndex(uint16)
       8   LCD_Reset()
         8   -> LCD_Delayms(uint16)
      32   LCD_SetCursor(uint16, uint16)
        32   -> LCD_WriteData(uint16)
        32   -> LCD_WriteIndex(uint16)
      16   LCD_SetPoint(uint16, uint16, uint16)
        16   -> LCD_SetCursor(uint16, uint16)
        16   -> LCD_WriteReg(uint16, uint16)
      40   LCD_ShowChar(uint16, uint16, uint8, uint16, uint16)
        40   -> LCD_SetPoint(uint16, uint16, uint16)
      40   LCD_ShowNum(uint16, uint16, uint16, uint8, uint16, uint16)
        40   -> LCD_ShowChar(uint16, uint16, uint8, uint16, uint16)
        40   -> mypow(uint8, uint8)
      32   LCD_ShowString(uint16, uint16, uint8 *, uint16, uint16)
        32   -> LCD_ShowChar(uint16, uint16, uint8, uint16, uint16)
       4   LCD_U8GRAY2RGB(uint8)
       0   LCD_WriteData(uint16)
       0   LCD_WriteIndex(uint16)
      16   LCD_WriteReg(uint16, uint16)
        16   -> LCD_WriteData(uint16)
        16   -> LCD_WriteIndex(uint16)
       0   mypow(uint8, uint8)


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable20
       4  ??DataTable20_1
       4  ??DataTable20_2
       4  ??DataTable20_3
       4  ??DataTable20_4
       4  ??DataTable20_5
       4  ??DataTable5
       4  ??DataTable5_1
       4  ??DataTable5_2
       4  ??DataTable5_3
       2  CurX
       2  CurY
      32  LCD_BGR2RGB(uint16)
      32  LCD_Delayms(uint16)
     384  LCD_DrawLine(uint16, uint16, uint16, uint16, uint16)
     262  LCD_DrawRectangle(uint16, uint16, uint16, uint16, uint16, uint16)
     244  LCD_DrawSquare(uint16, uint16, uint16, uint16, uint16)
     108  LCD_DrawU8Gray(uint8 *, uint16, uint16)
      82  LCD_FLEXBUS_Init(uint16)
      48  LCD_FillBackground(uint16)
      48  LCD_FillBackgroundGRAM(uint16 *)
       4  LCD_GRAM
      60  LCD_GRAMDrawHLine(uint16, uint16, uint16, uint16)
      92  LCD_GRAMFillRec(uint16, uint16, uint16, uint16, uint16)
      42  LCD_GetPoint(uint16, uint16)
       8  LCD_INFO
      52  LCD_IO_Cfg()
    5026  LCD_Init()
      54  LCD_PrintNum(uint16, uint8, uint16, uint16)
     100  LCD_PrintNumLine(uint16, uint8, uint16, uint16)
      44  LCD_PrintString(uint8 *, uint16, uint16)
      88  LCD_PrintStringLine(uint8 *, uint16, uint16)
       8  LCD_ReadData()
      20  LCD_ReadReg(uint16)
      20  LCD_Reset()
      98  LCD_SetCursor(uint16, uint16)
      58  LCD_SetPoint(uint16, uint16, uint16)
     132  LCD_ShowChar(uint16, uint16, uint8, uint16, uint16)
     120  LCD_ShowNum(uint16, uint16, uint16, uint8, uint16, uint16)
     108  LCD_ShowString(uint16, uint16, uint8 *, uint16, uint16)
      42  LCD_U8GRAY2RGB(uint8)
       6  LCD_WriteData(uint16)
       8  LCD_WriteIndex(uint16)
      24  LCD_WriteReg(uint16, uint16)
       2  PreX
       2  PreY
    1520  asc2_1608
       8  dID
      24  mypow(uint8, uint8)
      24  -- Other

 
    24 bytes in section .ARM.exidx
    28 bytes in section .bss
 1 520 bytes in section .rodata
 7 506 bytes in section .text
 
 7 506 bytes of CODE  memory
 1 544 bytes of CONST memory
    28 bytes of DATA  memory

Errors: none
Warnings: none
