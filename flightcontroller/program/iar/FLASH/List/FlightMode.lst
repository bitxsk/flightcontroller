###############################################################################
#
# IAR ANSI C/C++ Compiler V8.30.1.114/W32 for ARM         30/Jul/2018  16:03:58
# Copyright 1999-2018 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\FlightMode.cpp
#    Command line =  
#        -f C:\Users\XSK199~1\AppData\Local\Temp\EW2BB5.tmp
#        (C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\FlightMode.cpp
#        -D K60 -D USE_K60F15 -D ARM_MATH_CM4 -D __FPU_PRESENT=1 -D
#        __FPU_USED=1 -lCN
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\FLASH\List
#        -lB
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\FLASH\List
#        -o
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\FLASH\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config
#        D:\iar\arm\inc\c\DLib_Config_Full.h -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\app\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\app\Sensor\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\CPU\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\common\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\HW\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\DEV\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\FatFs\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\FatFs\option\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\common\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\driver\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\descriptor\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\class\
#        -On --c++ -I D:\iar\arm\CMSIS\Core\Include\ -I
#        D:\iar\arm\CMSIS\DSP\Include\ -D ARM_MATH_CM4 --text_out utf8
#        --utf8_text_in)
#    Locale       =  C
#    List file    =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\FLASH\List\FlightMode.lst
#    Object file  =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\FLASH\Obj\FlightMode.o
#
###############################################################################

C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\FlightMode.cpp
      1          #include "FlightMode.h"

   \                                 In section .text, align 4
   \   __code __interwork __softfp CoordinateElement::CoordinateElement()
   \                     _ZN17CoordinateElementC1Ev: (+1)
   \        0x0   0x4903             LDR.N    R1,??CoordinateElement_0  ;; 0x3f4ccccd
   \        0x2   0x6101             STR      R1,[R0, #+16]
   \        0x4   0x4903             LDR.N    R1,??CoordinateElement_0+0x4  ;; 0x461c4000
   \        0x6   0x6141             STR      R1,[R0, #+20]
   \        0x8   0x4903             LDR.N    R1,??CoordinateElement_0+0x8  ;; 0xc61c4000
   \        0xA   0x6181             STR      R1,[R0, #+24]
   \        0xC   0x4770             BX       LR               ;; return
   \        0xE   0xBF00             Nop      
   \                     ??CoordinateElement_0:
   \       0x10   0x3F4C'CCCD        DC32     0x3f4ccccd
   \       0x14   0x461C'4000        DC32     0x461c4000
   \       0x18   0xC61C'4000        DC32     0xc61c4000

   \                                 In section .text, align 2
   \   __code __interwork __softfp Coordinate::Coordinate()
   \                     _ZN10CoordinateC1Ev: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       _ZN17CoordinateElementC1Ev
   \        0xA   0xF114 0x001C      ADDS     R0,R4,#+28
   \        0xE   0x.... 0x....      BL       _ZN17CoordinateElementC1Ev
   \       0x12   0xF114 0x0038      ADDS     R0,R4,#+56
   \       0x16   0x.... 0x....      BL       _ZN17CoordinateElementC1Ev
   \       0x1A   0x0020             MOVS     R0,R4
   \       0x1C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp CFlightMode::CFlightMode()
   \                     _ZN11CFlightModeC1Ev: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       _ZN10CoordinateC1Ev
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0xBD10             POP      {R4,PC}          ;; return
      2          

   \                                 In section .bss, align 4
      3          CFlightMode *flightMode;
   \                     flightMode:
   \        0x0                      DS8 4
      4          
      5          

   \                                 In section .text, align 2, keep-with-next
      6          void flightMode_Init()
      7          {
   \                     _Z15flightMode_Initv: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x.... 0x....      LDR.W    R4,??DataTable3_7
   \        0x6   0x7820             LDRB     R0,[R4, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD105             BNE.N    ??flightMode_Init_0
      8            static CFlightMode flightMode_0;
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \       0x10   0x.... 0x....      BL       _ZN11CFlightModeC1Ev
   \       0x14   0x2001             MOVS     R0,#+1
   \       0x16   0x7020             STRB     R0,[R4, #+0]
      9            flightMode = &flightMode_0;
   \                     ??flightMode_Init_0: (+1)
   \       0x18   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \       0x1C   0x.... 0x....      LDR.W    R1,??DataTable3_9
   \       0x20   0x6008             STR      R0,[R1, #+0]
     10          }
   \       0x22   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .bss, align 4
   \                     `flightMode_Init()::flightMode_0`:
   \        0x0                      DS8 156
     11          

   \                                 In section .text, align 4, keep-with-next
     12          void CFlightMode::update()
     13          {
   \                     _ZN11CFlightMode6updateEv: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0xED2D 0x8B04      VPUSH    {D8-D9}
   \        0x6   0x0004             MOVS     R4,R0
     14            if(EVB.LeftKnob > 0 && currentState == 0 && _initLock) //ÖÍ»Ø×´Ì¬ÇÐ»»
   \        0x8   0x.... 0x....      LDR.W    R5,??DataTable3_10
   \        0xC   0xF8D5 0x06FC      LDR      R0,[R5, #+1788]
   \       0x10   0x2801             CMP      R0,#+1
   \       0x12   0xDB08             BLT.N    ??update_1
   \       0x14   0x6D60             LDR      R0,[R4, #+84]
   \       0x16   0x2800             CMP      R0,#+0
   \       0x18   0xD105             BNE.N    ??update_1
   \       0x1A   0x6E20             LDR      R0,[R4, #+96]
   \       0x1C   0x2800             CMP      R0,#+0
   \       0x1E   0xD002             BEQ.N    ??update_1
     15            {
     16              newState = 1;
   \       0x20   0x2001             MOVS     R0,#+1
   \       0x22   0x65A0             STR      R0,[R4, #+88]
   \       0x24   0xE014             B.N      ??update_2
     17            }
     18            else if(EVB.LeftKnob < -200 && currentState)
   \                     ??update_1: (+1)
   \       0x26   0xF07F 0x01C7      MVNS     R1,#+199
   \       0x2A   0xF8D5 0x06FC      LDR      R0,[R5, #+1788]
   \       0x2E   0x4288             CMP      R0,R1
   \       0x30   0xDA05             BGE.N    ??update_3
   \       0x32   0x6D60             LDR      R0,[R4, #+84]
   \       0x34   0x2800             CMP      R0,#+0
   \       0x36   0xD002             BEQ.N    ??update_3
     19            {
     20              newState = 0;
   \       0x38   0x2000             MOVS     R0,#+0
   \       0x3A   0x65A0             STR      R0,[R4, #+88]
   \       0x3C   0xE008             B.N      ??update_2
     21            }
     22            else if(!currentState && EVB.LeftKnob < -200)
   \                     ??update_3: (+1)
   \       0x3E   0x6D60             LDR      R0,[R4, #+84]
   \       0x40   0x2800             CMP      R0,#+0
   \       0x42   0xD105             BNE.N    ??update_2
   \       0x44   0xF8D5 0x06FC      LDR      R0,[R5, #+1788]
   \       0x48   0x4288             CMP      R0,R1
   \       0x4A   0xDA01             BGE.N    ??update_2
     23            {
     24              _initLock = 1;
   \       0x4C   0x2001             MOVS     R0,#+1
   \       0x4E   0x6620             STR      R0,[R4, #+96]
     25            }
     26           
     27          
     28          //  if(EVB.LeftKnob > 450 && currentState_PositionMode == 0 && _initLock) //ÖÍ»Ø×´Ì¬ÇÐ»»
     29          //  {
     30          //    newState_PositionMode = 1;
     31          //  }
     32          //  else if(EVB.LeftKnob < 200 && currentState_PositionMode)
     33          //  {
     34          //    newState_PositionMode = 0; /////////////Òª¸Ä
     35          //  }
     36            
     37             if(SBus->Sbus_Rightknob > 0 && currentState_PositionMode == 0 && _initLock) //ÖÍ»Ø×´Ì¬ÇÐ»»
   \                     ??update_2: (+1)
   \       0x50   0x.... 0x....      LDR.W    R1,??DataTable3_11
   \       0x54   0x6808             LDR      R0,[R1, #+0]
   \       0x56   0xF8D0 0x0198      LDR      R0,[R0, #+408]
   \       0x5A   0x2801             CMP      R0,#+1
   \       0x5C   0xDB08             BLT.N    ??update_4
   \       0x5E   0x6E60             LDR      R0,[R4, #+100]
   \       0x60   0x2800             CMP      R0,#+0
   \       0x62   0xD105             BNE.N    ??update_4
   \       0x64   0x6E20             LDR      R0,[R4, #+96]
   \       0x66   0x2800             CMP      R0,#+0
   \       0x68   0xD002             BEQ.N    ??update_4
     38            {
     39              newState_PositionMode = 1;
   \       0x6A   0x2001             MOVS     R0,#+1
   \       0x6C   0x66A0             STR      R0,[R4, #+104]
   \       0x6E   0xE009             B.N      ??update_5
     40            }
     41            else if(SBus->Sbus_Rightknob < 0 && currentState_PositionMode)
   \                     ??update_4: (+1)
   \       0x70   0x6808             LDR      R0,[R1, #+0]
   \       0x72   0xF8D0 0x0198      LDR      R0,[R0, #+408]
   \       0x76   0x2800             CMP      R0,#+0
   \       0x78   0xD504             BPL.N    ??update_5
   \       0x7A   0x6E60             LDR      R0,[R4, #+100]
   \       0x7C   0x2800             CMP      R0,#+0
   \       0x7E   0xD001             BEQ.N    ??update_5
     42            {
     43              newState_PositionMode = 0; /////////////Òª¸Ä
   \       0x80   0x2000             MOVS     R0,#+0
   \       0x82   0x66A0             STR      R0,[R4, #+104]
     44            }
     45            
     46            
     47          //  if(t - flightMode->takeOff.takeOffTime1 > 10000 && t - flightMode->takeOff.takeOffTime1 < 10010)
     48          //  {
     49          //    newState_PositionMode = 1;
     50          //  }
     51          //  if(RemoteHub->valid)
     52          //  {
     53          //    newState = 0;
     54          //    newState_PositionMode = 0;
     55          //  }
     56            
     57             if(newState && !currentState)
   \                     ??update_5: (+1)
   \       0x84   0x6DA0             LDR      R0,[R4, #+88]
   \       0x86   0x2800             CMP      R0,#+0
   \       0x88   0xD008             BEQ.N    ??update_6
   \       0x8A   0x6D60             LDR      R0,[R4, #+84]
   \       0x8C   0x2800             CMP      R0,#+0
   \       0x8E   0xD105             BNE.N    ??update_6
     58            {
     59              takeOff.state = CTakeOff::waitting;
   \       0x90   0x2000             MOVS     R0,#+0
   \       0x92   0xF884 0x0074      STRB     R0,[R4, #+116]
     60              takeOff.altitudeHold_gravity = 0;
   \       0x96   0x2000             MOVS     R0,#+0
   \       0x98   0xF8C4 0x0084      STR      R0,[R4, #+132]
     61            }
     62            currentState = newState;
   \                     ??update_6: (+1)
   \       0x9C   0x6DA0             LDR      R0,[R4, #+88]
   \       0x9E   0x6560             STR      R0,[R4, #+84]
     63            
     64            
     65            if(newState_PositionMode && !currentState_PositionMode)
   \       0xA0   0x6EA0             LDR      R0,[R4, #+104]
   \       0xA2   0x2800             CMP      R0,#+0
   \       0xA4   0xD00E             BEQ.N    ??update_7
   \       0xA6   0x6E60             LDR      R0,[R4, #+100]
   \       0xA8   0x2800             CMP      R0,#+0
   \       0xAA   0xD10B             BNE.N    ??update_7
     66            {
     67              positionX.reset();
   \       0xAC   0x.... 0x....      LDR.W    R0,??DataTable3_12
   \       0xB0   0x.... 0x....      BL       _ZN14PID_Controller5resetEv
     68              positionY.reset();
   \       0xB4   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \       0xB8   0x.... 0x....      BL       _ZN14PID_Controller5resetEv
     69              t0_PositionMode = t;
   \       0xBC   0x.... 0x....      LDR.W    R0,??DataTable3_14
   \       0xC0   0x6800             LDR      R0,[R0, #+0]
   \       0xC2   0x66E0             STR      R0,[R4, #+108]
     70             // command->position.x = 0;
     71             // command->position.y = 0;
     72              
     73            //  command->position.x = GPS->position.x;
     74            //  command->position.y = GPS->position.y;
     75             // mission.state = CMission::lockTarget;
     76            }
     77            currentState_PositionMode = newState_PositionMode;
   \                     ??update_7: (+1)
   \       0xC4   0x6EA0             LDR      R0,[R4, #+104]
   \       0xC6   0x6660             STR      R0,[R4, #+100]
     78          
     79            
     80            if(currentState)
   \       0xC8   0x6D60             LDR      R0,[R4, #+84]
   \       0xCA   0x2800             CMP      R0,#+0
   \       0xCC   0xD008             BEQ.N    ??update_8
     81            {
     82              angleZ.referance = 0;
   \       0xCE   0x.... 0x....      LDR.W    R0,??DataTable3_15
   \       0xD2   0x2100             MOVS     R1,#+0
   \       0xD4   0x6001             STR      R1,[R0, #+0]
     83              takeOff.update();
   \       0xD6   0xF114 0x0074      ADDS     R0,R4,#+116
   \       0xDA   0x.... 0x....      BL       _ZN11CFlightMode8CTakeOff6updateEv
   \       0xDE   0xE009             B.N      ??update_9
     84            }
     85            else
     86            {
     87              ControlOutput_ZChannel = EVB.ConstSpd;
   \                     ??update_8: (+1)
   \       0xE0   0xF8D5 0x06E8      LDR      R0,[R5, #+1768]
   \       0xE4   0xEE00 0x0A10      VMOV     S0,R0
   \       0xE8   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \       0xEC   0x.... 0x....      LDR.W    R0,??DataTable3_16
   \       0xF0   0xED80 0x0A00      VSTR     S0,[R0, #0]
     88            }
     89           ////////ÔÚµ÷¶¨¸ß£¬ÏÈ¹ØÉÏX,Y ////////
     90            
     91            if(currentState_PositionMode)
   \                     ??update_9: (+1)
   \       0xF4   0x6E60             LDR      R0,[R4, #+100]
   \       0xF6   0x2800             CMP      R0,#+0
   \       0xF8   0xD062             BEQ.N    ??update_10
     92            {
     93              angleZ.referance = 0;
   \       0xFA   0x.... 0x....      LDR.W    R0,??DataTable3_15
   \       0xFE   0x2100             MOVS     R1,#+0
   \      0x100   0x6001             STR      R1,[R0, #+0]
     94              int deltaX = EVB.Pitch;
   \      0x102   0xF8D5 0x06F8      LDR      R0,[R5, #+1784]
     95              if(deltaX > 600) deltaX = 600;
   \      0x106   0xF240 0x2159      MOVW     R1,#+601
   \      0x10A   0x4288             CMP      R0,R1
   \      0x10C   0xDB02             BLT.N    ??update_11
   \      0x10E   0xF44F 0x7216      MOV      R2,#+600
   \      0x112   0x0010             MOVS     R0,R2
     96              if(deltaX <-600) deltaX =-600;
   \                     ??update_11: (+1)
   \      0x114   0x.... 0x....      LDR.W    R2,??DataTable3_17  ;; 0xfffffda8
   \      0x118   0x4290             CMP      R0,R2
   \      0x11A   0xDA00             BGE.N    ??update_12
   \      0x11C   0x0010             MOVS     R0,R2
     97              
     98              if(deltaX > 100)                  //50ËÀÇø
   \                     ??update_12: (+1)
   \      0x11E   0x2865             CMP      R0,#+101
   \      0x120   0xDB02             BLT.N    ??update_13
     99              {
    100                deltaX -= 100;
   \      0x122   0x3864             SUBS     R0,R0,#+100
   \      0x124   0x0006             MOVS     R6,R0
   \      0x126   0xE006             B.N      ??update_14
    101              }
    102              else if(deltaX < -100)
   \                     ??update_13: (+1)
   \      0x128   0xF110 0x0F64      CMN      R0,#+100
   \      0x12C   0xDA02             BGE.N    ??update_15
    103              {
    104                deltaX += 100;
   \      0x12E   0x3064             ADDS     R0,R0,#+100
   \      0x130   0x0006             MOVS     R6,R0
   \      0x132   0xE000             B.N      ??update_14
    105              }
    106              else
    107              {
    108                deltaX = 0;
   \                     ??update_15: (+1)
   \      0x134   0x2600             MOVS     R6,#+0
    109              }
    110              
    111              int deltaY = EVB.Roll;
   \                     ??update_14: (+1)
   \      0x136   0xF8D5 0x06F4      LDR      R0,[R5, #+1780]
    112              if(deltaY > 600) deltaY = 600;
   \      0x13A   0x4288             CMP      R0,R1
   \      0x13C   0xDB02             BLT.N    ??update_16
   \      0x13E   0xF44F 0x7116      MOV      R1,#+600
   \      0x142   0x0008             MOVS     R0,R1
    113              if(deltaY <-600) deltaY =-600;
   \                     ??update_16: (+1)
   \      0x144   0x4290             CMP      R0,R2
   \      0x146   0xDA00             BGE.N    ??update_17
   \      0x148   0x0010             MOVS     R0,R2
    114              
    115              if(deltaY > 100)                  //50ËÀÇø
   \                     ??update_17: (+1)
   \      0x14A   0x2865             CMP      R0,#+101
   \      0x14C   0xDB02             BLT.N    ??update_18
    116              {
    117                deltaY -= 100;
   \      0x14E   0x3864             SUBS     R0,R0,#+100
   \      0x150   0x0005             MOVS     R5,R0
   \      0x152   0xE006             B.N      ??update_19
    118              }
    119              else if(deltaY < -100)
   \                     ??update_18: (+1)
   \      0x154   0xF110 0x0F64      CMN      R0,#+100
   \      0x158   0xDA02             BGE.N    ??update_20
    120              {
    121                deltaY += 100;
   \      0x15A   0x3064             ADDS     R0,R0,#+100
   \      0x15C   0x0005             MOVS     R5,R0
   \      0x15E   0xE000             B.N      ??update_19
    122              }
    123              else
    124              {
    125                deltaY = 0;
   \                     ??update_20: (+1)
   \      0x160   0x2500             MOVS     R5,#+0
    126              }
    127              command->position.x += deltaX * 0.002 * 0.001;
   \                     ??update_19: (+1)
   \      0x162   0x.... 0x....      LDR.W    R7,??DataTable3_18
   \      0x166   0xED9F 0x....      VLDR.W   D8,??DataTable1
   \      0x16A   0xED9F 0x....      VLDR.W   D9,??DataTable1_1
   \      0x16E   0x0030             MOVS     R0,R6
   \      0x170   0x.... 0x....      BL       __aeabi_i2d
   \      0x174   0xEC53 0x2B19      VMOV     R2,R3,D9
   \      0x178   0x.... 0x....      BL       __aeabi_dmul
   \      0x17C   0xEC53 0x2B18      VMOV     R2,R3,D8
   \      0x180   0x.... 0x....      BL       __aeabi_dmul
   \      0x184   0x.... 0x....      BL       __aeabi_d2f
   \      0x188   0xEE00 0x0A10      VMOV     S0,R0
   \      0x18C   0x6838             LDR      R0,[R7, #+0]
   \      0x18E   0x.... 0x....      BL       _ZN17CoordinateElementpLEf
    128              command->position.y += deltaY * 0.002 * 0.001;
   \      0x192   0x0028             MOVS     R0,R5
   \      0x194   0x.... 0x....      BL       __aeabi_i2d
   \      0x198   0xEC53 0x2B19      VMOV     R2,R3,D9
   \      0x19C   0x.... 0x....      BL       __aeabi_dmul
   \      0x1A0   0xEC53 0x2B18      VMOV     R2,R3,D8
   \      0x1A4   0x.... 0x....      BL       __aeabi_dmul
   \      0x1A8   0x.... 0x....      BL       __aeabi_d2f
   \      0x1AC   0xEE00 0x0A10      VMOV     S0,R0
   \      0x1B0   0x6838             LDR      R0,[R7, #+0]
   \      0x1B2   0x301C             ADDS     R0,R0,#+28
   \      0x1B4   0x.... 0x....      BL       _ZN17CoordinateElementpLEf
    129              mission.update();
   \      0x1B8   0xF114 0x0088      ADDS     R0,R4,#+136
   \      0x1BC   0x.... 0x....      BL       _ZN11CFlightMode8CMission6updateEv
    130            }
    131          }
   \                     ??update_10: (+1)
   \                     ??update_21: (+1)
   \      0x1C0   0xECBD 0x8B04      VPOP     {D8-D9}
   \      0x1C4   0xBDF1             POP      {R0,R4-R7,PC}    ;; return
    132          
    133          
    134          

   \                                 In section .text, align 4, keep-with-next
    135          void CFlightMode::CTakeOff::update()
    136          {
   \                     _ZN11CFlightMode8CTakeOff6updateEv: (+1)
   \        0x0   0xE92D 0x47F0      PUSH     {R4-R10,LR}
   \        0x4   0xED2D 0x8B02      VPUSH    {D8}
   \        0x8   0xB082             SUB      SP,SP,#+8
   \        0xA   0x0004             MOVS     R4,R0
    137            if(state == waitting)
   \        0xC   0x7820             LDRB     R0,[R4, #+0]
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD14A             BNE.N    ??update_22
    138            {
    139              if(EKF_AHRS->fusion.position.z > 0.1f)
   \       0x12   0x.... 0x....      LDR.W    R5,??DataTable3_19
   \       0x16   0x6828             LDR      R0,[R5, #+0]
   \       0x18   0x30DC             ADDS     R0,R0,#+220
   \       0x1A   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \       0x1E   0xEDDF 0x0AC5      VLDR.W   S1,??update_0    ;; 0x3dccccce
   \       0x22   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \       0x26   0xEEF1 0xFA10      FMSTAT   
   \       0x2A   0xDB01             BLT.N    ??update_23
   \       0x2C   0x2001             MOVS     R0,#+1
   \       0x2E   0xE000             B.N      ??update_24
   \                     ??update_23: (+1)
   \       0x30   0x2000             MOVS     R0,#+0
   \                     ??update_24: (+1)
   \       0x32   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x34   0x2800             CMP      R0,#+0
   \       0x36   0xD009             BEQ.N    ??update_25
    140              {
    141                altitudeHold_gravity = EVB.ConstSpd;
   \       0x38   0x.... 0x....      LDR.W    R0,??DataTable3_20
   \       0x3C   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \       0x40   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \       0x44   0xED84 0x0A04      VSTR     S0,[R4, #+16]
    142                state = onTheAir;
   \       0x48   0x2002             MOVS     R0,#+2
   \       0x4A   0x7020             STRB     R0,[R4, #+0]
    143              }
    144              
    145              if(EVB.ConstSpd > 200 && EVB.ConstSpd < 500)
   \                     ??update_25: (+1)
   \       0x4C   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \       0x50   0xF8D0 0x16E8      LDR      R1,[R0, #+1768]
   \       0x54   0x29C9             CMP      R1,#+201
   \       0x56   0xDB0E             BLT.N    ??update_26
   \       0x58   0xF8D0 0x06E8      LDR      R0,[R0, #+1768]
   \       0x5C   0xF5B0 0x7FFA      CMP      R0,#+500
   \       0x60   0xDA09             BGE.N    ??update_26
    146              {
    147                if(!waittingFlag)
   \       0x62   0x7A20             LDRB     R0,[R4, #+8]
   \       0x64   0x2800             CMP      R0,#+0
   \       0x66   0xD10C             BNE.N    ??update_27
    148                {
    149                  waittingFlag = true;
   \       0x68   0x2001             MOVS     R0,#+1
   \       0x6A   0x7220             STRB     R0,[R4, #+8]
    150                  takeOffTime1 = t;
   \       0x6C   0x.... 0x....      LDR.W    R0,??DataTable3_14
   \       0x70   0x6800             LDR      R0,[R0, #+0]
   \       0x72   0x60E0             STR      R0,[R4, #+12]
   \       0x74   0xE005             B.N      ??update_27
    151                }
    152              }
    153              else
    154              {
    155                waittingFlag = false;
   \                     ??update_26: (+1)
   \       0x76   0x2000             MOVS     R0,#+0
   \       0x78   0x7220             STRB     R0,[R4, #+8]
    156                takeOffTime1 = t;
   \       0x7A   0x.... 0x....      LDR.W    R0,??DataTable3_14
   \       0x7E   0x6800             LDR      R0,[R0, #+0]
   \       0x80   0x60E0             STR      R0,[R4, #+12]
    157              }
    158              
    159              if(t - takeOffTime1 > 1000)
   \                     ??update_27: (+1)
   \       0x82   0x.... 0x....      LDR.W    R0,??DataTable3_14
   \       0x86   0x6801             LDR      R1,[R0, #+0]
   \       0x88   0x68E0             LDR      R0,[R4, #+12]
   \       0x8A   0x1A09             SUBS     R1,R1,R0
   \       0x8C   0xF240 0x30E9      MOVW     R0,#+1001
   \       0x90   0x4281             CMP      R1,R0
   \       0x92   0xF2C0 0x8175      BLT.W    ??update_28
    160              {
    161                onTheGroundHight = EKF_AHRS->fusion.position.z;
   \       0x96   0x6828             LDR      R0,[R5, #+0]
   \       0x98   0x30DC             ADDS     R0,R0,#+220
   \       0x9A   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \       0x9E   0xED84 0x0A01      VSTR     S0,[R4, #+4]
    162                state = takeOffPrepare;
   \       0xA2   0x2001             MOVS     R0,#+1
   \       0xA4   0x7020             STRB     R0,[R4, #+0]
   \       0xA6   0xE16B             B.N      ??update_28
    163              }
    164            }
    165            else if(state == takeOffPrepare)
   \                     ??update_22: (+1)
   \       0xA8   0x7820             LDRB     R0,[R4, #+0]
   \       0xAA   0x2801             CMP      R0,#+1
   \       0xAC   0xD166             BNE.N    ??update_29
    166            {
    167              if(EKF_AHRS->fusion.position.z - onTheGroundHight > 0.05f ||
    168                 EKF_AHRS->fusion.vel.z > 0.08f)
   \       0xAE   0x.... 0x....      LDR.W    R5,??DataTable3_19
   \       0xB2   0x6828             LDR      R0,[R5, #+0]
   \       0xB4   0x30DC             ADDS     R0,R0,#+220
   \       0xB6   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \       0xBA   0xEDD4 0x0A01      VLDR     S1,[R4, #+4]
   \       0xBE   0xEE30 0x0A60      VSUB.F32 S0,S0,S1
   \       0xC2   0xEDDF 0x....      VLDR.W   S1,??DataTable2  ;; 0x3d4cccce
   \       0xC6   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \       0xCA   0xEEF1 0xFA10      FMSTAT   
   \       0xCE   0xDA10             BGE.N    ??update_30
   \       0xD0   0x6828             LDR      R0,[R5, #+0]
   \       0xD2   0x3088             ADDS     R0,R0,#+136
   \       0xD4   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \       0xD8   0xEDDF 0x....      VLDR.W   S1,??DataTable2_1  ;; 0x3da3d70b
   \       0xDC   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \       0xE0   0xEEF1 0xFA10      FMSTAT   
   \       0xE4   0xDA01             BGE.N    ??update_31
   \       0xE6   0x2001             MOVS     R0,#+1
   \       0xE8   0xE000             B.N      ??update_32
   \                     ??update_31: (+1)
   \       0xEA   0x2000             MOVS     R0,#+0
   \                     ??update_32: (+1)
   \       0xEC   0xF090 0x0001      EORS     R0,R0,#0x1
   \       0xF0   0xE000             B.N      ??update_33
   \                     ??update_30: (+1)
   \       0xF2   0x2001             MOVS     R0,#+1
   \                     ??update_33: (+1)
   \       0xF4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0xF6   0x2800             CMP      R0,#+0
   \       0xF8   0xD015             BEQ.N    ??update_34
    169              {
    170                dis_set_hight = EKF_AHRS->fusion.position.z;
   \       0xFA   0x6828             LDR      R0,[R5, #+0]
   \       0xFC   0x30DC             ADDS     R0,R0,#+220
   \       0xFE   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \      0x102   0x.... 0x....      LDR.W    R0,??DataTable3_21
   \      0x106   0xED80 0x0A00      VSTR     S0,[R0, #0]
    171                positionZ.reset();
   \      0x10A   0x.... 0x....      LDR.W    R0,??DataTable3_22
   \      0x10E   0x.... 0x....      BL       _ZN14PID_Controller5resetEv
    172                positionZ_vel.reset();    
   \      0x112   0x.... 0x....      LDR.W    R0,??DataTable3_23
   \      0x116   0x.... 0x....      BL       _ZN14PID_Controller5resetEv
    173                takeOffTime1 = t;
   \      0x11A   0x.... 0x....      LDR.W    R0,??DataTable3_14
   \      0x11E   0x6800             LDR      R0,[R0, #+0]
   \      0x120   0x60E0             STR      R0,[R4, #+12]
    174                state = onTheAir;
   \      0x122   0x2002             MOVS     R0,#+2
   \      0x124   0x7020             STRB     R0,[R4, #+0]
    175                //flightMode->mission.state = CMission::lockTarget;
    176              }
    177              
    178          //    if(altitudeHold_gravity < 500)
    179          //    {
    180          //      altitudeHold_gravity += 1;
    181          //    }
    182          //    else if(altitudeHold_gravity < 750)
    183          //    {
    184          //      altitudeHold_gravity += 0.5;
    185          //    }
    186          //    
    187               if(altitudeHold_gravity < 500)
   \                     ??update_34: (+1)
   \      0x126   0xED94 0x0A04      VLDR     S0,[R4, #+16]
   \      0x12A   0xEDDF 0x....      VLDR.W   S1,??DataTable2_2  ;; 0x43fa0000
   \      0x12E   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \      0x132   0xEEF1 0xFA10      FMSTAT   
   \      0x136   0xD508             BPL.N    ??update_35
    188              {
    189                altitudeHold_gravity += 1;
   \      0x138   0xED94 0x0A04      VLDR     S0,[R4, #+16]
   \      0x13C   0xEEF7 0x0A00      VMOV.F32 S1,#1.0
   \      0x140   0xEE30 0x0A20      VADD.F32 S0,S0,S1
   \      0x144   0xED84 0x0A04      VSTR     S0,[R4, #+16]
   \      0x148   0xE013             B.N      ??update_36
    190              }
    191              else if(altitudeHold_gravity < 750)
   \                     ??update_35: (+1)
   \      0x14A   0xED94 0x0A04      VLDR     S0,[R4, #+16]
   \      0x14E   0xEDDF 0x....      VLDR.W   S1,??DataTable2_3  ;; 0x443b8000
   \      0x152   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \      0x156   0xEEF1 0xFA10      FMSTAT   
   \      0x15A   0xD50A             BPL.N    ??update_36
    192              {
    193                altitudeHold_gravity += 0.5;
   \      0x15C   0x6920             LDR      R0,[R4, #+16]
   \      0x15E   0x.... 0x....      BL       __aeabi_f2d
   \      0x162   0x2200             MOVS     R2,#+0
   \      0x164   0x.... 0x....      LDR.W    R3,??DataTable3_24  ;; 0x3fe00000
   \      0x168   0x.... 0x....      BL       __aeabi_dadd
   \      0x16C   0x.... 0x....      BL       __aeabi_d2f
   \      0x170   0x6120             STR      R0,[R4, #+16]
    194              }
    195              ControlOutput_ZChannel = altitudeHold_gravity;
   \                     ??update_36: (+1)
   \      0x172   0x6920             LDR      R0,[R4, #+16]
   \      0x174   0x.... 0x....      LDR.W    R1,??DataTable3_16
   \      0x178   0x6008             STR      R0,[R1, #+0]
   \      0x17A   0xE101             B.N      ??update_28
    196            }
    197            else if(state == onTheAir)
   \                     ??update_29: (+1)
   \      0x17C   0x7820             LDRB     R0,[R4, #+0]
   \      0x17E   0x2802             CMP      R0,#+2
   \      0x180   0xF040 0x80C6      BNE.W    ??update_37
    198            {
    199              int deltaHight = 180;
   \      0x184   0xF05F 0x0AB4      MOVS     R10,#+180
    200              int deltaHight_usr = 0;
   \      0x188   0xED9F 0x....      VLDR.W   S16,??DataTable2_4  ;; 0x0
    201              if(t - takeOffTime1 > 2000)
   \      0x18C   0xF240 0x75D1      MOVW     R5,#+2001
   \      0x190   0x.... 0x....      LDR.W    R6,??DataTable3_14
   \      0x194   0x6831             LDR      R1,[R6, #+0]
   \      0x196   0x68E0             LDR      R0,[R4, #+12]
   \      0x198   0x1A09             SUBS     R1,R1,R0
   \      0x19A   0x42A9             CMP      R1,R5
   \      0x19C   0xDB1C             BLT.N    ??update_38
    202              {
    203                deltaHight_usr = EVB.ConstSpd - 350; //¼õÖÐÎ»
   \      0x19E   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \      0x1A2   0xF8D0 0x06E8      LDR      R0,[R0, #+1768]
   \      0x1A6   0xF5B0 0x70AF      SUBS     R0,R0,#+350
    204                if(deltaHight_usr > 120)                      //50ËÀÇø
   \      0x1AA   0x2879             CMP      R0,#+121
   \      0x1AC   0xDB03             BLT.N    ??update_39
    205                {
    206                  deltaHight_usr -= 120;
   \      0x1AE   0x3878             SUBS     R0,R0,#+120
   \      0x1B0   0xEE00 0x0A10      VMOV     S0,R0
   \      0x1B4   0xE008             B.N      ??update_40
    207                }
    208                else if(deltaHight_usr < -120)
   \                     ??update_39: (+1)
   \      0x1B6   0xF110 0x0F78      CMN      R0,#+120
   \      0x1BA   0xDA03             BGE.N    ??update_41
    209                {
    210                  deltaHight_usr += 120;
   \      0x1BC   0x3078             ADDS     R0,R0,#+120
   \      0x1BE   0xEE00 0x0A10      VMOV     S0,R0
   \      0x1C2   0xE001             B.N      ??update_40
    211                }
    212                else
    213                {
    214                  deltaHight_usr = 0;
   \                     ??update_41: (+1)
   \      0x1C4   0xED9F 0x....      VLDR.W   S0,??DataTable2_4  ;; 0x0
    215                }
    216                deltaHight_usr *= 1.5f;
   \                     ??update_40: (+1)
   \      0x1C8   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \      0x1CC   0xEEF7 0x0A08      VMOV.F32 S1,#1.5
   \      0x1D0   0xEE20 0x0A20      VMUL.F32 S0,S0,S1
   \      0x1D4   0xEEBD 0x8AC0      VCVT.S32.F32 S16,S0
    217              }
    218              
    219          //    if(t - takeOffTime1 > 60000)
    220          //    {
    221          //      dis_set_hight -= 1/1000.0f;
    222          //    }
    223              
    224              if(t - takeOffTime1 > 100)
   \                     ??update_38: (+1)
   \      0x1D8   0x6831             LDR      R1,[R6, #+0]
   \      0x1DA   0x68E0             LDR      R0,[R4, #+12]
   \      0x1DC   0x1A09             SUBS     R1,R1,R0
   \      0x1DE   0x2965             CMP      R1,#+101
   \      0x1E0   0xDB54             BLT.N    ??update_42
    225              {
    226                if(t - takeOffTime1 < 2000)
   \      0x1E2   0x6831             LDR      R1,[R6, #+0]
   \      0x1E4   0x68E0             LDR      R0,[R4, #+12]
   \      0x1E6   0x1A09             SUBS     R1,R1,R0
   \      0x1E8   0xF5B1 0x6FFA      CMP      R1,#+2000
   \      0x1EC   0xDA31             BGE.N    ??update_43
    227                {
    228                  dis_set_hight += deltaHight * 0.002 / 500 * (t - takeOffTime1 - 100) / 2000;
   \      0x1EE   0x.... 0x....      LDR.W    R7,??DataTable3_21
   \      0x1F2   0x6838             LDR      R0,[R7, #+0]
   \      0x1F4   0x.... 0x....      BL       __aeabi_f2d
   \      0x1F8   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   \      0x1FC   0x4650             MOV      R0,R10
   \      0x1FE   0x.... 0x....      BL       __aeabi_i2d
   \      0x202   0x.... 0x....      LDR.W    R2,??DataTable3_25  ;; 0xd2f1a9fc
   \      0x206   0x.... 0x....      LDR.W    R3,??DataTable3_26  ;; 0x3f60624d
   \      0x20A   0x.... 0x....      BL       __aeabi_dmul
   \      0x20E   0x2200             MOVS     R2,#+0
   \      0x210   0x.... 0x....      LDR.W    R3,??DataTable3_27  ;; 0x407f4000
   \      0x214   0x.... 0x....      BL       __aeabi_ddiv
   \      0x218   0x4680             MOV      R8,R0
   \      0x21A   0x4689             MOV      R9,R1
   \      0x21C   0x6830             LDR      R0,[R6, #+0]
   \      0x21E   0x68E1             LDR      R1,[R4, #+12]
   \      0x220   0x1A40             SUBS     R0,R0,R1
   \      0x222   0x3864             SUBS     R0,R0,#+100
   \      0x224   0x.... 0x....      BL       __aeabi_i2d
   \      0x228   0x4642             MOV      R2,R8
   \      0x22A   0x464B             MOV      R3,R9
   \      0x22C   0x.... 0x....      BL       __aeabi_dmul
   \      0x230   0x2200             MOVS     R2,#+0
   \      0x232   0x.... 0x....      LDR.W    R3,??DataTable3_28  ;; 0x409f4000
   \      0x236   0x.... 0x....      BL       __aeabi_ddiv
   \      0x23A   0xE9DD 0x2300      LDRD     R2,R3,[SP, #+0]
   \      0x23E   0x.... 0x....      BL       __aeabi_dadd
   \      0x242   0x.... 0x....      BL       __aeabi_d2f
   \      0x246   0x6038             STR      R0,[R7, #+0]
    229                  positionZ_vel.output = 0;
   \      0x248   0x.... 0x....      LDR.W    R0,??DataTable3_23
   \      0x24C   0x2100             MOVS     R1,#+0
   \      0x24E   0x6081             STR      R1,[R0, #+8]
   \      0x250   0xE01C             B.N      ??update_42
    230                }
    231                else
    232                {
    233                  dis_set_hight += deltaHight_usr * 0.002 / 800;
   \                     ??update_43: (+1)
   \      0x252   0x.... 0x....      LDR.W    R7,??DataTable3_21
   \      0x256   0x6838             LDR      R0,[R7, #+0]
   \      0x258   0x.... 0x....      BL       __aeabi_f2d
   \      0x25C   0x4680             MOV      R8,R0
   \      0x25E   0x4689             MOV      R9,R1
   \      0x260   0xEE18 0x0A10      VMOV     R0,S16
   \      0x264   0x.... 0x....      BL       __aeabi_i2d
   \      0x268   0x.... 0x....      LDR.W    R2,??DataTable3_25  ;; 0xd2f1a9fc
   \      0x26C   0x.... 0x....      LDR.W    R3,??DataTable3_26  ;; 0x3f60624d
   \      0x270   0x.... 0x....      BL       __aeabi_dmul
   \      0x274   0x2200             MOVS     R2,#+0
   \      0x276   0x.... 0x....      LDR.W    R3,??DataTable3_29  ;; 0x40890000
   \      0x27A   0x.... 0x....      BL       __aeabi_ddiv
   \      0x27E   0x4642             MOV      R2,R8
   \      0x280   0x464B             MOV      R3,R9
   \      0x282   0x.... 0x....      BL       __aeabi_dadd
   \      0x286   0x.... 0x....      BL       __aeabi_d2f
   \      0x28A   0x6038             STR      R0,[R7, #+0]
    234                }
    235              }
    236              
    237              if(dis_set_hight < -2) 
   \                     ??update_42: (+1)
   \      0x28C   0x.... 0x....      LDR.W    R0,??DataTable3_21
   \      0x290   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \      0x294   0xEEF8 0x0A00      VMOV.F32 S1,#-2.0
   \      0x298   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \      0x29C   0xEEF1 0xFA10      FMSTAT   
   \      0x2A0   0xD503             BPL.N    ??update_44
    238              {
    239                dis_set_hight = -2;
   \      0x2A2   0xF05F 0x4140      MOVS     R1,#-1073741824
   \      0x2A6   0x6001             STR      R1,[R0, #+0]
   \      0x2A8   0xE00B             B.N      ??update_45
    240              }
    241              else if(dis_set_hight > 2) 
   \                     ??update_44: (+1)
   \      0x2AA   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \      0x2AE   0xEDDF 0x....      VLDR.W   S1,??DataTable2_5  ;; 0x40000001
   \      0x2B2   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \      0x2B6   0xEEF1 0xFA10      FMSTAT   
   \      0x2BA   0xDB02             BLT.N    ??update_45
    242              {
    243                dis_set_hight = 2;
   \      0x2BC   0xF05F 0x4180      MOVS     R1,#+1073741824
   \      0x2C0   0x6001             STR      R1,[R0, #+0]
    244              }
    245              
    246              if(EKF_AHRS->fusion.position.z < 0.12 && t - takeOffTime1 > 2000)
   \                     ??update_45: (+1)
   \      0x2C2   0x.... 0x....      LDR.W    R0,??DataTable3_19
   \      0x2C6   0x6800             LDR      R0,[R0, #+0]
   \      0x2C8   0x30DC             ADDS     R0,R0,#+220
   \      0x2CA   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \      0x2CE   0xEDDF 0x....      VLDR.W   S1,??DataTable2_6  ;; 0x3df5c290
   \      0x2D2   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \      0x2D6   0xEEF1 0xFA10      FMSTAT   
   \      0x2DA   0xD506             BPL.N    ??update_46
   \      0x2DC   0x6831             LDR      R1,[R6, #+0]
   \      0x2DE   0x68E0             LDR      R0,[R4, #+12]
   \      0x2E0   0x1A09             SUBS     R1,R1,R0
   \      0x2E2   0x42A9             CMP      R1,R5
   \      0x2E4   0xDB01             BLT.N    ??update_46
   \      0x2E6   0x2001             MOVS     R0,#+1
   \      0x2E8   0xE000             B.N      ??update_47
   \                     ??update_46: (+1)
   \      0x2EA   0x2000             MOVS     R0,#+0
   \                     ??update_47: (+1)
   \      0x2EC   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \      0x2EE   0x2800             CMP      R0,#+0
   \      0x2F0   0xD001             BEQ.N    ??update_48
    247              {
    248                state = landing;
   \      0x2F2   0x2003             MOVS     R0,#+3
   \      0x2F4   0x7020             STRB     R0,[R4, #+0]
    249              }
    250              ControlOutput_ZChannel = altitudeHold_gravity + positionZ_vel.output;
   \                     ??update_48: (+1)
   \      0x2F6   0xED94 0x0A04      VLDR     S0,[R4, #+16]
   \      0x2FA   0x.... 0x....      LDR.W    R0,??DataTable3_23
   \      0x2FE   0xEDD0 0x0A02      VLDR     S1,[R0, #+8]
   \      0x302   0xEE30 0x0A20      VADD.F32 S0,S0,S1
   \      0x306   0x.... 0x....      LDR.W    R0,??DataTable3_16
   \      0x30A   0xED80 0x0A00      VSTR     S0,[R0, #0]
   \      0x30E   0xE037             B.N      ??update_28
    251            }
    252            else if(state == landing)
   \                     ??update_37: (+1)
   \      0x310   0x7820             LDRB     R0,[R4, #+0]
   \      0x312   0x2803             CMP      R0,#+3
   \      0x314   0xD134             BNE.N    ??update_28
    253            {
    254              if(EKF_AHRS->fusion.position.z > 0.2)
   \      0x316   0x.... 0x....      LDR.W    R0,??DataTable3_19
   \      0x31A   0x6800             LDR      R0,[R0, #+0]
   \      0x31C   0x30DC             ADDS     R0,R0,#+220
   \      0x31E   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \      0x322   0xEDDF 0x....      VLDR.W   S1,??DataTable2_7  ;; 0x3e4ccccd
   \      0x326   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \      0x32A   0xEEF1 0xFA10      FMSTAT   
   \      0x32E   0xDB03             BLT.N    ??update_49
   \      0x330   0x2001             MOVS     R0,#+1
   \      0x332   0xE002             B.N      ??update_50
   \                     ??update_0:
   \      0x334   0x3DCC'CCCE        DC32     0x3dccccce
   \                     ??update_49: (+1)
   \      0x338   0x2000             MOVS     R0,#+0
   \                     ??update_50: (+1)
   \      0x33A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \      0x33C   0x2800             CMP      R0,#+0
   \      0x33E   0xD001             BEQ.N    ??update_51
    255              {
    256                state = onTheAir;
   \      0x340   0x2002             MOVS     R0,#+2
   \      0x342   0x7020             STRB     R0,[R4, #+0]
    257              }
    258              if(altitudeHold_gravity > 0)
   \                     ??update_51: (+1)
   \      0x344   0xED94 0x0A04      VLDR     S0,[R4, #+16]
   \      0x348   0xEEB5 0x0A40      VCMP.F32 S0,#0.0
   \      0x34C   0xEEF1 0xFA10      FMSTAT   
   \      0x350   0xDD08             BLE.N    ??update_52
    259              {
    260                altitudeHold_gravity -=2;
   \      0x352   0xED94 0x0A04      VLDR     S0,[R4, #+16]
   \      0x356   0xEEF8 0x0A00      VMOV.F32 S1,#-2.0
   \      0x35A   0xEE30 0x0A20      VADD.F32 S0,S0,S1
   \      0x35E   0xED84 0x0A04      VSTR     S0,[R4, #+16]
   \      0x362   0xE00A             B.N      ??update_53
    261              }
    262              else if(altitudeHold_gravity <= 0)
   \                     ??update_52: (+1)
   \      0x364   0xED94 0x0A04      VLDR     S0,[R4, #+16]
   \      0x368   0xEEB5 0x0A40      VCMP.F32 S0,#0.0
   \      0x36C   0xEEF1 0xFA10      FMSTAT   
   \      0x370   0xD803             BHI.N    ??update_53
    263              {
    264                altitudeHold_gravity = 0;
   \      0x372   0x2000             MOVS     R0,#+0
   \      0x374   0x6120             STR      R0,[R4, #+16]
    265                state = waitting;
   \      0x376   0x2000             MOVS     R0,#+0
   \      0x378   0x7020             STRB     R0,[R4, #+0]
    266              }
    267              ControlOutput_ZChannel = altitudeHold_gravity;
   \                     ??update_53: (+1)
   \      0x37A   0x6920             LDR      R0,[R4, #+16]
   \      0x37C   0x....             LDR.N    R1,??DataTable3_16
   \      0x37E   0x6008             STR      R0,[R1, #+0]
    268            }
    269          }
   \                     ??update_28: (+1)
   \                     ??update_54: (+1)
   \      0x380   0xB002             ADD      SP,SP,#+8
   \      0x382   0xECBD 0x8B02      VPOP     {D8}
   \      0x386   0xE8BD 0x87F0      POP      {R4-R10,PC}      ;; return
    270          
    271          

   \                                 In section .text, align 4, keep-with-next
    272          void CFlightMode::CMission::update()
    273          {
   \                     _ZN11CFlightMode8CMission6updateEv: (+1)
   \        0x0   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \        0x4   0xED2D 0x8B02      VPUSH    {D8}
   \        0x8   0x0006             MOVS     R6,R0
    274            if(state == waitting)
   \        0xA   0x7C30             LDRB     R0,[R6, #+16]
   \        0xC   0x2803             CMP      R0,#+3
   \        0xE   0xF000 0x80D6      BEQ.W    ??update_55
    275            {
    276              
    277            }
    278            else if(state == lockScreen)
   \       0x12   0x7C30             LDRB     R0,[R6, #+16]
   \       0x14   0x2802             CMP      R0,#+2
   \       0x16   0xF040 0x8087      BNE.W    ??update_56
    279            {
    280              if(command->position.y > 0.02)
   \       0x1A   0x....             LDR.N    R4,??DataTable3_18
   \       0x1C   0x6820             LDR      R0,[R4, #+0]
   \       0x1E   0x301C             ADDS     R0,R0,#+28
   \       0x20   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \       0x24   0xED9F 0x....      VLDR.W   S16,??DataTable3  ;; 0x3ca3d70b
   \       0x28   0xEEB4 0x0A48      VCMP.F32 S0,S16
   \       0x2C   0xEEF1 0xFA10      FMSTAT   
   \       0x30   0xDB01             BLT.N    ??update_57
   \       0x32   0x2001             MOVS     R0,#+1
   \       0x34   0xE000             B.N      ??update_58
   \                     ??update_57: (+1)
   \       0x36   0x2000             MOVS     R0,#+0
   \                     ??update_58: (+1)
   \       0x38   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD006             BEQ.N    ??update_59
    281              {
    282                command->position.y -= 1 / 1000.0f;
   \       0x3E   0xED9F 0x....      VLDR.W   S0,??DataTable3_1  ;; 0x3a83126f
   \       0x42   0x6820             LDR      R0,[R4, #+0]
   \       0x44   0x301C             ADDS     R0,R0,#+28
   \       0x46   0x.... 0x....      BL       _ZN17CoordinateElementmIEf
   \       0x4A   0xE016             B.N      ??update_60
    283              }
    284              else if(command->position.y < -0.02)
   \                     ??update_59: (+1)
   \       0x4C   0x6820             LDR      R0,[R4, #+0]
   \       0x4E   0x301C             ADDS     R0,R0,#+28
   \       0x50   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \       0x54   0xEDDF 0x....      VLDR.W   S1,??DataTable3_2  ;; 0xbca3d70a
   \       0x58   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \       0x5C   0xEEF1 0xFA10      FMSTAT   
   \       0x60   0xD501             BPL.N    ??update_61
   \       0x62   0x2001             MOVS     R0,#+1
   \       0x64   0xE000             B.N      ??update_62
   \                     ??update_61: (+1)
   \       0x66   0x2000             MOVS     R0,#+0
   \                     ??update_62: (+1)
   \       0x68   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x6A   0x2800             CMP      R0,#+0
   \       0x6C   0xD005             BEQ.N    ??update_60
    285              {
    286                command->position.y += 1 / 1000.0f;
   \       0x6E   0xED9F 0x....      VLDR.W   S0,??DataTable3_1  ;; 0x3a83126f
   \       0x72   0x6820             LDR      R0,[R4, #+0]
   \       0x74   0x301C             ADDS     R0,R0,#+28
   \       0x76   0x.... 0x....      BL       _ZN17CoordinateElementpLEf
    287              }
    288              
    289              if(command->position.x > 0.02)
   \                     ??update_60: (+1)
   \       0x7A   0x6820             LDR      R0,[R4, #+0]
   \       0x7C   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \       0x80   0xEEB4 0x0A48      VCMP.F32 S0,S16
   \       0x84   0xEEF1 0xFA10      FMSTAT   
   \       0x88   0xDB01             BLT.N    ??update_63
   \       0x8A   0x2001             MOVS     R0,#+1
   \       0x8C   0xE000             B.N      ??update_64
   \                     ??update_63: (+1)
   \       0x8E   0x2000             MOVS     R0,#+0
   \                     ??update_64: (+1)
   \       0x90   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0x92   0x2800             CMP      R0,#+0
   \       0x94   0xD006             BEQ.N    ??update_65
    290              {
    291                command->position.y -= 1 / 1000.0f;
   \       0x96   0xED9F 0x....      VLDR.W   S0,??DataTable3_1  ;; 0x3a83126f
   \       0x9A   0x6820             LDR      R0,[R4, #+0]
   \       0x9C   0x301C             ADDS     R0,R0,#+28
   \       0x9E   0x.... 0x....      BL       _ZN17CoordinateElementmIEf
   \       0xA2   0xE016             B.N      ??update_66
    292              }
    293              else if(command->position.y < -0.02)
   \                     ??update_65: (+1)
   \       0xA4   0x6820             LDR      R0,[R4, #+0]
   \       0xA6   0x301C             ADDS     R0,R0,#+28
   \       0xA8   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \       0xAC   0xEDDF 0x....      VLDR.W   S1,??DataTable3_2  ;; 0xbca3d70a
   \       0xB0   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \       0xB4   0xEEF1 0xFA10      FMSTAT   
   \       0xB8   0xD501             BPL.N    ??update_67
   \       0xBA   0x2001             MOVS     R0,#+1
   \       0xBC   0xE000             B.N      ??update_68
   \                     ??update_67: (+1)
   \       0xBE   0x2000             MOVS     R0,#+0
   \                     ??update_68: (+1)
   \       0xC0   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \       0xC2   0x2800             CMP      R0,#+0
   \       0xC4   0xD005             BEQ.N    ??update_66
    294              {
    295                command->position.y += 1 / 1000.0f;
   \       0xC6   0xED9F 0x....      VLDR.W   S0,??DataTable3_1  ;; 0x3a83126f
   \       0xCA   0x6820             LDR      R0,[R4, #+0]
   \       0xCC   0x301C             ADDS     R0,R0,#+28
   \       0xCE   0x.... 0x....      BL       _ZN17CoordinateElementpLEf
    296              }
    297              
    298              if(videoStation->myState == CVideoStation::idel && abs(command->position.y) < 0.2)
   \                     ??update_66: (+1)
   \       0xD2   0x....             LDR.N    R5,??DataTable3_30
   \       0xD4   0x6828             LDR      R0,[R5, #+0]
   \       0xD6   0xF890 0x09EC      LDRB     R0,[R0, #+2540]
   \       0xDA   0x2803             CMP      R0,#+3
   \       0xDC   0xD116             BNE.N    ??update_69
   \       0xDE   0x6820             LDR      R0,[R4, #+0]
   \       0xE0   0x301C             ADDS     R0,R0,#+28
   \       0xE2   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \       0xE6   0xEEF0 0x0AC0      VABS.F32 S1,S0
   \       0xEA   0xED9F 0x....      VLDR.W   S2,??DataTable3_3  ;; 0x3e4ccccd
   \       0xEE   0xEEF4 0x0A41      VCMP.F32 S1,S2
   \       0xF2   0xEEF1 0xFA10      FMSTAT   
   \       0xF6   0xD401             BMI.N    ??update_70
   \       0xF8   0x2001             MOVS     R0,#+1
   \       0xFA   0xE000             B.N      ??update_71
   \                     ??update_70: (+1)
   \       0xFC   0x2000             MOVS     R0,#+0
   \                     ??update_71: (+1)
   \       0xFE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \      0x100   0x2800             CMP      R0,#+0
   \      0x102   0xD103             BNE.N    ??update_69
    299              {
    300                videoStation->myState = CVideoStation::searchScreen;
   \      0x104   0x2000             MOVS     R0,#+0
   \      0x106   0x6829             LDR      R1,[R5, #+0]
   \      0x108   0xF881 0x09EC      STRB     R0,[R1, #+2540]
    301              }
    302              
    303              
    304              if(videoStation->remoteState == CVideoStation::searchTarget)
   \                     ??update_69: (+1)
   \      0x10C   0x6828             LDR      R0,[R5, #+0]
   \      0x10E   0xF890 0x09ED      LDRB     R0,[R0, #+2541]
   \      0x112   0x2801             CMP      R0,#+1
   \      0x114   0xD153             BNE.N    ??update_55
    305              {
    306                videoStation->myState = CVideoStation::searchTarget;
   \      0x116   0x2001             MOVS     R0,#+1
   \      0x118   0x6829             LDR      R1,[R5, #+0]
   \      0x11A   0xF881 0x09EC      STRB     R0,[R1, #+2540]
    307                state = roam;
   \      0x11E   0x2000             MOVS     R0,#+0
   \      0x120   0x7430             STRB     R0,[R6, #+16]
    308                roamState = roamRight;
   \      0x122   0x2001             MOVS     R0,#+1
   \      0x124   0x6030             STR      R0,[R6, #+0]
   \      0x126   0xE04A             B.N      ??update_55
    309              }
    310            }
    311            else if(state == roam)
   \                     ??update_56: (+1)
   \      0x128   0x7C30             LDRB     R0,[R6, #+16]
   \      0x12A   0x2800             CMP      R0,#+0
   \      0x12C   0xD145             BNE.N    ??update_72
    312            {
    313              if(roamState == roamLeft)
   \      0x12E   0x6830             LDR      R0,[R6, #+0]
   \      0x130   0x2800             CMP      R0,#+0
   \      0x132   0xD11B             BNE.N    ??update_73
    314              {
    315                if(command->position.y > 2) //2ÊÇÇ½Ö½×ó²à
   \      0x134   0x....             LDR.N    R4,??DataTable3_18
   \      0x136   0x6820             LDR      R0,[R4, #+0]
   \      0x138   0x301C             ADDS     R0,R0,#+28
   \      0x13A   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \      0x13E   0xEDDF 0x....      VLDR.W   S1,??DataTable3_4  ;; 0x40000001
   \      0x142   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \      0x146   0xEEF1 0xFA10      FMSTAT   
   \      0x14A   0xDB01             BLT.N    ??update_74
   \      0x14C   0x2001             MOVS     R0,#+1
   \      0x14E   0xE000             B.N      ??update_75
   \                     ??update_74: (+1)
   \      0x150   0x2000             MOVS     R0,#+0
   \                     ??update_75: (+1)
   \      0x152   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \      0x154   0x2800             CMP      R0,#+0
   \      0x156   0xD006             BEQ.N    ??update_76
    316                {
    317                  command->position.y -= 0.5 / 1000.0f;
   \      0x158   0xED9F 0x....      VLDR.W   S0,??DataTable3_5  ;; 0x3a03126f
   \      0x15C   0x6820             LDR      R0,[R4, #+0]
   \      0x15E   0x301C             ADDS     R0,R0,#+28
   \      0x160   0x.... 0x....      BL       _ZN17CoordinateElementmIEf
   \      0x164   0xE01D             B.N      ??update_77
    318                }
    319                else
    320                {
    321                  roamState = roamRight;
   \                     ??update_76: (+1)
   \      0x166   0x2001             MOVS     R0,#+1
   \      0x168   0x6030             STR      R0,[R6, #+0]
   \      0x16A   0xE01A             B.N      ??update_77
    322                }
    323              }
    324              else
    325              {
    326                if(command->position.y < 10) //10ÊÇÇ½Ö½ÓÒ²à
   \                     ??update_73: (+1)
   \      0x16C   0x....             LDR.N    R4,??DataTable3_18
   \      0x16E   0x6820             LDR      R0,[R4, #+0]
   \      0x170   0x301C             ADDS     R0,R0,#+28
   \      0x172   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \      0x176   0xEEF2 0x0A04      VMOV.F32 S1,#10.0
   \      0x17A   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \      0x17E   0xEEF1 0xFA10      FMSTAT   
   \      0x182   0xD501             BPL.N    ??update_78
   \      0x184   0x2001             MOVS     R0,#+1
   \      0x186   0xE000             B.N      ??update_79
   \                     ??update_78: (+1)
   \      0x188   0x2000             MOVS     R0,#+0
   \                     ??update_79: (+1)
   \      0x18A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \      0x18C   0x2800             CMP      R0,#+0
   \      0x18E   0xD006             BEQ.N    ??update_80
    327                {
    328                  command->position.y += 0.5 / 1000.0f;
   \      0x190   0xED9F 0x....      VLDR.W   S0,??DataTable3_5  ;; 0x3a03126f
   \      0x194   0x6820             LDR      R0,[R4, #+0]
   \      0x196   0x301C             ADDS     R0,R0,#+28
   \      0x198   0x.... 0x....      BL       _ZN17CoordinateElementpLEf
   \      0x19C   0xE001             B.N      ??update_77
    329                }
    330                else
    331                {
    332                  roamState = roamLeft;
   \                     ??update_80: (+1)
   \      0x19E   0x2000             MOVS     R0,#+0
   \      0x1A0   0x6030             STR      R0,[R6, #+0]
    333                }
    334              }
    335              
    336              if(videoStation->valid)
   \                     ??update_77: (+1)
   \      0x1A2   0x....             LDR.N    R0,??DataTable3_30
   \      0x1A4   0x6800             LDR      R0,[R0, #+0]
   \      0x1A6   0xF890 0x09E0      LDRB     R0,[R0, #+2528]
   \      0x1AA   0x2800             CMP      R0,#+0
   \      0x1AC   0xD007             BEQ.N    ??update_55
    337              {
    338                state = lockTarget;
   \      0x1AE   0x2001             MOVS     R0,#+1
   \      0x1B0   0x7430             STRB     R0,[R6, #+16]
    339                lockTime = t;
   \      0x1B2   0x....             LDR.N    R0,??DataTable3_14
   \      0x1B4   0x6800             LDR      R0,[R0, #+0]
   \      0x1B6   0x60B0             STR      R0,[R6, #+8]
   \      0x1B8   0xE001             B.N      ??update_55
    340              }
    341            }
    342            else if(state == lockTarget)
   \                     ??update_72: (+1)
   \      0x1BA   0x7C30             LDRB     R0,[R6, #+16]
   \      0x1BC   0x2801             CMP      R0,#+1
    343            {
    344              if(videoStation->valid)
    345              {
    346           //     dis_set_hight -= videoStation->position.z / 5000.0f;
    347           //     command->position.y -= videoStation->position.y / 5000.0f;
    348              }
    349              
    350              if(t - videoStation->invalidTime > 300)
    351              {
    352            //    state = roam;
    353              }
    354              
    355          //    if(t - flightMode->takeOff.takeOffTime1 > 10000 && t - flightMode->takeOff.takeOffTime1 < 20000)
    356          //    {
    357          //      command->position.x = 0;
    358          //      command->position.y = 10;
    359          //    }
    360          //    
    361          //    if(t - flightMode->takeOff.takeOffTime1 > 20000 && t - flightMode->takeOff.takeOffTime1 < 60000)
    362          //    {
    363          //      command->position.x = 0;
    364          //      command->position.y = 0;
    365          //    }
    366          //    
    367          //    if(t - flightMode->takeOff.takeOffTime1 > 60000 && t - flightMode->takeOff.takeOffTime1 < 100000)
    368          //    {
    369          //      command->position.x = -3;
    370          //      command->position.y = 2;
    371          //    }
    372              
    373              if(waterGun->done)
    374              {
    375          //      state = lockScreen;
    376          //      waterGun->done = false;
    377          //      videoStation->myState = CVideoStation::idel;
    378          //      videoStation->idelTime = t;
    379              }
    380            }
    381            
    382            
    383            if(command->position.x > Navigation->DesiredDistanceToScreen - 0.5) 
   \                     ??update_55: (+1)
   \      0x1BE   0x....             LDR.N    R7,??DataTable3_18
   \      0x1C0   0x6838             LDR      R0,[R7, #+0]
   \      0x1C2   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \      0x1C6   0x....             LDR.N    R4,??DataTable3_31
   \      0x1C8   0xEE10 0x0A10      VMOV     R0,S0
   \      0x1CC   0x.... 0x....      BL       __aeabi_f2d
   \      0x1D0   0x0002             MOVS     R2,R0
   \      0x1D2   0x000B             MOVS     R3,R1
   \      0x1D4   0x4690             MOV      R8,R2
   \      0x1D6   0x4699             MOV      R9,R3
   \      0x1D8   0x6820             LDR      R0,[R4, #+0]
   \      0x1DA   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \      0x1DE   0x.... 0x....      BL       __aeabi_f2d
   \      0x1E2   0x2200             MOVS     R2,#+0
   \      0x1E4   0x....             LDR.N    R3,??DataTable3_32  ;; 0xbfe00000
   \      0x1E6   0x.... 0x....      BL       __aeabi_dadd
   \      0x1EA   0x4642             MOV      R2,R8
   \      0x1EC   0x464B             MOV      R3,R9
   \      0x1EE   0x.... 0x....      BL       __aeabi_cdcmple
   \      0x1F2   0xD201             BCS.N    ??update_81
   \      0x1F4   0x2001             MOVS     R0,#+1
   \      0x1F6   0xE000             B.N      ??update_82
   \                     ??update_81: (+1)
   \      0x1F8   0x2000             MOVS     R0,#+0
   \                     ??update_82: (+1)
   \      0x1FA   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \      0x1FC   0x2800             CMP      R0,#+0
   \      0x1FE   0xD11F             BNE.N    ??update_83
    384            {
    385           //---   command->position.x = Navigation->DesiredDistanceToScreen - 0.5;
    386            }
    387            else if(command->position.x < -(Navigation->DesiredDistanceToScreen + 0.5)) //×îÔ¶Á½Ã×
   \      0x200   0x6838             LDR      R0,[R7, #+0]
   \      0x202   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \      0x206   0xEEB0 0x8A40      VMOV.F32 S16,S0
   \      0x20A   0x6820             LDR      R0,[R4, #+0]
   \      0x20C   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \      0x210   0x.... 0x....      BL       __aeabi_f2d
   \      0x214   0x2200             MOVS     R2,#+0
   \      0x216   0x....             LDR.N    R3,??DataTable3_24  ;; 0x3fe00000
   \      0x218   0x.... 0x....      BL       __aeabi_dadd
   \      0x21C   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \      0x220   0x0002             MOVS     R2,R0
   \      0x222   0x000B             MOVS     R3,R1
   \      0x224   0x0014             MOVS     R4,R2
   \      0x226   0x001D             MOVS     R5,R3
   \      0x228   0xEE18 0x0A10      VMOV     R0,S16
   \      0x22C   0x.... 0x....      BL       __aeabi_f2d
   \      0x230   0x0022             MOVS     R2,R4
   \      0x232   0x002B             MOVS     R3,R5
   \      0x234   0x.... 0x....      BL       __aeabi_cdcmple
   \      0x238   0xD201             BCS.N    ??update_84
   \      0x23A   0x2001             MOVS     R0,#+1
   \      0x23C   0xE000             B.N      ??update_83
   \                     ??update_84: (+1)
   \      0x23E   0x2000             MOVS     R0,#+0
    388            {
    389           //---   command->position.x = -(Navigation->DesiredDistanceToScreen + 0.5);
    390            }
    391            
    392            if(command->position.y > 15) 
   \                     ??update_83: (+1)
   \      0x240   0x6838             LDR      R0,[R7, #+0]
   \      0x242   0x301C             ADDS     R0,R0,#+28
   \      0x244   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \      0x248   0xEDDF 0x....      VLDR.W   S1,??DataTable3_6  ;; 0x41700001
   \      0x24C   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \      0x250   0xEEF1 0xFA10      FMSTAT   
   \      0x254   0xDB01             BLT.N    ??update_85
   \      0x256   0x2001             MOVS     R0,#+1
   \      0x258   0xE000             B.N      ??update_86
   \                     ??update_85: (+1)
   \      0x25A   0x2000             MOVS     R0,#+0
   \                     ??update_86: (+1)
   \      0x25C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \      0x25E   0x2800             CMP      R0,#+0
   \      0x260   0xD10D             BNE.N    ??update_87
    393            {
    394            //---  command->position.y = 15;
    395            }
    396            else if(command->position.y < -1) 
   \      0x262   0x6838             LDR      R0,[R7, #+0]
   \      0x264   0x301C             ADDS     R0,R0,#+28
   \      0x266   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \      0x26A   0xEEFF 0x0A00      VMOV.F32 S1,#-1.0
   \      0x26E   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \      0x272   0xEEF1 0xFA10      FMSTAT   
   \      0x276   0xD501             BPL.N    ??update_88
   \      0x278   0x2001             MOVS     R0,#+1
   \      0x27A   0xE000             B.N      ??update_87
   \                     ??update_88: (+1)
   \      0x27C   0x2000             MOVS     R0,#+0
    397            {
    398            //---  command->position.y = -1;
    399            }
    400              
    401          }
   \                     ??update_87: (+1)
   \                     ??update_89: (+1)
   \      0x27E   0xECBD 0x8B02      VPOP     {D8}
   \      0x282   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \        0x0   0xD2F1'A9FC        DC32     0xD2F1A9FC,0x3F50624D
   \              0x3F50'624D  

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \        0x0   0xD2F1'A9FC        DC32     0xD2F1A9FC,0x3F60624D
   \              0x3F60'624D  

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \        0x0   0x3D4C'CCCE        DC32     0x3d4cccce

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \        0x0   0x3DA3'D70B        DC32     0x3da3d70b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \        0x0   0x43FA'0000        DC32     0x43fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \        0x0   0x443B'8000        DC32     0x443b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \        0x0   0x0000'0000        DC32     0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \        0x0   0x4000'0001        DC32     0x40000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \        0x0   0x3DF5'C290        DC32     0x3df5c290

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_7:
   \        0x0   0x3E4C'CCCD        DC32     0x3e4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \        0x0   0x3CA3'D70B        DC32     0x3ca3d70b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \        0x0   0x3A83'126F        DC32     0x3a83126f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \        0x0   0xBCA3'D70A        DC32     0xbca3d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \        0x0   0x3E4C'CCCD        DC32     0x3e4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \        0x0   0x4000'0001        DC32     0x40000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \        0x0   0x3A03'126F        DC32     0x3a03126f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \        0x0   0x4170'0001        DC32     0x41700001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \        0x0   0x....'....        DC32     `flightMode_Init()::static guard for flightMode_0`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \        0x0   0x....'....        DC32     `flightMode_Init()::flightMode_0`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \        0x0   0x....'....        DC32     flightMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \        0x0   0x....'....        DC32     EVB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \        0x0   0x....'....        DC32     SBus

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \        0x0   0x....'....        DC32     positionX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \        0x0   0x....'....        DC32     positionY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \        0x0   0x....'....        DC32     t

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \        0x0   0x....'....        DC32     angleZ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \        0x0   0x....'....        DC32     ControlOutput_ZChannel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \        0x0   0xFFFF'FDA8        DC32     0xfffffda8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \        0x0   0x....'....        DC32     command

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \        0x0   0x....'....        DC32     EKF_AHRS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \        0x0   0x....'....        DC32     EVB+0x6E8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \        0x0   0x....'....        DC32     dis_set_hight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \        0x0   0x....'....        DC32     positionZ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \        0x0   0x....'....        DC32     positionZ_vel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \        0x0   0x3FE0'0000        DC32     0x3fe00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_25:
   \        0x0   0xD2F1'A9FC        DC32     0xd2f1a9fc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_26:
   \        0x0   0x3F60'624D        DC32     0x3f60624d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_27:
   \        0x0   0x407F'4000        DC32     0x407f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_28:
   \        0x0   0x409F'4000        DC32     0x409f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_29:
   \        0x0   0x4089'0000        DC32     0x40890000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_30:
   \        0x0   0x....'....        DC32     videoStation

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_31:
   \        0x0   0x....'....        DC32     Navigation

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_32:
   \        0x0   0xBFE0'0000        DC32     0xbfe00000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   CFlightMode::CFlightMode()
         8   -> Coordinate::Coordinate()
      40   CFlightMode::CMission::update()
        40   -> CoordinateElement::operator float()
        40   -> CoordinateElement::operator+=(float)
        40   -> CoordinateElement::operator-=(float)
        40   -> __aeabi_dadd
        40   -> __aeabi_f2d
        40 __aeabi_cdcmple
      48   CFlightMode::CTakeOff::update()
        48   -> CoordinateElement::operator float()
        48   -> PID_Controller::reset()
        48   -> __aeabi_d2f
        48   -> __aeabi_dadd
        48   -> __aeabi_ddiv
        48   -> __aeabi_dmul
        48   -> __aeabi_f2d
        48   -> __aeabi_i2d
      40   CFlightMode::update()
        40   -> CFlightMode::CMission::update()
        40   -> CFlightMode::CTakeOff::update()
        40   -> CoordinateElement::operator+=(float)
        40   -> PID_Controller::reset()
        40   -> __aeabi_d2f
        40   -> __aeabi_dmul
        40   -> __aeabi_i2d
       8   Coordinate::Coordinate()
         8   -> CoordinateElement::CoordinateElement()
       0   CoordinateElement::CoordinateElement()
       8   flightMode_Init()
         8   -> CFlightMode::CFlightMode()


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       8  ??DataTable1
       8  ??DataTable1_1
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable2_7
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_25
       4  ??DataTable3_26
       4  ??DataTable3_27
       4  ??DataTable3_28
       4  ??DataTable3_29
       4  ??DataTable3_3
       4  ??DataTable3_30
       4  ??DataTable3_31
       4  ??DataTable3_32
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      14  CFlightMode::CFlightMode()
     646  CFlightMode::CMission::update()
     906  CFlightMode::CTakeOff::update()
     454  CFlightMode::update()
      30  Coordinate::Coordinate()
      28  CoordinateElement::CoordinateElement()
       4  flightMode
     156  flightMode_0
      36  flightMode_Init()
      25  -- Other

 
    24 bytes in section .ARM.exidx
   161 bytes in section .bss
 2 294 bytes in section .text
 
 2 222 bytes of CODE  memory (+ 72 bytes shared)
    24 bytes of CONST memory
   161 bytes of DATA  memory

Errors: none
Warnings: none
