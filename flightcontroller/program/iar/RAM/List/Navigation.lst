###############################################################################
#
# IAR ANSI C/C++ Compiler V8.11.2.13589/W32 for ARM       18/Jun/2018  19:48:00
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\Sensor\Navigation.cpp
#    Command line =  
#        -f C:\Users\XSK199~1\AppData\Local\Temp\EW2683.tmp
#        (C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\Sensor\Navigation.cpp
#        -D K60 -D USE_K60F15 -D ARM_MATH_CM4 -D __FPU_PRESENT=1 -D
#        __FPU_USED=1 -lCN
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\List
#        -lB
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\List
#        -o
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config
#        D:\iar\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\app\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\app\Sensor\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\CPU\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\common\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\HW\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\DEV\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\FatFs\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\FatFs\option\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\common\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\driver\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\descriptor\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\class\
#        -On --c++ -I D:\iar\arm\CMSIS\Include\ -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\List\Navigation.lst
#    Object file  =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\Obj\Navigation.o
#
###############################################################################

C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\Sensor\Navigation.cpp
      1          #include "Navigation.h"

   \                                 In section .text, align 4
   \   __code __interwork __softfp CJumpFilter::CJumpFilter()
   \                     _ZN11CJumpFilterC1Ev: (+1)
   \   00000000   0x4904             LDR.N    R1,??CJumpFilter_0  ;; 0x42c80000
   \   00000002   0x6081             STR      R1,[R0, #+8]
   \   00000004   0xF44F 0x7196      MOV      R1,#+300
   \   00000008   0x6281             STR      R1,[R0, #+40]
   \   0000000A   0xF05F 0x517E      MOVS     R1,#+1065353216
   \   0000000E   0x62C1             STR      R1,[R0, #+44]
   \   00000010   0x4770             BX       LR               ;; return
   \   00000012   0xBF00             Nop      
   \                     ??CJumpFilter_0:
   \   00000014   0x42C80000         DC32     0x42c80000

   \                                 In section .text, align 4
   \   __code __interwork __softfp CoordinateElement::CoordinateElement()
   \                     _ZN17CoordinateElementC1Ev: (+1)
   \   00000000   0x4903             LDR.N    R1,??CoordinateElement_0  ;; 0x3f4ccccd
   \   00000002   0x6101             STR      R1,[R0, #+16]
   \   00000004   0x4903             LDR.N    R1,??CoordinateElement_0+0x4  ;; 0x461c4000
   \   00000006   0x6141             STR      R1,[R0, #+20]
   \   00000008   0x4903             LDR.N    R1,??CoordinateElement_0+0x8  ;; 0xc61c4000
   \   0000000A   0x6181             STR      R1,[R0, #+24]
   \   0000000C   0x4770             BX       LR               ;; return
   \   0000000E   0xBF00             Nop      
   \                     ??CoordinateElement_0:
   \   00000010   0x3F4CCCCD         DC32     0x3f4ccccd
   \   00000014   0x461C4000         DC32     0x461c4000
   \   00000018   0xC61C4000         DC32     0xc61c4000

   \                                 In section .text, align 2
   \   __code __interwork __softfp Coordinate::Coordinate()
   \                     _ZN10CoordinateC1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _ZN17CoordinateElementC1Ev
   \   0000000A   0xF114 0x001C      ADDS     R0,R4,#+28
   \   0000000E   0x.... 0x....      BL       _ZN17CoordinateElementC1Ev
   \   00000012   0xF114 0x0038      ADDS     R0,R4,#+56
   \   00000016   0x.... 0x....      BL       _ZN17CoordinateElementC1Ev
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp CNavigation::CNavigation()
   \                     _ZN11CNavigationC1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _ZN11CJumpFilterC1Ev
   \   0000000A   0xF114 0x0038      ADDS     R0,R4,#+56
   \   0000000E   0x.... 0x....      BL       _ZN10CoordinateC1Ev
   \   00000012   0x0020             MOVS     R0,R4
   \   00000014   0xBD10             POP      {R4,PC}          ;; return
      2          

   \                                 In section .bss, align 4
      3          CNavigation *Navigation;
   \                     Navigation:
   \   00000000                      DS8 4
      4          
      5          

   \                                 In section .text, align 2, keep-with-next
      6          void Navigation_Init()
      7          {
   \                     _Z15Navigation_Initv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD107             BNE.N    ??Navigation_Init_0
      8            static CNavigation Navigation_0;
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   00000010   0x.... 0x....      BL       _ZN11CNavigationC1Ev
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable1_6
   \   0000001A   0x7008             STRB     R0,[R1, #+0]
      9            Navigation = &Navigation_0;
   \                     ??Navigation_Init_0: (+1)
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable1_8
   \   00000024   0x6008             STR      R0,[R1, #+0]
     10            Navigation->DesiredDistanceToScreen = 1.5f;
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable1_8
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0xF05F 0x517F      MOVS     R1,#+1069547520
   \   00000030   0xF8C0 0x10A8      STR      R1,[R0, #+168]
     11            Navigation->angleFilter.setParameter(2, 200);
   \   00000034   0x21C8             MOVS     R1,#+200
   \   00000036   0xEEB0 0x0A00      VMOV.F32 S0,#2.0
   \   0000003A   0x....             LDR.N    R0,??DataTable1_8
   \   0000003C   0x6800             LDR      R0,[R0, #+0]
   \   0000003E   0x.... 0x....      BL       _ZN11CJumpFilter12setParameterEfi
     12          }
   \                     ??Navigation_Init_1: (+1)
   \   00000042   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     `Navigation_Init()::Navigation_0`:
   \   00000000                      DS8 172
     13          

   \                                 In section .text, align 4, keep-with-next
     14          void CNavigation::update()
     15          {
   \                     _ZN11CNavigation6updateEv: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0x0006             MOVS     R6,R0
     16            if(UltrasoundUART->distance2 < 4 && UltrasoundUART->distance3 < 4 && 
     17               abs(UltrasoundUART->distance2 - UltrasoundUART->distance3) < 0.15 &&  //0.15是距屏幕1.5m时的差值阈值
     18               t - UltrasoundUART->lastValidTime2 < 200 &&  t - UltrasoundUART->lastValidTime3 < 200 &&
     19               UltrasoundUART->distanceFilter2.valid && UltrasoundUART->distanceFilter3.valid)
   \   00000008   0x....             LDR.N    R0,??DataTable1_9
   \   0000000A   0x6800             LDR      R0,[R0, #+0]
   \   0000000C   0xF600 0x4038      ADDW     R0,R0,#+3128
   \   00000010   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   00000014   0xEEF1 0x0A00      VMOV.F32 S1,#4.0
   \   00000018   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   0000001C   0xEEF1 0xFA10      FMSTAT   
   \   00000020   0xD551             BPL.N    ??update_0
   \   00000022   0x....             LDR.N    R0,??DataTable1_9
   \   00000024   0x6800             LDR      R0,[R0, #+0]
   \   00000026   0xF600 0x4054      ADDW     R0,R0,#+3156
   \   0000002A   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   0000002E   0xEEF1 0x0A00      VMOV.F32 S1,#4.0
   \   00000032   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000036   0xEEF1 0xFA10      FMSTAT   
   \   0000003A   0xD401             BMI.N    ??update_1
   \   0000003C   0x2001             MOVS     R0,#+1
   \   0000003E   0xE000             B.N      ??update_2
   \                     ??update_1: (+1)
   \   00000040   0x2000             MOVS     R0,#+0
   \                     ??update_2: (+1)
   \   00000042   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000044   0x2800             CMP      R0,#+0
   \   00000046   0xD13E             BNE.N    ??update_0
   \   00000048   0x....             LDR.N    R0,??DataTable1_9
   \   0000004A   0x6800             LDR      R0,[R0, #+0]
   \   0000004C   0xF600 0x4038      ADDW     R0,R0,#+3128
   \   00000050   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   00000054   0xEEB0 0x8A40      VMOV.F32 S16,S0
   \   00000058   0x....             LDR.N    R0,??DataTable1_9
   \   0000005A   0x6800             LDR      R0,[R0, #+0]
   \   0000005C   0xF600 0x4054      ADDW     R0,R0,#+3156
   \   00000060   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   00000064   0xEE38 0x0A40      VSUB.F32 S0,S16,S0
   \   00000068   0xEEF0 0x0AC0      VABS.F32 S1,S0
   \   0000006C   0xED9F 0x....      VLDR.W   S2,??DataTable1  ;; 0x3e19999a
   \   00000070   0xEEF4 0x0A41      VCMP.F32 S1,S2
   \   00000074   0xEEF1 0xFA10      FMSTAT   
   \   00000078   0xD401             BMI.N    ??update_3
   \   0000007A   0x2001             MOVS     R0,#+1
   \   0000007C   0xE000             B.N      ??update_4
   \                     ??update_3: (+1)
   \   0000007E   0x2000             MOVS     R0,#+0
   \                     ??update_4: (+1)
   \   00000080   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000082   0x2800             CMP      R0,#+0
   \   00000084   0xD11F             BNE.N    ??update_0
   \   00000086   0x....             LDR.N    R0,??DataTable1_10
   \   00000088   0x6801             LDR      R1,[R0, #+0]
   \   0000008A   0x....             LDR.N    R0,??DataTable1_9
   \   0000008C   0x6800             LDR      R0,[R0, #+0]
   \   0000008E   0xF8D0 0x0D1C      LDR      R0,[R0, #+3356]
   \   00000092   0x1A09             SUBS     R1,R1,R0
   \   00000094   0x29C8             CMP      R1,#+200
   \   00000096   0xDA16             BGE.N    ??update_0
   \   00000098   0x....             LDR.N    R0,??DataTable1_10
   \   0000009A   0x6801             LDR      R1,[R0, #+0]
   \   0000009C   0x....             LDR.N    R0,??DataTable1_9
   \   0000009E   0x6800             LDR      R0,[R0, #+0]
   \   000000A0   0xF8D0 0x0D20      LDR      R0,[R0, #+3360]
   \   000000A4   0x1A09             SUBS     R1,R1,R0
   \   000000A6   0x29C8             CMP      R1,#+200
   \   000000A8   0xDA0D             BGE.N    ??update_0
   \   000000AA   0x....             LDR.N    R0,??DataTable1_9
   \   000000AC   0x6800             LDR      R0,[R0, #+0]
   \   000000AE   0xF890 0x0CDC      LDRB     R0,[R0, #+3292]
   \   000000B2   0x2800             CMP      R0,#+0
   \   000000B4   0xD007             BEQ.N    ??update_0
   \   000000B6   0x....             LDR.N    R0,??DataTable1_9
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0xF890 0x0D14      LDRB     R0,[R0, #+3348]
   \   000000BE   0x2800             CMP      R0,#+0
   \   000000C0   0xD001             BEQ.N    ??update_0
   \   000000C2   0x2001             MOVS     R0,#+1
   \   000000C4   0xE000             B.N      ??update_5
   \                     ??update_0: (+1)
   \   000000C6   0x2000             MOVS     R0,#+0
   \                     ??update_5: (+1)
   \   000000C8   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000CA   0x2800             CMP      R0,#+0
   \   000000CC   0xD003             BEQ.N    ??update_6
     20            {
     21              angleToScreenValidTmp = true;
   \   000000CE   0x2001             MOVS     R0,#+1
   \   000000D0   0xF886 0x0098      STRB     R0,[R6, #+152]
   \   000000D4   0xE005             B.N      ??update_7
     22            }
     23            else
     24            {
     25              angleToScreenValidTmp  = false;
   \                     ??update_6: (+1)
   \   000000D6   0x2000             MOVS     R0,#+0
   \   000000D8   0xF886 0x0098      STRB     R0,[R6, #+152]
     26              angleToScreenValid = false;
   \   000000DC   0x2000             MOVS     R0,#+0
   \   000000DE   0xF886 0x009A      STRB     R0,[R6, #+154]
     27            }
     28            
     29            if(!angleToScreenValidTmp && angleToScreenValidTmpLast)
     30            {
     31            }
     32            if(angleToScreenValidTmp && !angleToScreenValidTmpLast)
   \                     ??update_7: (+1)
   \   000000E2   0xF896 0x0098      LDRB     R0,[R6, #+152]
   \   000000E6   0x2800             CMP      R0,#+0
   \   000000E8   0xD00A             BEQ.N    ??update_8
   \   000000EA   0xF896 0x0099      LDRB     R0,[R6, #+153]
   \   000000EE   0x2800             CMP      R0,#+0
   \   000000F0   0xD106             BNE.N    ??update_8
     33            {
     34              angleToScreenValidTime = t;
   \   000000F2   0x....             LDR.N    R0,??DataTable1_10
   \   000000F4   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   000000F8   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000000FC   0xED86 0x0A27      VSTR     S0,[R6, #+156]
     35            }
     36            angleToScreenValidTmpLast = angleToScreenValidTmp;
   \                     ??update_8: (+1)
   \   00000100   0xF896 0x0098      LDRB     R0,[R6, #+152]
   \   00000104   0xF886 0x0099      STRB     R0,[R6, #+153]
     37            
     38            if(t - angleToScreenValidTime == 10)
   \   00000108   0x....             LDR.N    R0,??DataTable1_10
   \   0000010A   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   0000010E   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000112   0xEDD6 0x0A27      VLDR     S1,[R6, #+156]
   \   00000116   0xEE30 0x0A60      VSUB.F32 S0,S0,S1
   \   0000011A   0xEEF2 0x0A04      VMOV.F32 S1,#10.0
   \   0000011E   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000122   0xEEF1 0xFA10      FMSTAT   
   \   00000126   0xD103             BNE.N    ??update_9
     39            {
     40              angleToScreen_CF = angleToScreen;
   \   00000128   0xF8D6 0x008C      LDR      R0,[R6, #+140]
   \   0000012C   0xF8C6 0x0094      STR      R0,[R6, #+148]
     41            }
     42            
     43            if(angleToScreenValidTmp && t - angleToScreenValidTime > 100)
   \                     ??update_9: (+1)
   \   00000130   0xF896 0x0098      LDRB     R0,[R6, #+152]
   \   00000134   0x2800             CMP      R0,#+0
   \   00000136   0xD012             BEQ.N    ??update_10
   \   00000138   0x....             LDR.N    R0,??DataTable1_10
   \   0000013A   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   0000013E   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000142   0xEDD6 0x0A27      VLDR     S1,[R6, #+156]
   \   00000146   0xEE30 0x0A60      VSUB.F32 S0,S0,S1
   \   0000014A   0xEDDF 0x....      VLDR.W   S1,??DataTable1_1  ;; 0x42c80001
   \   0000014E   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000152   0xEEF1 0xFA10      FMSTAT   
   \   00000156   0xDB02             BLT.N    ??update_10
     44            {
     45              angleToScreenValid = true;
   \   00000158   0x2001             MOVS     R0,#+1
   \   0000015A   0xF886 0x009A      STRB     R0,[R6, #+154]
     46            }
     47            
     48            if(!angleToScreenValid && angleToScreenValidLast)
   \                     ??update_10: (+1)
   \   0000015E   0xF896 0x009A      LDRB     R0,[R6, #+154]
   \   00000162   0x2800             CMP      R0,#+0
   \   00000164   0xD125             BNE.N    ??update_11
   \   00000166   0xF896 0x009B      LDRB     R0,[R6, #+155]
   \   0000016A   0x2800             CMP      R0,#+0
   \   0000016C   0xD021             BEQ.N    ??update_11
     49            {
     50            //  angleZ.referance = yaw1;
     51              angleZ.Kp0 = angleZ.Kp0 * 0.95 + 1800 * 0.05;
   \   0000016E   0x....             LDR.N    R0,??DataTable1_11
   \   00000170   0x6A80             LDR      R0,[R0, #+40]
   \   00000172   0x.... 0x....      BL       __aeabi_f2d
   \   00000176   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   0000017A   0x....             LDR.N    R3,??DataTable1_12  ;; 0x3fee6666
   \   0000017C   0x.... 0x....      BL       __aeabi_dmul
   \   00000180   0x2200             MOVS     R2,#+0
   \   00000182   0x....             LDR.N    R3,??DataTable1_13  ;; 0x40568000
   \   00000184   0x.... 0x....      BL       __aeabi_dadd
   \   00000188   0x.... 0x....      BL       __aeabi_d2f
   \   0000018C   0x....             LDR.N    R1,??DataTable1_11
   \   0000018E   0x6288             STR      R0,[R1, #+40]
     52              angleZ.Kd0 = angleZ.Kd0 * 0.95 + 200 * 0.05;
   \   00000190   0x....             LDR.N    R0,??DataTable1_11
   \   00000192   0x6B00             LDR      R0,[R0, #+48]
   \   00000194   0x.... 0x....      BL       __aeabi_f2d
   \   00000198   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   0000019C   0x....             LDR.N    R3,??DataTable1_12  ;; 0x3fee6666
   \   0000019E   0x.... 0x....      BL       __aeabi_dmul
   \   000001A2   0x2200             MOVS     R2,#+0
   \   000001A4   0x....             LDR.N    R3,??DataTable1_14  ;; 0x40240000
   \   000001A6   0x.... 0x....      BL       __aeabi_dadd
   \   000001AA   0x.... 0x....      BL       __aeabi_d2f
   \   000001AE   0x....             LDR.N    R1,??DataTable1_11
   \   000001B0   0x6308             STR      R0,[R1, #+48]
     53            }
     54            if(angleToScreenValid && !angleToScreenValidLast)
   \                     ??update_11: (+1)
   \   000001B2   0xF896 0x009A      LDRB     R0,[R6, #+154]
   \   000001B6   0x2800             CMP      R0,#+0
   \   000001B8   0xD025             BEQ.N    ??update_12
   \   000001BA   0xF896 0x009B      LDRB     R0,[R6, #+155]
   \   000001BE   0x2800             CMP      R0,#+0
   \   000001C0   0xD121             BNE.N    ??update_12
     55            {
     56              angleZ.Kp0 = angleZ.Kp0 * 0.95 + 5000 * 0.05;
   \   000001C2   0x....             LDR.N    R0,??DataTable1_11
   \   000001C4   0x6A80             LDR      R0,[R0, #+40]
   \   000001C6   0x.... 0x....      BL       __aeabi_f2d
   \   000001CA   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   000001CE   0x....             LDR.N    R3,??DataTable1_12  ;; 0x3fee6666
   \   000001D0   0x.... 0x....      BL       __aeabi_dmul
   \   000001D4   0x2200             MOVS     R2,#+0
   \   000001D6   0x....             LDR.N    R3,??DataTable1_15  ;; 0x406f4000
   \   000001D8   0x.... 0x....      BL       __aeabi_dadd
   \   000001DC   0x.... 0x....      BL       __aeabi_d2f
   \   000001E0   0x....             LDR.N    R1,??DataTable1_11
   \   000001E2   0x6288             STR      R0,[R1, #+40]
     57              angleZ.Kd0 = angleZ.Kd0 * 0.95 + 400 * 0.05;
   \   000001E4   0x....             LDR.N    R0,??DataTable1_11
   \   000001E6   0x6B00             LDR      R0,[R0, #+48]
   \   000001E8   0x.... 0x....      BL       __aeabi_f2d
   \   000001EC   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   000001F0   0x....             LDR.N    R3,??DataTable1_12  ;; 0x3fee6666
   \   000001F2   0x.... 0x....      BL       __aeabi_dmul
   \   000001F6   0x2200             MOVS     R2,#+0
   \   000001F8   0x....             LDR.N    R3,??DataTable1_16  ;; 0x40340000
   \   000001FA   0x.... 0x....      BL       __aeabi_dadd
   \   000001FE   0x.... 0x....      BL       __aeabi_d2f
   \   00000202   0x....             LDR.N    R1,??DataTable1_11
   \   00000204   0x6308             STR      R0,[R1, #+48]
     58            }
     59            angleToScreenValidLast = angleToScreenValid;
   \                     ??update_12: (+1)
   \   00000206   0xF896 0x009A      LDRB     R0,[R6, #+154]
   \   0000020A   0xF886 0x009B      STRB     R0,[R6, #+155]
     60            
     61            if(angleToScreenValidTmp)
   \   0000020E   0xF896 0x0098      LDRB     R0,[R6, #+152]
   \   00000212   0x2800             CMP      R0,#+0
   \   00000214   0xD05E             BEQ.N    ??update_13
     62            {
     63              angleToScreen = atan((UltrasoundUART->distance2 - UltrasoundUART->distance3) / 0.48f) * 57.296f;
   \   00000216   0x....             LDR.N    R0,??DataTable1_9
   \   00000218   0x6800             LDR      R0,[R0, #+0]
   \   0000021A   0xF600 0x4038      ADDW     R0,R0,#+3128
   \   0000021E   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   00000222   0xEEB0 0x8A40      VMOV.F32 S16,S0
   \   00000226   0x....             LDR.N    R0,??DataTable1_9
   \   00000228   0x6800             LDR      R0,[R0, #+0]
   \   0000022A   0xF600 0x4054      ADDW     R0,R0,#+3156
   \   0000022E   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   00000232   0xEE38 0x0A40      VSUB.F32 S0,S16,S0
   \   00000236   0xEDDF 0x....      VLDR.W   S1,??DataTable1_2  ;; 0x3ef5c28f
   \   0000023A   0xEE80 0x8A20      VDIV.F32 S16,S0,S1
   \   0000023E   0xEEB0 0x0A48      VMOV.F32 S0,S16
   \   00000242   0x.... 0x....      BL       atanf
   \   00000246   0xEDDF 0x....      VLDR.W   S1,??DataTable1_3  ;; 0x42652f1b
   \   0000024A   0xEE20 0x0A20      VMUL.F32 S0,S0,S1
   \   0000024E   0xED86 0x0A23      VSTR     S0,[R6, #+140]
     64              angleFilter.setParameter((abs(MPU6000.gyro_z) * 90 + 800), 80);
   \   00000252   0x....             LDR.N    R0,??DataTable1_17
   \   00000254   0xEDD0 0x8A11      VLDR     S17,[R0, #+68]
   \   00000258   0xEEF0 0x0AE8      VABS.F32 S1,S17
   \   0000025C   0x2150             MOVS     R1,#+80
   \   0000025E   0xED9F 0x....      VLDR.W   S2,??DataTable1_4  ;; 0x42b40000
   \   00000262   0xED9F 0x....      VLDR.W   S0,??DataTable1_5  ;; 0x44480000
   \   00000266   0xEE00 0x0A81      VMLA.F32 S0,S1,S2
   \   0000026A   0x0030             MOVS     R0,R6
   \   0000026C   0x.... 0x....      BL       _ZN11CJumpFilter12setParameterEfi
     65              angleToScreenJumpF = angleFilter.newData1(angleToScreen, t);
   \   00000270   0x....             LDR.N    R0,??DataTable1_10
   \   00000272   0x6801             LDR      R1,[R0, #+0]
   \   00000274   0xED96 0x0A23      VLDR     S0,[R6, #+140]
   \   00000278   0x0030             MOVS     R0,R6
   \   0000027A   0x.... 0x....      BL       _ZN11CJumpFilter8newData1Efi
   \   0000027E   0xED86 0x0A24      VSTR     S0,[R6, #+144]
     66              angleToScreen_CF = (angleToScreen_CF + MPU6000.gyro_z * 0.002) * 0.995f + angleToScreenJumpF * 0.005;
   \   00000282   0xF8D6 0x0094      LDR      R0,[R6, #+148]
   \   00000286   0x.... 0x....      BL       __aeabi_f2d
   \   0000028A   0x0004             MOVS     R4,R0
   \   0000028C   0x000D             MOVS     R5,R1
   \   0000028E   0x....             LDR.N    R0,??DataTable1_17
   \   00000290   0x6C40             LDR      R0,[R0, #+68]
   \   00000292   0x.... 0x....      BL       __aeabi_f2d
   \   00000296   0x....             LDR.N    R2,??DataTable1_18  ;; 0xd2f1a9fc
   \   00000298   0x....             LDR.N    R3,??DataTable1_19  ;; 0x3f60624d
   \   0000029A   0x.... 0x....      BL       __aeabi_dmul
   \   0000029E   0x0022             MOVS     R2,R4
   \   000002A0   0x002B             MOVS     R3,R5
   \   000002A2   0x.... 0x....      BL       __aeabi_dadd
   \   000002A6   0xF05F 0x4280      MOVS     R2,#+1073741824
   \   000002AA   0x....             LDR.N    R3,??DataTable1_20  ;; 0x3fefd70a
   \   000002AC   0x.... 0x....      BL       __aeabi_dmul
   \   000002B0   0x0004             MOVS     R4,R0
   \   000002B2   0x000D             MOVS     R5,R1
   \   000002B4   0xF8D6 0x0090      LDR      R0,[R6, #+144]
   \   000002B8   0x.... 0x....      BL       __aeabi_f2d
   \   000002BC   0x....             LDR.N    R2,??DataTable1_21  ;; 0x47ae147b
   \   000002BE   0x....             LDR.N    R3,??DataTable1_22  ;; 0x3f747ae1
   \   000002C0   0x.... 0x....      BL       __aeabi_dmul
   \   000002C4   0x0022             MOVS     R2,R4
   \   000002C6   0x002B             MOVS     R3,R5
   \   000002C8   0x.... 0x....      BL       __aeabi_dadd
   \   000002CC   0x.... 0x....      BL       __aeabi_d2f
   \   000002D0   0xF8C6 0x0094      STR      R0,[R6, #+148]
     67            }
     68            if(angleToScreenValid)
   \                     ??update_13: (+1)
   \   000002D4   0xF896 0x009A      LDRB     R0,[R6, #+154]
   \   000002D8   0x2800             CMP      R0,#+0
   \   000002DA   0xD008             BEQ.N    ??update_14
     69            {
     70              yawCompensation = angleToScreen_CF - yaw2;
   \   000002DC   0xED96 0x0A25      VLDR     S0,[R6, #+148]
   \   000002E0   0x....             LDR.N    R0,??DataTable1_23
   \   000002E2   0xEDD0 0x0A00      VLDR     S1,[R0, #0]
   \   000002E6   0xEE30 0x0A60      VSUB.F32 S0,S0,S1
   \   000002EA   0xED86 0x0A29      VSTR     S0,[R6, #+164]
     71            }
     72            yaw1 = yaw2 + yawCompensation;
   \                     ??update_14: (+1)
   \   000002EE   0x....             LDR.N    R0,??DataTable1_23
   \   000002F0   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   000002F4   0xEDD6 0x0A29      VLDR     S1,[R6, #+164]
   \   000002F8   0xEE30 0x0A20      VADD.F32 S0,S0,S1
   \   000002FC   0x....             LDR.N    R0,??DataTable1_24
   \   000002FE   0xED80 0x0A00      VSTR     S0,[R0, #0]
     73          }
   \                     ??update_15: (+1)
   \   00000302   0xECBD 0x8B02      VPOP     {D8}
   \   00000306   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x3E19999A         DC32     0x3e19999a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x42C80001         DC32     0x42c80001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x3EF5C28F         DC32     0x3ef5c28f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x42652F1B         DC32     0x42652f1b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x42B40000         DC32     0x42b40000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x44480000         DC32     0x44480000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     `Navigation_Init()::static guard for Navigation_0`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     `Navigation_Init()::Navigation_0`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x........         DC32     Navigation

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     UltrasoundUART

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     t

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     angleZ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x3FEE6666         DC32     0x3fee6666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x40568000         DC32     0x40568000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x40240000         DC32     0x40240000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0x406F4000         DC32     0x406f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_16:
   \   00000000   0x40340000         DC32     0x40340000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_17:
   \   00000000   0x........         DC32     MPU6000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_18:
   \   00000000   0xD2F1A9FC         DC32     0xd2f1a9fc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_19:
   \   00000000   0x3F60624D         DC32     0x3f60624d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_20:
   \   00000000   0x3FEFD70A         DC32     0x3fefd70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_21:
   \   00000000   0x47AE147B         DC32     0x47ae147b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_22:
   \   00000000   0x3F747AE1         DC32     0x3f747ae1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_23:
   \   00000000   0x........         DC32     yaw2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_24:
   \   00000000   0x........         DC32     yaw1

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       0   CJumpFilter::CJumpFilter()
       8   CNavigation::CNavigation()
         8   -> CJumpFilter::CJumpFilter()
         8   -> Coordinate::Coordinate()
      24   CNavigation::update()
        24   -> CJumpFilter::newData1(float, int)
        24   -> CJumpFilter::setParameter(float, int)
        24   -> CoordinateElement::operator float()
        24   -> __aeabi_d2f
        24   -> __aeabi_dadd
        24   -> __aeabi_dmul
        24   -> __aeabi_f2d
        24   -> atanf
       8   Coordinate::Coordinate()
         8   -> CoordinateElement::CoordinateElement()
       0   CoordinateElement::CoordinateElement()
       8   Navigation_Init()
         8   -> CJumpFilter::setParameter(float, int)
         8   -> CNavigation::CNavigation()


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_16
       4  ??DataTable1_17
       4  ??DataTable1_18
       4  ??DataTable1_19
       4  ??DataTable1_2
       4  ??DataTable1_20
       4  ??DataTable1_21
       4  ??DataTable1_22
       4  ??DataTable1_23
       4  ??DataTable1_24
       4  ??DataTable1_3
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
      24  CJumpFilter::CJumpFilter()
      22  CNavigation::CNavigation()
     776  CNavigation::update()
      30  Coordinate::Coordinate()
      28  CoordinateElement::CoordinateElement()
       4  Navigation
     172  Navigation_0
      68  Navigation_Init()
      17  -- Other

 
    16 bytes in section .ARM.exidx
   177 bytes in section .bss
 1 048 bytes in section .text
 
 944 bytes of CODE  memory (+ 104 bytes shared)
  16 bytes of CONST memory
 177 bytes of DATA  memory

Errors: none
Warnings: none
