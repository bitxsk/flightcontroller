###############################################################################
#
# IAR ANSI C/C++ Compiler V8.11.2.13589/W32 for ARM       18/Jun/2018  19:47:55
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\FlightMode.cpp
#    Command line =  
#        -f C:\Users\XSK199~1\AppData\Local\Temp\EW133B.tmp
#        (C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\FlightMode.cpp
#        -D K60 -D USE_K60F15 -D ARM_MATH_CM4 -D __FPU_PRESENT=1 -D
#        __FPU_USED=1 -lCN
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\List
#        -lB
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\List
#        -o
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config
#        D:\iar\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\app\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\app\Sensor\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\CPU\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\common\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\HW\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\DEV\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\FatFs\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\FatFs\option\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\common\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\driver\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\descriptor\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\class\
#        -On --c++ -I D:\iar\arm\CMSIS\Include\ -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\List\FlightMode.lst
#    Object file  =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\Obj\FlightMode.o
#
###############################################################################

C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\FlightMode.cpp
      1          #include "FlightMode.h"

   \                                 In section .text, align 4
   \   __code __interwork __softfp CoordinateElement::CoordinateElement()
   \                     _ZN17CoordinateElementC1Ev: (+1)
   \   00000000   0x4903             LDR.N    R1,??CoordinateElement_0  ;; 0x3f4ccccd
   \   00000002   0x6101             STR      R1,[R0, #+16]
   \   00000004   0x4903             LDR.N    R1,??CoordinateElement_0+0x4  ;; 0x461c4000
   \   00000006   0x6141             STR      R1,[R0, #+20]
   \   00000008   0x4903             LDR.N    R1,??CoordinateElement_0+0x8  ;; 0xc61c4000
   \   0000000A   0x6181             STR      R1,[R0, #+24]
   \   0000000C   0x4770             BX       LR               ;; return
   \   0000000E   0xBF00             Nop      
   \                     ??CoordinateElement_0:
   \   00000010   0x3F4CCCCD         DC32     0x3f4ccccd
   \   00000014   0x461C4000         DC32     0x461c4000
   \   00000018   0xC61C4000         DC32     0xc61c4000

   \                                 In section .text, align 2
   \   __code __interwork __softfp Coordinate::Coordinate()
   \                     _ZN10CoordinateC1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _ZN17CoordinateElementC1Ev
   \   0000000A   0xF114 0x001C      ADDS     R0,R4,#+28
   \   0000000E   0x.... 0x....      BL       _ZN17CoordinateElementC1Ev
   \   00000012   0xF114 0x0038      ADDS     R0,R4,#+56
   \   00000016   0x.... 0x....      BL       _ZN17CoordinateElementC1Ev
   \   0000001A   0x0020             MOVS     R0,R4
   \   0000001C   0xBD10             POP      {R4,PC}          ;; return

   \                                 In section .text, align 2
   \   __code __interwork __softfp CFlightMode::CFlightMode()
   \                     _ZN11CFlightModeC1Ev: (+1)
   \   00000000   0xB510             PUSH     {R4,LR}
   \   00000002   0x0004             MOVS     R4,R0
   \   00000004   0x0020             MOVS     R0,R4
   \   00000006   0x.... 0x....      BL       _ZN10CoordinateC1Ev
   \   0000000A   0x0020             MOVS     R0,R4
   \   0000000C   0xBD10             POP      {R4,PC}          ;; return
      2          

   \                                 In section .bss, align 4
      3          CFlightMode *flightMode;
   \                     flightMode:
   \   00000000                      DS8 4
      4          
      5          

   \                                 In section .text, align 2, keep-with-next
      6          void flightMode_Init()
      7          {
   \                     _Z15flightMode_Initv: (+1)
   \   00000000   0xB580             PUSH     {R7,LR}
   \   00000002   0x.... 0x....      LDR.W    R0,??DataTable3_7
   \   00000006   0x7800             LDRB     R0,[R0, #+0]
   \   00000008   0x2800             CMP      R0,#+0
   \   0000000A   0xD107             BNE.N    ??flightMode_Init_0
      8            static CFlightMode flightMode_0;
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   00000010   0x.... 0x....      BL       _ZN11CFlightModeC1Ev
   \   00000014   0x2001             MOVS     R0,#+1
   \   00000016   0x.... 0x....      LDR.W    R1,??DataTable3_7
   \   0000001A   0x7008             STRB     R0,[R1, #+0]
      9            flightMode = &flightMode_0;
   \                     ??flightMode_Init_0: (+1)
   \   0000001C   0x.... 0x....      LDR.W    R0,??DataTable3_8
   \   00000020   0x.... 0x....      LDR.W    R1,??DataTable3_9
   \   00000024   0x6008             STR      R0,[R1, #+0]
     10          }
   \   00000026   0xBD01             POP      {R0,PC}          ;; return

   \                                 In section .bss, align 4
   \                     `flightMode_Init()::flightMode_0`:
   \   00000000                      DS8 156
     11          

   \                                 In section .text, align 2, keep-with-next
     12          void CFlightMode::update()
     13          {
   \                     _ZN11CFlightMode6updateEv: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0x0004             MOVS     R4,R0
     14            if(EVB.LeftKnob > -200 && currentState == 0 && _initLock) //ÖÍ»Ø×´Ì¬ÇÐ»»
   \   00000004   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   00000008   0xF8D0 0x06FC      LDR      R0,[R0, #+1788]
   \   0000000C   0xF110 0x0FC7      CMN      R0,#+199
   \   00000010   0xDB08             BLT.N    ??update_0
   \   00000012   0x6D60             LDR      R0,[R4, #+84]
   \   00000014   0x2800             CMP      R0,#+0
   \   00000016   0xD105             BNE.N    ??update_0
   \   00000018   0x6E20             LDR      R0,[R4, #+96]
   \   0000001A   0x2800             CMP      R0,#+0
   \   0000001C   0xD002             BEQ.N    ??update_0
     15            {
     16              newState = 1;
   \   0000001E   0x2001             MOVS     R0,#+1
   \   00000020   0x65A0             STR      R0,[R4, #+88]
   \   00000022   0xE018             B.N      ??update_1
     17            }
     18            else if(EVB.LeftKnob < -300 && currentState)
   \                     ??update_0: (+1)
   \   00000024   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   00000028   0xF8D0 0x06FC      LDR      R0,[R0, #+1788]
   \   0000002C   0xF510 0x7F96      CMN      R0,#+300
   \   00000030   0xDA05             BGE.N    ??update_2
   \   00000032   0x6D60             LDR      R0,[R4, #+84]
   \   00000034   0x2800             CMP      R0,#+0
   \   00000036   0xD002             BEQ.N    ??update_2
     19            {
     20              newState = 0;
   \   00000038   0x2000             MOVS     R0,#+0
   \   0000003A   0x65A0             STR      R0,[R4, #+88]
   \   0000003C   0xE00B             B.N      ??update_1
     21            }
     22            else if(!currentState && EVB.LeftKnob < -300)
   \                     ??update_2: (+1)
   \   0000003E   0x6D60             LDR      R0,[R4, #+84]
   \   00000040   0x2800             CMP      R0,#+0
   \   00000042   0xD108             BNE.N    ??update_1
   \   00000044   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   00000048   0xF8D0 0x06FC      LDR      R0,[R0, #+1788]
   \   0000004C   0xF510 0x7F96      CMN      R0,#+300
   \   00000050   0xDA01             BGE.N    ??update_1
     23            {
     24              _initLock = 1;
   \   00000052   0x2001             MOVS     R0,#+1
   \   00000054   0x6620             STR      R0,[R4, #+96]
     25            }
     26           
     27          
     28            if(EVB.LeftKnob > 450 && currentState_PositionMode == 0 && _initLock) //ÖÍ»Ø×´Ì¬ÇÐ»»
   \                     ??update_1: (+1)
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   0000005A   0xF8D0 0x06FC      LDR      R0,[R0, #+1788]
   \   0000005E   0xF240 0x11C3      MOVW     R1,#+451
   \   00000062   0x4288             CMP      R0,R1
   \   00000064   0xDB08             BLT.N    ??update_3
   \   00000066   0x6E60             LDR      R0,[R4, #+100]
   \   00000068   0x2800             CMP      R0,#+0
   \   0000006A   0xD105             BNE.N    ??update_3
   \   0000006C   0x6E20             LDR      R0,[R4, #+96]
   \   0000006E   0x2800             CMP      R0,#+0
   \   00000070   0xD002             BEQ.N    ??update_3
     29            {
     30              newState_PositionMode = 1;
   \   00000072   0x2001             MOVS     R0,#+1
   \   00000074   0x66A0             STR      R0,[R4, #+104]
   \   00000076   0xE00A             B.N      ??update_4
     31            }
     32            else if(EVB.LeftKnob < 200 && currentState_PositionMode)
   \                     ??update_3: (+1)
   \   00000078   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   0000007C   0xF8D0 0x06FC      LDR      R0,[R0, #+1788]
   \   00000080   0x28C8             CMP      R0,#+200
   \   00000082   0xDA04             BGE.N    ??update_4
   \   00000084   0x6E60             LDR      R0,[R4, #+100]
   \   00000086   0x2800             CMP      R0,#+0
   \   00000088   0xD001             BEQ.N    ??update_4
     33            {
     34              newState_PositionMode = 0; /////////////Òª¸Ä
   \   0000008A   0x2000             MOVS     R0,#+0
   \   0000008C   0x66A0             STR      R0,[R4, #+104]
     35            }
     36            
     37          //  if(t - flightMode->takeOff.takeOffTime1 > 10000 && t - flightMode->takeOff.takeOffTime1 < 10010)
     38          //  {
     39          //    newState_PositionMode = 1;
     40          //  }
     41          //  if(RemoteHub->valid)
     42          //  {
     43          //    newState = 0;
     44          //    newState_PositionMode = 0;
     45          //  }
     46            
     47             if(newState && !currentState)
   \                     ??update_4: (+1)
   \   0000008E   0x6DA0             LDR      R0,[R4, #+88]
   \   00000090   0x2800             CMP      R0,#+0
   \   00000092   0xD008             BEQ.N    ??update_5
   \   00000094   0x6D60             LDR      R0,[R4, #+84]
   \   00000096   0x2800             CMP      R0,#+0
   \   00000098   0xD105             BNE.N    ??update_5
     48            {
     49              takeOff.state = CTakeOff::waitting;
   \   0000009A   0x2000             MOVS     R0,#+0
   \   0000009C   0xF884 0x0074      STRB     R0,[R4, #+116]
     50              takeOff.altitudeHold_gravity = 0;
   \   000000A0   0x2000             MOVS     R0,#+0
   \   000000A2   0xF8C4 0x0084      STR      R0,[R4, #+132]
     51            }
     52            currentState = newState;
   \                     ??update_5: (+1)
   \   000000A6   0x6DA0             LDR      R0,[R4, #+88]
   \   000000A8   0x6560             STR      R0,[R4, #+84]
     53            
     54            
     55            if(newState_PositionMode && !currentState_PositionMode)
   \   000000AA   0x6EA0             LDR      R0,[R4, #+104]
   \   000000AC   0x2800             CMP      R0,#+0
   \   000000AE   0xD028             BEQ.N    ??update_6
   \   000000B0   0x6E60             LDR      R0,[R4, #+100]
   \   000000B2   0x2800             CMP      R0,#+0
   \   000000B4   0xD125             BNE.N    ??update_6
     56            {
     57              positionX.reset();
   \   000000B6   0x.... 0x....      LDR.W    R0,??DataTable3_11
   \   000000BA   0x.... 0x....      BL       _ZN14PID_Controller5resetEv
     58              positionY.reset();
   \   000000BE   0x.... 0x....      LDR.W    R0,??DataTable3_12
   \   000000C2   0x.... 0x....      BL       _ZN14PID_Controller5resetEv
     59              t0_PositionMode = t;
   \   000000C6   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \   000000CA   0x6800             LDR      R0,[R0, #+0]
   \   000000CC   0x66E0             STR      R0,[R4, #+108]
     60             // command->position.x = 0;
     61             // command->position.y = 0;
     62              command->position.x = GPS->position.x;
   \   000000CE   0x.... 0x....      LDR.W    R0,??DataTable3_14
   \   000000D2   0x6800             LDR      R0,[R0, #+0]
   \   000000D4   0x.... 0x....      LDR.W    R1,??DataTable3_15
   \   000000D8   0x6809             LDR      R1,[R1, #+0]
   \   000000DA   0xF201 0x515C      ADDW     R1,R1,#+1372
   \   000000DE   0x221C             MOVS     R2,#+28
   \   000000E0   0x.... 0x....      BL       __aeabi_memcpy4
     63              command->position.y = GPS->position.y;
   \   000000E4   0x.... 0x....      LDR.W    R0,??DataTable3_14
   \   000000E8   0x6800             LDR      R0,[R0, #+0]
   \   000000EA   0x301C             ADDS     R0,R0,#+28
   \   000000EC   0x.... 0x....      LDR.W    R1,??DataTable3_15
   \   000000F0   0x6809             LDR      R1,[R1, #+0]
   \   000000F2   0xF511 0x61AF      ADDS     R1,R1,#+1400
   \   000000F6   0x221C             MOVS     R2,#+28
   \   000000F8   0x.... 0x....      BL       __aeabi_memcpy4
     64              mission.state = CMission::lockTarget;
   \   000000FC   0x2001             MOVS     R0,#+1
   \   000000FE   0xF884 0x0098      STRB     R0,[R4, #+152]
     65            }
     66            currentState_PositionMode = newState_PositionMode;
   \                     ??update_6: (+1)
   \   00000102   0x6EA0             LDR      R0,[R4, #+104]
   \   00000104   0x6660             STR      R0,[R4, #+100]
     67          
     68            
     69            if(currentState)
   \   00000106   0x6D60             LDR      R0,[R4, #+84]
   \   00000108   0x2800             CMP      R0,#+0
   \   0000010A   0xD008             BEQ.N    ??update_7
     70            {
     71              angleZ.referance = 0;
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable3_16
   \   00000110   0x2100             MOVS     R1,#+0
   \   00000112   0x6001             STR      R1,[R0, #+0]
     72              takeOff.update();
   \   00000114   0xF114 0x0074      ADDS     R0,R4,#+116
   \   00000118   0x.... 0x....      BL       _ZN11CFlightMode8CTakeOff6updateEv
   \   0000011C   0xE009             B.N      ??update_8
     73            }
     74            else
     75            {
     76              ControlOutput_ZChannel = EVB.ConstSpd;
   \                     ??update_7: (+1)
   \   0000011E   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   00000122   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   00000126   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable3_18
   \   0000012E   0xED80 0x0A00      VSTR     S0,[R0, #0]
     77            }
     78            
     79            if(currentState_PositionMode)
   \                     ??update_8: (+1)
   \   00000132   0x6E60             LDR      R0,[R4, #+100]
   \   00000134   0x2800             CMP      R0,#+0
   \   00000136   0xD072             BEQ.N    ??update_9
     80            {
     81              angleZ.referance = 0;
   \   00000138   0x.... 0x....      LDR.W    R0,??DataTable3_16
   \   0000013C   0x2100             MOVS     R1,#+0
   \   0000013E   0x6001             STR      R1,[R0, #+0]
     82              int deltaX = EVB.Pitch;
   \   00000140   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   00000144   0xF8D0 0x06F8      LDR      R0,[R0, #+1784]
     83              if(deltaX > 600) deltaX = 600;
   \   00000148   0xF240 0x2159      MOVW     R1,#+601
   \   0000014C   0x4288             CMP      R0,R1
   \   0000014E   0xDB02             BLT.N    ??update_10
   \   00000150   0xF44F 0x7116      MOV      R1,#+600
   \   00000154   0x0008             MOVS     R0,R1
     84              if(deltaX <-600) deltaX =-600;
   \                     ??update_10: (+1)
   \   00000156   0xF510 0x7F16      CMN      R0,#+600
   \   0000015A   0xDA02             BGE.N    ??update_11
   \   0000015C   0x.... 0x....      LDR.W    R1,??DataTable3_19  ;; 0xfffffda8
   \   00000160   0x0008             MOVS     R0,R1
     85              
     86              if(deltaX > 100)                  //50ËÀÇø
   \                     ??update_11: (+1)
   \   00000162   0x2865             CMP      R0,#+101
   \   00000164   0xDB02             BLT.N    ??update_12
     87              {
     88                deltaX -= 100;
   \   00000166   0x3864             SUBS     R0,R0,#+100
   \   00000168   0x0005             MOVS     R5,R0
   \   0000016A   0xE006             B.N      ??update_13
     89              }
     90              else if(deltaX < -100)
   \                     ??update_12: (+1)
   \   0000016C   0xF110 0x0F64      CMN      R0,#+100
   \   00000170   0xDA02             BGE.N    ??update_14
     91              {
     92                deltaX += 100;
   \   00000172   0x3064             ADDS     R0,R0,#+100
   \   00000174   0x0005             MOVS     R5,R0
   \   00000176   0xE000             B.N      ??update_13
     93              }
     94              else
     95              {
     96                deltaX = 0;
   \                     ??update_14: (+1)
   \   00000178   0x2500             MOVS     R5,#+0
     97              }
     98              
     99              int deltaY = EVB.Roll;
   \                     ??update_13: (+1)
   \   0000017A   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   0000017E   0xF8D0 0x06F4      LDR      R0,[R0, #+1780]
    100              if(deltaY > 600) deltaY = 600;
   \   00000182   0xF240 0x2159      MOVW     R1,#+601
   \   00000186   0x4288             CMP      R0,R1
   \   00000188   0xDB02             BLT.N    ??update_15
   \   0000018A   0xF44F 0x7116      MOV      R1,#+600
   \   0000018E   0x0008             MOVS     R0,R1
    101              if(deltaY <-600) deltaY =-600;
   \                     ??update_15: (+1)
   \   00000190   0xF510 0x7F16      CMN      R0,#+600
   \   00000194   0xDA02             BGE.N    ??update_16
   \   00000196   0x.... 0x....      LDR.W    R1,??DataTable3_19  ;; 0xfffffda8
   \   0000019A   0x0008             MOVS     R0,R1
    102              
    103              if(deltaY > 100)                  //50ËÀÇø
   \                     ??update_16: (+1)
   \   0000019C   0x2865             CMP      R0,#+101
   \   0000019E   0xDB02             BLT.N    ??update_17
    104              {
    105                deltaY -= 100;
   \   000001A0   0x3864             SUBS     R0,R0,#+100
   \   000001A2   0x0006             MOVS     R6,R0
   \   000001A4   0xE006             B.N      ??update_18
    106              }
    107              else if(deltaY < -100)
   \                     ??update_17: (+1)
   \   000001A6   0xF110 0x0F64      CMN      R0,#+100
   \   000001AA   0xDA02             BGE.N    ??update_19
    108              {
    109                deltaY += 100;
   \   000001AC   0x3064             ADDS     R0,R0,#+100
   \   000001AE   0x0006             MOVS     R6,R0
   \   000001B0   0xE000             B.N      ??update_18
    110              }
    111              else
    112              {
    113                deltaY = 0;
   \                     ??update_19: (+1)
   \   000001B2   0x2600             MOVS     R6,#+0
    114              }
    115              command->position.x += deltaX * 0.002 * 0.001;
   \                     ??update_18: (+1)
   \   000001B4   0x0028             MOVS     R0,R5
   \   000001B6   0x.... 0x....      BL       __aeabi_i2d
   \   000001BA   0x.... 0x....      LDR.W    R2,??DataTable3_20  ;; 0xd2f1a9fc
   \   000001BE   0x.... 0x....      LDR.W    R3,??DataTable3_21  ;; 0x3f60624d
   \   000001C2   0x.... 0x....      BL       __aeabi_dmul
   \   000001C6   0x.... 0x....      LDR.W    R2,??DataTable3_20  ;; 0xd2f1a9fc
   \   000001CA   0x.... 0x....      LDR.W    R3,??DataTable3_22  ;; 0x3f50624d
   \   000001CE   0x.... 0x....      BL       __aeabi_dmul
   \   000001D2   0x.... 0x....      BL       __aeabi_d2f
   \   000001D6   0xEE00 0x0A10      VMOV     S0,R0
   \   000001DA   0x.... 0x....      LDR.W    R0,??DataTable3_14
   \   000001DE   0x6800             LDR      R0,[R0, #+0]
   \   000001E0   0x.... 0x....      BL       _ZN17CoordinateElementpLEf
    116              command->position.y += deltaY * 0.002 * 0.001;
   \   000001E4   0x0030             MOVS     R0,R6
   \   000001E6   0x.... 0x....      BL       __aeabi_i2d
   \   000001EA   0x.... 0x....      LDR.W    R2,??DataTable3_20  ;; 0xd2f1a9fc
   \   000001EE   0x.... 0x....      LDR.W    R3,??DataTable3_21  ;; 0x3f60624d
   \   000001F2   0x.... 0x....      BL       __aeabi_dmul
   \   000001F6   0x.... 0x....      LDR.W    R2,??DataTable3_20  ;; 0xd2f1a9fc
   \   000001FA   0x.... 0x....      LDR.W    R3,??DataTable3_22  ;; 0x3f50624d
   \   000001FE   0x.... 0x....      BL       __aeabi_dmul
   \   00000202   0x.... 0x....      BL       __aeabi_d2f
   \   00000206   0xEE00 0x0A10      VMOV     S0,R0
   \   0000020A   0x.... 0x....      LDR.W    R0,??DataTable3_14
   \   0000020E   0x6800             LDR      R0,[R0, #+0]
   \   00000210   0x301C             ADDS     R0,R0,#+28
   \   00000212   0x.... 0x....      BL       _ZN17CoordinateElementpLEf
    117              mission.update();
   \   00000216   0xF114 0x0088      ADDS     R0,R4,#+136
   \   0000021A   0x.... 0x....      BL       _ZN11CFlightMode8CMission6updateEv
    118            }
    119          }
   \                     ??update_9: (+1)
   \                     ??update_20: (+1)
   \   0000021E   0xBD70             POP      {R4-R6,PC}       ;; return
    120          
    121          
    122          

   \                                 In section .text, align 4, keep-with-next
    123          void CFlightMode::CTakeOff::update()
    124          {
   \                     _ZN11CFlightMode8CTakeOff6updateEv: (+1)
   \   00000000   0xE92D 0x43F8      PUSH     {R3-R9,LR}
   \   00000004   0xED2D 0x8B02      VPUSH    {D8}
   \   00000008   0x0006             MOVS     R6,R0
    125            if(state == waitting)
   \   0000000A   0x7830             LDRB     R0,[R6, #+0]
   \   0000000C   0x2800             CMP      R0,#+0
   \   0000000E   0xD14E             BNE.N    ??update_21
    126            {
    127              if(EKF_AHRS->fusion.position.z > 0.1f)
   \   00000010   0x.... 0x....      LDR.W    R0,??DataTable3_23
   \   00000014   0x6800             LDR      R0,[R0, #+0]
   \   00000016   0x30DC             ADDS     R0,R0,#+220
   \   00000018   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   0000001C   0xEDDF 0x0AC1      VLDR.W   S1,??update_22   ;; 0x3dccccce
   \   00000020   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000024   0xEEF1 0xFA10      FMSTAT   
   \   00000028   0xDB01             BLT.N    ??update_23
   \   0000002A   0x2001             MOVS     R0,#+1
   \   0000002C   0xE000             B.N      ??update_24
   \                     ??update_23: (+1)
   \   0000002E   0x2000             MOVS     R0,#+0
   \                     ??update_24: (+1)
   \   00000030   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000032   0x2800             CMP      R0,#+0
   \   00000034   0xD009             BEQ.N    ??update_25
    128              {
    129                altitudeHold_gravity = EVB.ConstSpd;
   \   00000036   0x.... 0x....      LDR.W    R0,??DataTable3_17
   \   0000003A   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   0000003E   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000042   0xED86 0x0A04      VSTR     S0,[R6, #+16]
    130                state = onTheAir;
   \   00000046   0x2002             MOVS     R0,#+2
   \   00000048   0x7030             STRB     R0,[R6, #+0]
    131              }
    132              
    133              if(EVB.ConstSpd > 200 && EVB.ConstSpd < 500)
   \                     ??update_25: (+1)
   \   0000004A   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   0000004E   0xF8D0 0x06E8      LDR      R0,[R0, #+1768]
   \   00000052   0x28C9             CMP      R0,#+201
   \   00000054   0xDB10             BLT.N    ??update_26
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   0000005A   0xF8D0 0x06E8      LDR      R0,[R0, #+1768]
   \   0000005E   0xF5B0 0x7FFA      CMP      R0,#+500
   \   00000062   0xDA09             BGE.N    ??update_26
    134              {
    135                if(!waittingFlag)
   \   00000064   0x7A30             LDRB     R0,[R6, #+8]
   \   00000066   0x2800             CMP      R0,#+0
   \   00000068   0xD10C             BNE.N    ??update_27
    136                {
    137                  waittingFlag = true;
   \   0000006A   0x2001             MOVS     R0,#+1
   \   0000006C   0x7230             STRB     R0,[R6, #+8]
    138                  takeOffTime1 = t;
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \   00000072   0x6800             LDR      R0,[R0, #+0]
   \   00000074   0x60F0             STR      R0,[R6, #+12]
   \   00000076   0xE005             B.N      ??update_27
    139                }
    140              }
    141              else
    142              {
    143                waittingFlag = false;
   \                     ??update_26: (+1)
   \   00000078   0x2000             MOVS     R0,#+0
   \   0000007A   0x7230             STRB     R0,[R6, #+8]
    144                takeOffTime1 = t;
   \   0000007C   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0x60F0             STR      R0,[R6, #+12]
    145              }
    146              
    147              if(t - takeOffTime1 > 1000)
   \                     ??update_27: (+1)
   \   00000084   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \   00000088   0x6801             LDR      R1,[R0, #+0]
   \   0000008A   0x68F0             LDR      R0,[R6, #+12]
   \   0000008C   0x1A09             SUBS     R1,R1,R0
   \   0000008E   0xF240 0x30E9      MOVW     R0,#+1001
   \   00000092   0x4281             CMP      R1,R0
   \   00000094   0xF2C0 0x8191      BLT.W    ??update_28
    148              {
    149                onTheGroundHight = EKF_AHRS->fusion.position.z;
   \   00000098   0x.... 0x....      LDR.W    R0,??DataTable3_23
   \   0000009C   0x6800             LDR      R0,[R0, #+0]
   \   0000009E   0x30DC             ADDS     R0,R0,#+220
   \   000000A0   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   000000A4   0xED86 0x0A01      VSTR     S0,[R6, #+4]
    150                state = takeOffPrepare;
   \   000000A8   0x2001             MOVS     R0,#+1
   \   000000AA   0x7030             STRB     R0,[R6, #+0]
   \   000000AC   0xE185             B.N      ??update_28
    151              }
    152            }
    153            else if(state == takeOffPrepare)
   \                     ??update_21: (+1)
   \   000000AE   0x7830             LDRB     R0,[R6, #+0]
   \   000000B0   0x2801             CMP      R0,#+1
   \   000000B2   0xD170             BNE.N    ??update_29
    154            {
    155              if(EKF_AHRS->fusion.position.z - onTheGroundHight > 0.06f ||
    156                 EKF_AHRS->fusion.vel.z > 0.1f)
   \   000000B4   0x.... 0x....      LDR.W    R0,??DataTable3_23
   \   000000B8   0x6800             LDR      R0,[R0, #+0]
   \   000000BA   0x30DC             ADDS     R0,R0,#+220
   \   000000BC   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   000000C0   0xEDD6 0x0A01      VLDR     S1,[R6, #+4]
   \   000000C4   0xEE30 0x0A60      VSUB.F32 S0,S0,S1
   \   000000C8   0xEDDF 0x....      VLDR.W   S1,??DataTable2  ;; 0x3d75c290
   \   000000CC   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   000000D0   0xEEF1 0xFA10      FMSTAT   
   \   000000D4   0xDA12             BGE.N    ??update_30
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable3_23
   \   000000DA   0x6800             LDR      R0,[R0, #+0]
   \   000000DC   0x3088             ADDS     R0,R0,#+136
   \   000000DE   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   000000E2   0xEDDF 0x0A90      VLDR.W   S1,??update_22   ;; 0x3dccccce
   \   000000E6   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   000000EA   0xEEF1 0xFA10      FMSTAT   
   \   000000EE   0xDA01             BGE.N    ??update_31
   \   000000F0   0x2001             MOVS     R0,#+1
   \   000000F2   0xE000             B.N      ??update_32
   \                     ??update_31: (+1)
   \   000000F4   0x2000             MOVS     R0,#+0
   \                     ??update_32: (+1)
   \   000000F6   0xF090 0x0001      EORS     R0,R0,#0x1
   \   000000FA   0xE000             B.N      ??update_33
   \                     ??update_30: (+1)
   \   000000FC   0x2001             MOVS     R0,#+1
   \                     ??update_33: (+1)
   \   000000FE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000100   0x2800             CMP      R0,#+0
   \   00000102   0xD01D             BEQ.N    ??update_34
    157              {
    158                dis_set_hight = EKF_AHRS->fusion.position.z;
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable3_23
   \   00000108   0x6800             LDR      R0,[R0, #+0]
   \   0000010A   0x30DC             ADDS     R0,R0,#+220
   \   0000010C   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   00000110   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   00000114   0xED80 0x0A00      VSTR     S0,[R0, #0]
    159                positionZ.reset();
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable3_25
   \   0000011C   0x.... 0x....      BL       _ZN14PID_Controller5resetEv
    160                positionZ_vel.reset();    
   \   00000120   0x.... 0x....      LDR.W    R0,??DataTable3_26
   \   00000124   0x.... 0x....      BL       _ZN14PID_Controller5resetEv
    161                takeOffTime1 = t;
   \   00000128   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \   0000012C   0x6800             LDR      R0,[R0, #+0]
   \   0000012E   0x60F0             STR      R0,[R6, #+12]
    162                state = onTheAir;
   \   00000130   0x2002             MOVS     R0,#+2
   \   00000132   0x7030             STRB     R0,[R6, #+0]
    163                flightMode->mission.state = CMission::lockTarget;
   \   00000134   0x2001             MOVS     R0,#+1
   \   00000136   0x.... 0x....      LDR.W    R1,??DataTable3_9
   \   0000013A   0x6809             LDR      R1,[R1, #+0]
   \   0000013C   0xF881 0x0098      STRB     R0,[R1, #+152]
    164              }
    165              
    166              if(altitudeHold_gravity < 500)
   \                     ??update_34: (+1)
   \   00000140   0xED96 0x0A04      VLDR     S0,[R6, #+16]
   \   00000144   0xEDDF 0x....      VLDR.W   S1,??DataTable2_1  ;; 0x43fa0000
   \   00000148   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   0000014C   0xEEF1 0xFA10      FMSTAT   
   \   00000150   0xD508             BPL.N    ??update_35
    167              {
    168                altitudeHold_gravity += 1;
   \   00000152   0xED96 0x0A04      VLDR     S0,[R6, #+16]
   \   00000156   0xEEF7 0x0A00      VMOV.F32 S1,#1.0
   \   0000015A   0xEE30 0x0A20      VADD.F32 S0,S0,S1
   \   0000015E   0xED86 0x0A04      VSTR     S0,[R6, #+16]
   \   00000162   0xE013             B.N      ??update_36
    169              }
    170              else if(altitudeHold_gravity < 750)
   \                     ??update_35: (+1)
   \   00000164   0xED96 0x0A04      VLDR     S0,[R6, #+16]
   \   00000168   0xEDDF 0x....      VLDR.W   S1,??DataTable2_2  ;; 0x443b8000
   \   0000016C   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000170   0xEEF1 0xFA10      FMSTAT   
   \   00000174   0xD50A             BPL.N    ??update_36
    171              {
    172                altitudeHold_gravity += 0.5;
   \   00000176   0x6930             LDR      R0,[R6, #+16]
   \   00000178   0x.... 0x....      BL       __aeabi_f2d
   \   0000017C   0x2200             MOVS     R2,#+0
   \   0000017E   0x.... 0x....      LDR.W    R3,??DataTable3_27  ;; 0x3fe00000
   \   00000182   0x.... 0x....      BL       __aeabi_dadd
   \   00000186   0x.... 0x....      BL       __aeabi_d2f
   \   0000018A   0x6130             STR      R0,[R6, #+16]
    173              }
    174              ControlOutput_ZChannel = altitudeHold_gravity;
   \                     ??update_36: (+1)
   \   0000018C   0x6930             LDR      R0,[R6, #+16]
   \   0000018E   0x.... 0x....      LDR.W    R1,??DataTable3_18
   \   00000192   0x6008             STR      R0,[R1, #+0]
   \   00000194   0xE111             B.N      ??update_28
    175            }
    176            else if(state == onTheAir)
   \                     ??update_29: (+1)
   \   00000196   0x7830             LDRB     R0,[R6, #+0]
   \   00000198   0x2802             CMP      R0,#+2
   \   0000019A   0xF040 0x80D8      BNE.W    ??update_37
    177            {
    178              int deltaHight = 180;
   \   0000019E   0x27B4             MOVS     R7,#+180
    179              int deltaHight_usr = 0;
   \   000001A0   0xED9F 0x....      VLDR.W   S16,??DataTable2_3  ;; 0x0
    180              if(t - takeOffTime1 > 2000)
   \   000001A4   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \   000001A8   0x6801             LDR      R1,[R0, #+0]
   \   000001AA   0x68F0             LDR      R0,[R6, #+12]
   \   000001AC   0x1A09             SUBS     R1,R1,R0
   \   000001AE   0xF240 0x70D1      MOVW     R0,#+2001
   \   000001B2   0x4281             CMP      R1,R0
   \   000001B4   0xDB1C             BLT.N    ??update_38
    181              {
    182                deltaHight_usr = EVB.ConstSpd - 350; //¼õÖÐÎ»
   \   000001B6   0x.... 0x....      LDR.W    R0,??DataTable3_10
   \   000001BA   0xF8D0 0x06E8      LDR      R0,[R0, #+1768]
   \   000001BE   0xF5B0 0x70AF      SUBS     R0,R0,#+350
    183                if(deltaHight_usr > 120)                      //50ËÀÇø
   \   000001C2   0x2879             CMP      R0,#+121
   \   000001C4   0xDB03             BLT.N    ??update_39
    184                {
    185                  deltaHight_usr -= 120;
   \   000001C6   0x3878             SUBS     R0,R0,#+120
   \   000001C8   0xEE00 0x0A10      VMOV     S0,R0
   \   000001CC   0xE008             B.N      ??update_40
    186                }
    187                else if(deltaHight_usr < -120)
   \                     ??update_39: (+1)
   \   000001CE   0xF110 0x0F78      CMN      R0,#+120
   \   000001D2   0xDA03             BGE.N    ??update_41
    188                {
    189                  deltaHight_usr += 120;
   \   000001D4   0x3078             ADDS     R0,R0,#+120
   \   000001D6   0xEE00 0x0A10      VMOV     S0,R0
   \   000001DA   0xE001             B.N      ??update_40
    190                }
    191                else
    192                {
    193                  deltaHight_usr = 0;
   \                     ??update_41: (+1)
   \   000001DC   0xED9F 0x....      VLDR.W   S0,??DataTable2_3  ;; 0x0
    194                }
    195                deltaHight_usr *= 1.5f;
   \                     ??update_40: (+1)
   \   000001E0   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   000001E4   0xEEF7 0x0A08      VMOV.F32 S1,#1.5
   \   000001E8   0xEE20 0x0A20      VMUL.F32 S0,S0,S1
   \   000001EC   0xEEBD 0x8AC0      VCVT.S32.F32 S16,S0
    196              }
    197              
    198          //    if(t - takeOffTime1 > 60000)
    199          //    {
    200          //      dis_set_hight -= 1/1000.0f;
    201          //    }
    202              
    203              if(t - takeOffTime1 > 100)
   \                     ??update_38: (+1)
   \   000001F0   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \   000001F4   0x6801             LDR      R1,[R0, #+0]
   \   000001F6   0x68F0             LDR      R0,[R6, #+12]
   \   000001F8   0x1A09             SUBS     R1,R1,R0
   \   000001FA   0x2965             CMP      R1,#+101
   \   000001FC   0xDB58             BLT.N    ??update_42
    204              {
    205                if(t - takeOffTime1 < 2000)
   \   000001FE   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \   00000202   0x6801             LDR      R1,[R0, #+0]
   \   00000204   0x68F0             LDR      R0,[R6, #+12]
   \   00000206   0x1A09             SUBS     R1,R1,R0
   \   00000208   0xF5B1 0x6FFA      CMP      R1,#+2000
   \   0000020C   0xDA31             BGE.N    ??update_43
    206                {
    207                  dis_set_hight += deltaHight * 0.002 / 500 * (t - takeOffTime1 - 100) / 2000;
   \   0000020E   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   00000212   0x6800             LDR      R0,[R0, #+0]
   \   00000214   0x.... 0x....      BL       __aeabi_f2d
   \   00000218   0x4680             MOV      R8,R0
   \   0000021A   0x4689             MOV      R9,R1
   \   0000021C   0x0038             MOVS     R0,R7
   \   0000021E   0x.... 0x....      BL       __aeabi_i2d
   \   00000222   0x.... 0x....      LDR.W    R2,??DataTable3_20  ;; 0xd2f1a9fc
   \   00000226   0x.... 0x....      LDR.W    R3,??DataTable3_21  ;; 0x3f60624d
   \   0000022A   0x.... 0x....      BL       __aeabi_dmul
   \   0000022E   0x2200             MOVS     R2,#+0
   \   00000230   0x.... 0x....      LDR.W    R3,??DataTable3_28  ;; 0x407f4000
   \   00000234   0x.... 0x....      BL       __aeabi_ddiv
   \   00000238   0x0004             MOVS     R4,R0
   \   0000023A   0x000D             MOVS     R5,R1
   \   0000023C   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \   00000240   0x6800             LDR      R0,[R0, #+0]
   \   00000242   0x68F1             LDR      R1,[R6, #+12]
   \   00000244   0x1A40             SUBS     R0,R0,R1
   \   00000246   0x3864             SUBS     R0,R0,#+100
   \   00000248   0x.... 0x....      BL       __aeabi_i2d
   \   0000024C   0x0022             MOVS     R2,R4
   \   0000024E   0x002B             MOVS     R3,R5
   \   00000250   0x.... 0x....      BL       __aeabi_dmul
   \   00000254   0x2200             MOVS     R2,#+0
   \   00000256   0x.... 0x....      LDR.W    R3,??DataTable3_29  ;; 0x409f4000
   \   0000025A   0x.... 0x....      BL       __aeabi_ddiv
   \   0000025E   0x4642             MOV      R2,R8
   \   00000260   0x464B             MOV      R3,R9
   \   00000262   0x.... 0x....      BL       __aeabi_dadd
   \   00000266   0x.... 0x....      BL       __aeabi_d2f
   \   0000026A   0x.... 0x....      LDR.W    R1,??DataTable3_24
   \   0000026E   0x6008             STR      R0,[R1, #+0]
   \   00000270   0xE01E             B.N      ??update_42
    208                }
    209                else
    210                {
    211                  dis_set_hight += deltaHight_usr * 0.002 / 800;
   \                     ??update_43: (+1)
   \   00000272   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   00000276   0x6800             LDR      R0,[R0, #+0]
   \   00000278   0x.... 0x....      BL       __aeabi_f2d
   \   0000027C   0x0004             MOVS     R4,R0
   \   0000027E   0x000D             MOVS     R5,R1
   \   00000280   0xEE18 0x0A10      VMOV     R0,S16
   \   00000284   0x.... 0x....      BL       __aeabi_i2d
   \   00000288   0x.... 0x....      LDR.W    R2,??DataTable3_20  ;; 0xd2f1a9fc
   \   0000028C   0x.... 0x....      LDR.W    R3,??DataTable3_21  ;; 0x3f60624d
   \   00000290   0x.... 0x....      BL       __aeabi_dmul
   \   00000294   0x2200             MOVS     R2,#+0
   \   00000296   0x.... 0x....      LDR.W    R3,??DataTable3_30  ;; 0x40890000
   \   0000029A   0x.... 0x....      BL       __aeabi_ddiv
   \   0000029E   0x0022             MOVS     R2,R4
   \   000002A0   0x002B             MOVS     R3,R5
   \   000002A2   0x.... 0x....      BL       __aeabi_dadd
   \   000002A6   0x.... 0x....      BL       __aeabi_d2f
   \   000002AA   0x.... 0x....      LDR.W    R1,??DataTable3_24
   \   000002AE   0x6008             STR      R0,[R1, #+0]
    212                }
    213              }
    214              
    215              if(dis_set_hight < -2) 
   \                     ??update_42: (+1)
   \   000002B0   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   000002B4   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   000002B8   0xEEF8 0x0A00      VMOV.F32 S1,#-2.0
   \   000002BC   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   000002C0   0xEEF1 0xFA10      FMSTAT   
   \   000002C4   0xD505             BPL.N    ??update_44
    216              {
    217                dis_set_hight = -2;
   \   000002C6   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   000002CA   0xF05F 0x4140      MOVS     R1,#-1073741824
   \   000002CE   0x6001             STR      R1,[R0, #+0]
   \   000002D0   0xE00F             B.N      ??update_45
    218              }
    219              else if(dis_set_hight > 2) 
   \                     ??update_44: (+1)
   \   000002D2   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   000002D6   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   000002DA   0xEDDF 0x....      VLDR.W   S1,??DataTable2_4  ;; 0x40000001
   \   000002DE   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   000002E2   0xEEF1 0xFA10      FMSTAT   
   \   000002E6   0xDB04             BLT.N    ??update_45
    220              {
    221                dis_set_hight = 2;
   \   000002E8   0x.... 0x....      LDR.W    R0,??DataTable3_24
   \   000002EC   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   000002F0   0x6001             STR      R1,[R0, #+0]
    222              }
    223              
    224              if(EKF_AHRS->fusion.position.z < 0.14 && t - takeOffTime1 > 2000)
   \                     ??update_45: (+1)
   \   000002F2   0x.... 0x....      LDR.W    R0,??DataTable3_23
   \   000002F6   0x6800             LDR      R0,[R0, #+0]
   \   000002F8   0x30DC             ADDS     R0,R0,#+220
   \   000002FA   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   000002FE   0xEDDF 0x....      VLDR.W   S1,??DataTable2_5  ;; 0x3e0f5c29
   \   00000302   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000306   0xEEF1 0xFA10      FMSTAT   
   \   0000030A   0xD50D             BPL.N    ??update_46
   \   0000030C   0x.... 0x....      LDR.W    R0,??DataTable3_13
   \   00000310   0x6801             LDR      R1,[R0, #+0]
   \   00000312   0x68F0             LDR      R0,[R6, #+12]
   \   00000314   0x1A09             SUBS     R1,R1,R0
   \   00000316   0xF240 0x70D1      MOVW     R0,#+2001
   \   0000031A   0x4281             CMP      R1,R0
   \   0000031C   0xDB04             BLT.N    ??update_46
   \   0000031E   0x2001             MOVS     R0,#+1
   \   00000320   0xE003             B.N      ??update_47
   \   00000322   0xBF00             Nop      
   \                     ??update_22:
   \   00000324   0x3DCCCCCE         DC32     0x3dccccce
   \                     ??update_46: (+1)
   \   00000328   0x2000             MOVS     R0,#+0
   \                     ??update_47: (+1)
   \   0000032A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000032C   0x2800             CMP      R0,#+0
   \   0000032E   0xD001             BEQ.N    ??update_48
    225              {
    226                state = landing;
   \   00000330   0x2003             MOVS     R0,#+3
   \   00000332   0x7030             STRB     R0,[R6, #+0]
    227              }
    228              ControlOutput_ZChannel = altitudeHold_gravity + positionZ_vel.output;
   \                     ??update_48: (+1)
   \   00000334   0xED96 0x0A04      VLDR     S0,[R6, #+16]
   \   00000338   0x.... 0x....      LDR.W    R0,??DataTable3_26
   \   0000033C   0xEDD0 0x0A02      VLDR     S1,[R0, #+8]
   \   00000340   0xEE30 0x0A20      VADD.F32 S0,S0,S1
   \   00000344   0x.... 0x....      LDR.W    R0,??DataTable3_18
   \   00000348   0xED80 0x0A00      VSTR     S0,[R0, #0]
   \   0000034C   0xE035             B.N      ??update_28
    229            }
    230            else if(state == landing)
   \                     ??update_37: (+1)
   \   0000034E   0x7830             LDRB     R0,[R6, #+0]
   \   00000350   0x2803             CMP      R0,#+3
   \   00000352   0xD132             BNE.N    ??update_28
    231            {
    232              if(EKF_AHRS->fusion.position.z > 0.2)
   \   00000354   0x.... 0x....      LDR.W    R0,??DataTable3_23
   \   00000358   0x6800             LDR      R0,[R0, #+0]
   \   0000035A   0x30DC             ADDS     R0,R0,#+220
   \   0000035C   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   00000360   0xEDDF 0x....      VLDR.W   S1,??DataTable2_6  ;; 0x3e4ccccd
   \   00000364   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000368   0xEEF1 0xFA10      FMSTAT   
   \   0000036C   0xDB01             BLT.N    ??update_49
   \   0000036E   0x2001             MOVS     R0,#+1
   \   00000370   0xE000             B.N      ??update_50
   \                     ??update_49: (+1)
   \   00000372   0x2000             MOVS     R0,#+0
   \                     ??update_50: (+1)
   \   00000374   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000376   0x2800             CMP      R0,#+0
   \   00000378   0xD001             BEQ.N    ??update_51
    233              {
    234                state = onTheAir;
   \   0000037A   0x2002             MOVS     R0,#+2
   \   0000037C   0x7030             STRB     R0,[R6, #+0]
    235              }
    236              if(altitudeHold_gravity > 0)
   \                     ??update_51: (+1)
   \   0000037E   0xED96 0x0A04      VLDR     S0,[R6, #+16]
   \   00000382   0xEEB5 0x0A40      VCMP.F32 S0,#0.0
   \   00000386   0xEEF1 0xFA10      FMSTAT   
   \   0000038A   0xDD08             BLE.N    ??update_52
    237              {
    238                altitudeHold_gravity -=2;
   \   0000038C   0xED96 0x0A04      VLDR     S0,[R6, #+16]
   \   00000390   0xEEF8 0x0A00      VMOV.F32 S1,#-2.0
   \   00000394   0xEE30 0x0A20      VADD.F32 S0,S0,S1
   \   00000398   0xED86 0x0A04      VSTR     S0,[R6, #+16]
   \   0000039C   0xE00A             B.N      ??update_53
    239              }
    240              else if(altitudeHold_gravity <= 0)
   \                     ??update_52: (+1)
   \   0000039E   0xED96 0x0A04      VLDR     S0,[R6, #+16]
   \   000003A2   0xEEB5 0x0A40      VCMP.F32 S0,#0.0
   \   000003A6   0xEEF1 0xFA10      FMSTAT   
   \   000003AA   0xD803             BHI.N    ??update_53
    241              {
    242                altitudeHold_gravity = 0;
   \   000003AC   0x2000             MOVS     R0,#+0
   \   000003AE   0x6130             STR      R0,[R6, #+16]
    243                state = waitting;
   \   000003B0   0x2000             MOVS     R0,#+0
   \   000003B2   0x7030             STRB     R0,[R6, #+0]
    244              }
    245              ControlOutput_ZChannel = altitudeHold_gravity;
   \                     ??update_53: (+1)
   \   000003B4   0x6930             LDR      R0,[R6, #+16]
   \   000003B6   0x....             LDR.N    R1,??DataTable3_18
   \   000003B8   0x6008             STR      R0,[R1, #+0]
    246            }
    247          }
   \                     ??update_28: (+1)
   \                     ??update_54: (+1)
   \   000003BA   0xECBD 0x8B02      VPOP     {D8}
   \   000003BE   0xE8BD 0x83F1      POP      {R0,R4-R9,PC}    ;; return
    248          
    249          

   \                                 In section .text, align 4, keep-with-next
    250          void CFlightMode::CMission::update()
    251          {
   \                     _ZN11CFlightMode8CMission6updateEv: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xED2D 0x8B02      VPUSH    {D8}
   \   00000006   0x0006             MOVS     R6,R0
    252            if(state == waitting)
   \   00000008   0x7C30             LDRB     R0,[R6, #+16]
   \   0000000A   0x2803             CMP      R0,#+3
   \   0000000C   0xF000 0x80E5      BEQ.W    ??update_55
    253            {
    254              
    255            }
    256            else if(state == lockScreen)
   \   00000010   0x7C30             LDRB     R0,[R6, #+16]
   \   00000012   0x2802             CMP      R0,#+2
   \   00000014   0xF040 0x8094      BNE.W    ??update_56
    257            {
    258              if(command->position.y > 0.02)
   \   00000018   0x....             LDR.N    R0,??DataTable3_14
   \   0000001A   0x6800             LDR      R0,[R0, #+0]
   \   0000001C   0x301C             ADDS     R0,R0,#+28
   \   0000001E   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   00000022   0xEDDF 0x....      VLDR.W   S1,??DataTable3  ;; 0x3ca3d70b
   \   00000026   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   0000002A   0xEEF1 0xFA10      FMSTAT   
   \   0000002E   0xDB01             BLT.N    ??update_57
   \   00000030   0x2001             MOVS     R0,#+1
   \   00000032   0xE000             B.N      ??update_58
   \                     ??update_57: (+1)
   \   00000034   0x2000             MOVS     R0,#+0
   \                     ??update_58: (+1)
   \   00000036   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000038   0x2800             CMP      R0,#+0
   \   0000003A   0xD007             BEQ.N    ??update_59
    259              {
    260                command->position.y -= 1 / 1000.0f;
   \   0000003C   0xED9F 0x....      VLDR.W   S0,??DataTable3_1  ;; 0x3a83126f
   \   00000040   0x....             LDR.N    R0,??DataTable3_14
   \   00000042   0x6800             LDR      R0,[R0, #+0]
   \   00000044   0x301C             ADDS     R0,R0,#+28
   \   00000046   0x.... 0x....      BL       _ZN17CoordinateElementmIEf
   \   0000004A   0xE018             B.N      ??update_60
    261              }
    262              else if(command->position.y < -0.02)
   \                     ??update_59: (+1)
   \   0000004C   0x....             LDR.N    R0,??DataTable3_14
   \   0000004E   0x6800             LDR      R0,[R0, #+0]
   \   00000050   0x301C             ADDS     R0,R0,#+28
   \   00000052   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   00000056   0xEDDF 0x....      VLDR.W   S1,??DataTable3_2  ;; 0xbca3d70a
   \   0000005A   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   0000005E   0xEEF1 0xFA10      FMSTAT   
   \   00000062   0xD501             BPL.N    ??update_61
   \   00000064   0x2001             MOVS     R0,#+1
   \   00000066   0xE000             B.N      ??update_62
   \                     ??update_61: (+1)
   \   00000068   0x2000             MOVS     R0,#+0
   \                     ??update_62: (+1)
   \   0000006A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000006C   0x2800             CMP      R0,#+0
   \   0000006E   0xD006             BEQ.N    ??update_60
    263              {
    264                command->position.y += 1 / 1000.0f;
   \   00000070   0xED9F 0x....      VLDR.W   S0,??DataTable3_1  ;; 0x3a83126f
   \   00000074   0x....             LDR.N    R0,??DataTable3_14
   \   00000076   0x6800             LDR      R0,[R0, #+0]
   \   00000078   0x301C             ADDS     R0,R0,#+28
   \   0000007A   0x.... 0x....      BL       _ZN17CoordinateElementpLEf
    265              }
    266              
    267              if(command->position.x > 0.02)
   \                     ??update_60: (+1)
   \   0000007E   0x....             LDR.N    R0,??DataTable3_14
   \   00000080   0x6800             LDR      R0,[R0, #+0]
   \   00000082   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   00000086   0xEDDF 0x....      VLDR.W   S1,??DataTable3  ;; 0x3ca3d70b
   \   0000008A   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   0000008E   0xEEF1 0xFA10      FMSTAT   
   \   00000092   0xDB01             BLT.N    ??update_63
   \   00000094   0x2001             MOVS     R0,#+1
   \   00000096   0xE000             B.N      ??update_64
   \                     ??update_63: (+1)
   \   00000098   0x2000             MOVS     R0,#+0
   \                     ??update_64: (+1)
   \   0000009A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000009C   0x2800             CMP      R0,#+0
   \   0000009E   0xD007             BEQ.N    ??update_65
    268              {
    269                command->position.y -= 1 / 1000.0f;
   \   000000A0   0xED9F 0x....      VLDR.W   S0,??DataTable3_1  ;; 0x3a83126f
   \   000000A4   0x....             LDR.N    R0,??DataTable3_14
   \   000000A6   0x6800             LDR      R0,[R0, #+0]
   \   000000A8   0x301C             ADDS     R0,R0,#+28
   \   000000AA   0x.... 0x....      BL       _ZN17CoordinateElementmIEf
   \   000000AE   0xE018             B.N      ??update_66
    270              }
    271              else if(command->position.y < -0.02)
   \                     ??update_65: (+1)
   \   000000B0   0x....             LDR.N    R0,??DataTable3_14
   \   000000B2   0x6800             LDR      R0,[R0, #+0]
   \   000000B4   0x301C             ADDS     R0,R0,#+28
   \   000000B6   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   000000BA   0xEDDF 0x....      VLDR.W   S1,??DataTable3_2  ;; 0xbca3d70a
   \   000000BE   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   000000C2   0xEEF1 0xFA10      FMSTAT   
   \   000000C6   0xD501             BPL.N    ??update_67
   \   000000C8   0x2001             MOVS     R0,#+1
   \   000000CA   0xE000             B.N      ??update_68
   \                     ??update_67: (+1)
   \   000000CC   0x2000             MOVS     R0,#+0
   \                     ??update_68: (+1)
   \   000000CE   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000000D0   0x2800             CMP      R0,#+0
   \   000000D2   0xD006             BEQ.N    ??update_66
    272              {
    273                command->position.y += 1 / 1000.0f;
   \   000000D4   0xED9F 0x....      VLDR.W   S0,??DataTable3_1  ;; 0x3a83126f
   \   000000D8   0x....             LDR.N    R0,??DataTable3_14
   \   000000DA   0x6800             LDR      R0,[R0, #+0]
   \   000000DC   0x301C             ADDS     R0,R0,#+28
   \   000000DE   0x.... 0x....      BL       _ZN17CoordinateElementpLEf
    274              }
    275              
    276              if(videoStation->myState == CVideoStation::idel && abs(command->position.y) < 0.2)
   \                     ??update_66: (+1)
   \   000000E2   0x....             LDR.N    R0,??DataTable3_31
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0xF890 0x09EC      LDRB     R0,[R0, #+2540]
   \   000000EA   0x2803             CMP      R0,#+3
   \   000000EC   0xD118             BNE.N    ??update_69
   \   000000EE   0x....             LDR.N    R0,??DataTable3_14
   \   000000F0   0x6800             LDR      R0,[R0, #+0]
   \   000000F2   0x301C             ADDS     R0,R0,#+28
   \   000000F4   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   000000F8   0xEEF0 0x0AC0      VABS.F32 S1,S0
   \   000000FC   0xED9F 0x....      VLDR.W   S2,??DataTable3_3  ;; 0x3e4ccccd
   \   00000100   0xEEF4 0x0A41      VCMP.F32 S1,S2
   \   00000104   0xEEF1 0xFA10      FMSTAT   
   \   00000108   0xD401             BMI.N    ??update_70
   \   0000010A   0x2001             MOVS     R0,#+1
   \   0000010C   0xE000             B.N      ??update_71
   \                     ??update_70: (+1)
   \   0000010E   0x2000             MOVS     R0,#+0
   \                     ??update_71: (+1)
   \   00000110   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000112   0x2800             CMP      R0,#+0
   \   00000114   0xD104             BNE.N    ??update_69
    277              {
    278                videoStation->myState = CVideoStation::searchScreen;
   \   00000116   0x2000             MOVS     R0,#+0
   \   00000118   0x....             LDR.N    R1,??DataTable3_31
   \   0000011A   0x6809             LDR      R1,[R1, #+0]
   \   0000011C   0xF881 0x09EC      STRB     R0,[R1, #+2540]
    279              }
    280              
    281              
    282              if(videoStation->remoteState == CVideoStation::searchTarget)
   \                     ??update_69: (+1)
   \   00000120   0x....             LDR.N    R0,??DataTable3_31
   \   00000122   0x6800             LDR      R0,[R0, #+0]
   \   00000124   0xF890 0x09ED      LDRB     R0,[R0, #+2541]
   \   00000128   0x2801             CMP      R0,#+1
   \   0000012A   0xD156             BNE.N    ??update_55
    283              {
    284                videoStation->myState = CVideoStation::searchTarget;
   \   0000012C   0x2001             MOVS     R0,#+1
   \   0000012E   0x....             LDR.N    R1,??DataTable3_31
   \   00000130   0x6809             LDR      R1,[R1, #+0]
   \   00000132   0xF881 0x09EC      STRB     R0,[R1, #+2540]
    285                state = roam;
   \   00000136   0x2000             MOVS     R0,#+0
   \   00000138   0x7430             STRB     R0,[R6, #+16]
    286                roamState = roamRight;
   \   0000013A   0x2001             MOVS     R0,#+1
   \   0000013C   0x6030             STR      R0,[R6, #+0]
   \   0000013E   0xE04C             B.N      ??update_55
    287              }
    288            }
    289            else if(state == roam)
   \                     ??update_56: (+1)
   \   00000140   0x7C30             LDRB     R0,[R6, #+16]
   \   00000142   0x2800             CMP      R0,#+0
   \   00000144   0xD147             BNE.N    ??update_72
    290            {
    291              if(roamState == roamLeft)
   \   00000146   0x6830             LDR      R0,[R6, #+0]
   \   00000148   0x2800             CMP      R0,#+0
   \   0000014A   0xD11C             BNE.N    ??update_73
    292              {
    293                if(command->position.y > 2) //2ÊÇÇ½Ö½×ó²à
   \   0000014C   0x....             LDR.N    R0,??DataTable3_14
   \   0000014E   0x6800             LDR      R0,[R0, #+0]
   \   00000150   0x301C             ADDS     R0,R0,#+28
   \   00000152   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   00000156   0xEDDF 0x....      VLDR.W   S1,??DataTable3_4  ;; 0x40000001
   \   0000015A   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   0000015E   0xEEF1 0xFA10      FMSTAT   
   \   00000162   0xDB01             BLT.N    ??update_74
   \   00000164   0x2001             MOVS     R0,#+1
   \   00000166   0xE000             B.N      ??update_75
   \                     ??update_74: (+1)
   \   00000168   0x2000             MOVS     R0,#+0
   \                     ??update_75: (+1)
   \   0000016A   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000016C   0x2800             CMP      R0,#+0
   \   0000016E   0xD007             BEQ.N    ??update_76
    294                {
    295                  command->position.y -= 0.5 / 1000.0f;
   \   00000170   0xED9F 0x....      VLDR.W   S0,??DataTable3_5  ;; 0x3a03126f
   \   00000174   0x....             LDR.N    R0,??DataTable3_14
   \   00000176   0x6800             LDR      R0,[R0, #+0]
   \   00000178   0x301C             ADDS     R0,R0,#+28
   \   0000017A   0x.... 0x....      BL       _ZN17CoordinateElementmIEf
   \   0000017E   0xE01E             B.N      ??update_77
    296                }
    297                else
    298                {
    299                  roamState = roamRight;
   \                     ??update_76: (+1)
   \   00000180   0x2001             MOVS     R0,#+1
   \   00000182   0x6030             STR      R0,[R6, #+0]
   \   00000184   0xE01B             B.N      ??update_77
    300                }
    301              }
    302              else
    303              {
    304                if(command->position.y < 10) //10ÊÇÇ½Ö½ÓÒ²à
   \                     ??update_73: (+1)
   \   00000186   0x....             LDR.N    R0,??DataTable3_14
   \   00000188   0x6800             LDR      R0,[R0, #+0]
   \   0000018A   0x301C             ADDS     R0,R0,#+28
   \   0000018C   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   00000190   0xEEF2 0x0A04      VMOV.F32 S1,#10.0
   \   00000194   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000198   0xEEF1 0xFA10      FMSTAT   
   \   0000019C   0xD501             BPL.N    ??update_78
   \   0000019E   0x2001             MOVS     R0,#+1
   \   000001A0   0xE000             B.N      ??update_79
   \                     ??update_78: (+1)
   \   000001A2   0x2000             MOVS     R0,#+0
   \                     ??update_79: (+1)
   \   000001A4   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001A6   0x2800             CMP      R0,#+0
   \   000001A8   0xD007             BEQ.N    ??update_80
    305                {
    306                  command->position.y += 0.5 / 1000.0f;
   \   000001AA   0xED9F 0x....      VLDR.W   S0,??DataTable3_5  ;; 0x3a03126f
   \   000001AE   0x....             LDR.N    R0,??DataTable3_14
   \   000001B0   0x6800             LDR      R0,[R0, #+0]
   \   000001B2   0x301C             ADDS     R0,R0,#+28
   \   000001B4   0x.... 0x....      BL       _ZN17CoordinateElementpLEf
   \   000001B8   0xE001             B.N      ??update_77
    307                }
    308                else
    309                {
    310                  roamState = roamLeft;
   \                     ??update_80: (+1)
   \   000001BA   0x2000             MOVS     R0,#+0
   \   000001BC   0x6030             STR      R0,[R6, #+0]
    311                }
    312              }
    313              
    314              if(videoStation->valid)
   \                     ??update_77: (+1)
   \   000001BE   0x....             LDR.N    R0,??DataTable3_31
   \   000001C0   0x6800             LDR      R0,[R0, #+0]
   \   000001C2   0xF890 0x09E0      LDRB     R0,[R0, #+2528]
   \   000001C6   0x2800             CMP      R0,#+0
   \   000001C8   0xD007             BEQ.N    ??update_55
    315              {
    316                state = lockTarget;
   \   000001CA   0x2001             MOVS     R0,#+1
   \   000001CC   0x7430             STRB     R0,[R6, #+16]
    317                lockTime = t;
   \   000001CE   0x....             LDR.N    R0,??DataTable3_13
   \   000001D0   0x6800             LDR      R0,[R0, #+0]
   \   000001D2   0x60B0             STR      R0,[R6, #+8]
   \   000001D4   0xE001             B.N      ??update_55
    318              }
    319            }
    320            else if(state == lockTarget)
   \                     ??update_72: (+1)
   \   000001D6   0x7C30             LDRB     R0,[R6, #+16]
   \   000001D8   0x2801             CMP      R0,#+1
    321            {
    322              if(videoStation->valid)
    323              {
    324           //     dis_set_hight -= videoStation->position.z / 5000.0f;
    325           //     command->position.y -= videoStation->position.y / 5000.0f;
    326              }
    327              
    328              if(t - videoStation->invalidTime > 300)
    329              {
    330            //    state = roam;
    331              }
    332              
    333          //    if(t - flightMode->takeOff.takeOffTime1 > 10000 && t - flightMode->takeOff.takeOffTime1 < 20000)
    334          //    {
    335          //      command->position.x = 0;
    336          //      command->position.y = 10;
    337          //    }
    338          //    
    339          //    if(t - flightMode->takeOff.takeOffTime1 > 20000 && t - flightMode->takeOff.takeOffTime1 < 60000)
    340          //    {
    341          //      command->position.x = 0;
    342          //      command->position.y = 0;
    343          //    }
    344          //    
    345          //    if(t - flightMode->takeOff.takeOffTime1 > 60000 && t - flightMode->takeOff.takeOffTime1 < 100000)
    346          //    {
    347          //      command->position.x = -3;
    348          //      command->position.y = 2;
    349          //    }
    350              
    351              if(waterGun->done)
    352              {
    353          //      state = lockScreen;
    354          //      waterGun->done = false;
    355          //      videoStation->myState = CVideoStation::idel;
    356          //      videoStation->idelTime = t;
    357              }
    358            }
    359            
    360            
    361            if(command->position.x > Navigation->DesiredDistanceToScreen - 0.5) 
   \                     ??update_55: (+1)
   \   000001DA   0x....             LDR.N    R0,??DataTable3_14
   \   000001DC   0x6800             LDR      R0,[R0, #+0]
   \   000001DE   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   000001E2   0xEE10 0x0A10      VMOV     R0,S0
   \   000001E6   0x.... 0x....      BL       __aeabi_f2d
   \   000001EA   0x0002             MOVS     R2,R0
   \   000001EC   0x000B             MOVS     R3,R1
   \   000001EE   0x0014             MOVS     R4,R2
   \   000001F0   0x001D             MOVS     R5,R3
   \   000001F2   0x....             LDR.N    R0,??DataTable3_32
   \   000001F4   0x6800             LDR      R0,[R0, #+0]
   \   000001F6   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \   000001FA   0x.... 0x....      BL       __aeabi_f2d
   \   000001FE   0x2200             MOVS     R2,#+0
   \   00000200   0x....             LDR.N    R3,??DataTable3_33  ;; 0xbfe00000
   \   00000202   0x.... 0x....      BL       __aeabi_dadd
   \   00000206   0x0022             MOVS     R2,R4
   \   00000208   0x002B             MOVS     R3,R5
   \   0000020A   0x.... 0x....      BL       __aeabi_cdcmple
   \   0000020E   0xD201             BCS.N    ??update_81
   \   00000210   0x2001             MOVS     R0,#+1
   \   00000212   0xE000             B.N      ??update_82
   \                     ??update_81: (+1)
   \   00000214   0x2000             MOVS     R0,#+0
   \                     ??update_82: (+1)
   \   00000216   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000218   0x2800             CMP      R0,#+0
   \   0000021A   0xD121             BNE.N    ??update_83
    362            {
    363           //---   command->position.x = Navigation->DesiredDistanceToScreen - 0.5;
    364            }
    365            else if(command->position.x < -(Navigation->DesiredDistanceToScreen + 0.5)) //×îÔ¶Á½Ã×
   \   0000021C   0x....             LDR.N    R0,??DataTable3_14
   \   0000021E   0x6800             LDR      R0,[R0, #+0]
   \   00000220   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   00000224   0xEEB0 0x8A40      VMOV.F32 S16,S0
   \   00000228   0x....             LDR.N    R0,??DataTable3_32
   \   0000022A   0x6800             LDR      R0,[R0, #+0]
   \   0000022C   0xF8D0 0x00A8      LDR      R0,[R0, #+168]
   \   00000230   0x.... 0x....      BL       __aeabi_f2d
   \   00000234   0x2200             MOVS     R2,#+0
   \   00000236   0x....             LDR.N    R3,??DataTable3_27  ;; 0x3fe00000
   \   00000238   0x.... 0x....      BL       __aeabi_dadd
   \   0000023C   0xF091 0x4100      EORS     R1,R1,#0x80000000
   \   00000240   0x0002             MOVS     R2,R0
   \   00000242   0x000B             MOVS     R3,R1
   \   00000244   0x0014             MOVS     R4,R2
   \   00000246   0x001D             MOVS     R5,R3
   \   00000248   0xEE18 0x0A10      VMOV     R0,S16
   \   0000024C   0x.... 0x....      BL       __aeabi_f2d
   \   00000250   0x0022             MOVS     R2,R4
   \   00000252   0x002B             MOVS     R3,R5
   \   00000254   0x.... 0x....      BL       __aeabi_cdcmple
   \   00000258   0xD201             BCS.N    ??update_84
   \   0000025A   0x2001             MOVS     R0,#+1
   \   0000025C   0xE000             B.N      ??update_83
   \                     ??update_84: (+1)
   \   0000025E   0x2000             MOVS     R0,#+0
    366            {
    367           //---   command->position.x = -(Navigation->DesiredDistanceToScreen + 0.5);
    368            }
    369            
    370            if(command->position.y > 15) 
   \                     ??update_83: (+1)
   \   00000260   0x....             LDR.N    R0,??DataTable3_14
   \   00000262   0x6800             LDR      R0,[R0, #+0]
   \   00000264   0x301C             ADDS     R0,R0,#+28
   \   00000266   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   0000026A   0xEDDF 0x....      VLDR.W   S1,??DataTable3_6  ;; 0x41700001
   \   0000026E   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000272   0xEEF1 0xFA10      FMSTAT   
   \   00000276   0xDB01             BLT.N    ??update_85
   \   00000278   0x2001             MOVS     R0,#+1
   \   0000027A   0xE000             B.N      ??update_86
   \                     ??update_85: (+1)
   \   0000027C   0x2000             MOVS     R0,#+0
   \                     ??update_86: (+1)
   \   0000027E   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000280   0x2800             CMP      R0,#+0
   \   00000282   0xD10E             BNE.N    ??update_87
    371            {
    372            //---  command->position.y = 15;
    373            }
    374            else if(command->position.y < -1) 
   \   00000284   0x....             LDR.N    R0,??DataTable3_14
   \   00000286   0x6800             LDR      R0,[R0, #+0]
   \   00000288   0x301C             ADDS     R0,R0,#+28
   \   0000028A   0x.... 0x....      BL       _ZN17CoordinateElementcvfEv
   \   0000028E   0xEEFF 0x0A00      VMOV.F32 S1,#-1.0
   \   00000292   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   00000296   0xEEF1 0xFA10      FMSTAT   
   \   0000029A   0xD501             BPL.N    ??update_88
   \   0000029C   0x2001             MOVS     R0,#+1
   \   0000029E   0xE000             B.N      ??update_87
   \                     ??update_88: (+1)
   \   000002A0   0x2000             MOVS     R0,#+0
    375            {
    376            //---  command->position.y = -1;
    377            }
    378              
    379          }
   \                     ??update_87: (+1)
   \                     ??update_89: (+1)
   \   000002A2   0xECBD 0x8B02      VPOP     {D8}
   \   000002A6   0xBD70             POP      {R4-R6,PC}       ;; return

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2:
   \   00000000   0x3D75C290         DC32     0x3d75c290

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_1:
   \   00000000   0x43FA0000         DC32     0x43fa0000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_2:
   \   00000000   0x443B8000         DC32     0x443b8000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_3:
   \   00000000   0x00000000         DC32     0x0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_4:
   \   00000000   0x40000001         DC32     0x40000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_5:
   \   00000000   0x3E0F5C29         DC32     0x3e0f5c29

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable2_6:
   \   00000000   0x3E4CCCCD         DC32     0x3e4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3:
   \   00000000   0x3CA3D70B         DC32     0x3ca3d70b

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_1:
   \   00000000   0x3A83126F         DC32     0x3a83126f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_2:
   \   00000000   0xBCA3D70A         DC32     0xbca3d70a

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_3:
   \   00000000   0x3E4CCCCD         DC32     0x3e4ccccd

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_4:
   \   00000000   0x40000001         DC32     0x40000001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_5:
   \   00000000   0x3A03126F         DC32     0x3a03126f

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_6:
   \   00000000   0x41700001         DC32     0x41700001

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_7:
   \   00000000   0x........         DC32     `flightMode_Init()::static guard for flightMode_0`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_8:
   \   00000000   0x........         DC32     `flightMode_Init()::flightMode_0`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_9:
   \   00000000   0x........         DC32     flightMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_10:
   \   00000000   0x........         DC32     EVB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_11:
   \   00000000   0x........         DC32     positionX

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_12:
   \   00000000   0x........         DC32     positionY

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_13:
   \   00000000   0x........         DC32     t

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_14:
   \   00000000   0x........         DC32     command

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_15:
   \   00000000   0x........         DC32     GPS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_16:
   \   00000000   0x........         DC32     angleZ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_17:
   \   00000000   0x........         DC32     EVB+0x6E8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_18:
   \   00000000   0x........         DC32     ControlOutput_ZChannel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_19:
   \   00000000   0xFFFFFDA8         DC32     0xfffffda8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_20:
   \   00000000   0xD2F1A9FC         DC32     0xd2f1a9fc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_21:
   \   00000000   0x3F60624D         DC32     0x3f60624d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_22:
   \   00000000   0x3F50624D         DC32     0x3f50624d

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_23:
   \   00000000   0x........         DC32     EKF_AHRS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_24:
   \   00000000   0x........         DC32     dis_set_hight

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_25:
   \   00000000   0x........         DC32     positionZ

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_26:
   \   00000000   0x........         DC32     positionZ_vel

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_27:
   \   00000000   0x3FE00000         DC32     0x3fe00000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_28:
   \   00000000   0x407F4000         DC32     0x407f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_29:
   \   00000000   0x409F4000         DC32     0x409f4000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_30:
   \   00000000   0x40890000         DC32     0x40890000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_31:
   \   00000000   0x........         DC32     videoStation

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_32:
   \   00000000   0x........         DC32     Navigation

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable3_33:
   \   00000000   0xBFE00000         DC32     0xbfe00000

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   CFlightMode::CFlightMode()
         8   -> Coordinate::Coordinate()
      24   CFlightMode::CMission::update()
        24   -> CoordinateElement::operator float()
        24   -> CoordinateElement::operator+=(float)
        24   -> CoordinateElement::operator-=(float)
        24   -> __aeabi_dadd
        24   -> __aeabi_f2d
        24 __aeabi_cdcmple
      40   CFlightMode::CTakeOff::update()
        40   -> CoordinateElement::operator float()
        40   -> PID_Controller::reset()
        40   -> __aeabi_d2f
        40   -> __aeabi_dadd
        40   -> __aeabi_ddiv
        40   -> __aeabi_dmul
        40   -> __aeabi_f2d
        40   -> __aeabi_i2d
      16   CFlightMode::update()
        16   -> CFlightMode::CMission::update()
        16   -> CFlightMode::CTakeOff::update()
        16   -> CoordinateElement::operator+=(float)
        16   -> PID_Controller::reset()
        16   -> __aeabi_d2f
        16   -> __aeabi_dmul
        16   -> __aeabi_i2d
        16   -> __aeabi_memcpy4
       8   Coordinate::Coordinate()
         8   -> CoordinateElement::CoordinateElement()
       0   CoordinateElement::CoordinateElement()
       8   flightMode_Init()
         8   -> CFlightMode::CFlightMode()


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable2
       4  ??DataTable2_1
       4  ??DataTable2_2
       4  ??DataTable2_3
       4  ??DataTable2_4
       4  ??DataTable2_5
       4  ??DataTable2_6
       4  ??DataTable3
       4  ??DataTable3_1
       4  ??DataTable3_10
       4  ??DataTable3_11
       4  ??DataTable3_12
       4  ??DataTable3_13
       4  ??DataTable3_14
       4  ??DataTable3_15
       4  ??DataTable3_16
       4  ??DataTable3_17
       4  ??DataTable3_18
       4  ??DataTable3_19
       4  ??DataTable3_2
       4  ??DataTable3_20
       4  ??DataTable3_21
       4  ??DataTable3_22
       4  ??DataTable3_23
       4  ??DataTable3_24
       4  ??DataTable3_25
       4  ??DataTable3_26
       4  ??DataTable3_27
       4  ??DataTable3_28
       4  ??DataTable3_29
       4  ??DataTable3_3
       4  ??DataTable3_30
       4  ??DataTable3_31
       4  ??DataTable3_32
       4  ??DataTable3_33
       4  ??DataTable3_4
       4  ??DataTable3_5
       4  ??DataTable3_6
       4  ??DataTable3_7
       4  ??DataTable3_8
       4  ??DataTable3_9
      14  CFlightMode::CFlightMode()
     680  CFlightMode::CMission::update()
     962  CFlightMode::CTakeOff::update()
     544  CFlightMode::update()
      30  Coordinate::Coordinate()
      28  CoordinateElement::CoordinateElement()
       4  flightMode
     156  flightMode_0
      40  flightMode_Init()
      25  -- Other

 
    24 bytes in section .ARM.exidx
   161 bytes in section .bss
 2 462 bytes in section .text
 
 2 390 bytes of CODE  memory (+ 72 bytes shared)
    24 bytes of CONST memory
   161 bytes of DATA  memory

Errors: none
Warnings: none
