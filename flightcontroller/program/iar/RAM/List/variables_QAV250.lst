###############################################################################
#
# IAR ANSI C/C++ Compiler V8.11.2.13589/W32 for ARM       18/Jun/2018  19:48:04
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\variables_QAV250.c
#    Command line =  
#        -f C:\Users\XSK199~1\AppData\Local\Temp\EW36E9.tmp
#        (C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\variables_QAV250.c
#        -D K60 -D USE_K60F15 -D ARM_MATH_CM4 -D __FPU_PRESENT=1 -D
#        __FPU_USED=1 -lCN
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\List
#        -lB
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\List
#        -o
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config
#        D:\iar\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\app\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\app\Sensor\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\CPU\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\common\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\HW\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\DEV\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\FatFs\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\FatFs\option\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\common\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\driver\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\descriptor\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\class\
#        -On --c++ -I D:\iar\arm\CMSIS\Include\ -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\List\variables_QAV250.lst
#    Object file  =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\Obj\variables_QAV250.o
#
###############################################################################

C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\variables_QAV250.c
      1          #include "variables.h"
      2          #if THIS_PLANE == QAV250
      3          int t = 0, tTrans = 0;
      4          int temp_111;
      5          
      6          AHRS_TypeDef AHRS, AHRS0;
      7          float dis_set_hight;
      8          float ControlOutput_ZChannel;
      9          void PID_Controller::reset()
     10          {
     11            this->I = 0;
     12          }
     13          
     14          PID_Controller 
     15          gyroX = 
     16          {
     17            .Kp0  = 30, 
     18            .Ki0  = 7,
     19            .Kd0  = 280, 
     20            .fuzzy = 0,
     21            .D_smoother = 0.2,
     22            .smoother = 0,
     23            .integralLimit = 200000,
     24            .outputLimit  = 500,
     25            .OffsetBound  = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
     26            .OffsetDBound = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
     27            .KpStrategy   = {  
     28                              {  90,   90,  90,  90,  90,  90,  90  },
     29                              {  90,   90,  90,  90,  90,  90,  90  },
     30                              {  90,   90,  90,  90,  90,  90,  90  },
     31                              {  90,   90,  90,  90,  90,  90,  90  },
     32                              {  90,   90,  90,  90,  90,  90,  90  },
     33                              {  90,   90,  90,  90,  99,  90,  90  },
     34                              {  90,   90,  90,  90,  90,  90,  90  }
     35                            },
     36          
     37            .KiStrategy   = {
     38                              {  90,   90,  90,  90,  90,  90,  90  },
     39                              {  90,   90,  90,  90,  90,  90,  90  },
     40                              {  90,   90,  90,  90,  90,  90,  90  },
     41                              {  90,   90,  90,  90,  90,  90,  90  },
     42                              {  90,   90,  90,  90,  90,  90,  90  },
     43                              {  90,   90,  90,  90,  99,  90,  90  },
     44                              {  90,   90,  90,  90,  90,  90,  90  }
     45                            },
     46          
     47            .KdStrategy   = {
     48                              {  90,   90,  90,  90,  90,  90,  90  },
     49                              {  90,   90,  90,  90,  90,  90,  90  },
     50                              {  90,   90,  90,  90,  90,  90,  90  },
     51                              {  90,   90,  90,  90,  90,  90,  90  },
     52                              {  90,   90,  90,  90,  90,  90,  90  },
     53                              {  90,   90,  90,  90,  99,  90,  90  },
     54                              {  90,   90,  90,  90,  90,  90,  90  }
     55                            }
     56          }, 
     57          
     58          
     59          gyroY = 
     60          {
     61            .Kp0  = 35,
     62            .Ki0  = 7,
     63            .Kd0  = 400,
     64            .fuzzy = 0,
     65            .D_smoother = 0.2,
     66            .smoother = 0,
     67            .integralLimit = 200000,
     68            .outputLimit  = 500,
     69            .OffsetBound  = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
     70            .OffsetDBound = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
     71            .KpStrategy   = {  
     72                              {  90,   90,  90,  90,  90,  90,  90  },
     73                              {  90,   90,  90,  90,  90,  90,  90  },
     74                              {  90,   90,  90,  90,  90,  90,  90  },
     75                              {  90,   90,  90,  90,  90,  90,  90  },
     76                              {  90,   90,  90,  90,  90,  90,  90  },
     77                              {  90,   90,  90,  90,  99,  90,  90  },
     78                              {  90,   90,  90,  90,  90,  90,  90  }
     79                            },
     80          
     81            .KiStrategy   = {
     82                              {  90,   90,  90,  90,  90,  90,  90  },
     83                              {  90,   90,  90,  90,  90,  90,  90  },
     84                              {  90,   90,  90,  90,  90,  90,  90  },
     85                              {  90,   90,  90,  90,  90,  90,  90  },
     86                              {  90,   90,  90,  90,  90,  90,  90  },
     87                              {  90,   90,  90,  90,  99,  90,  90  },
     88                              {  90,   90,  90,  90,  90,  90,  90  }
     89                            },
     90          
     91            .KdStrategy   = {
     92                              {  90,   90,  90,  90,  90,  90,  90  },
     93                              {  90,   90,  90,  90,  90,  90,  90  },
     94                              {  90,   90,  90,  90,  90,  90,  90  },
     95                              {  90,   90,  90,  90,  90,  90,  90  },
     96                              {  90,   90,  90,  90,  90,  90,  90  },
     97                              {  90,   90,  90,  90,  99,  90,  90  },
     98                              {  90,   90,  90,  90,  90,  90,  90  }
     99                            }
    100          },
    101          
    102          
    103          gyroZ = 
    104          {
    105            .Kp0  = 1000, 
    106            .Ki0  = 0,
    107            .Kd0  = 200, 
    108            .fuzzy = 0,
    109            .D_smoother = 0.2,
    110            .smoother = 0,
    111            .integralLimit = 200000,
    112            .outputLimit  = 200,
    113            .OffsetBound  = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    114            .OffsetDBound = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    115            .KpStrategy   = {  
    116                              {  90,   90,  90,  90,  90,  90,  90  },
    117                              {  90,   90,  90,  90,  90,  90,  90  },
    118                              {  90,   90,  90,  90,  90,  90,  90  },
    119                              {  90,   90,  90,  90,  90,  90,  90  },
    120                              {  90,   90,  90,  90,  90,  90,  90  },
    121                              {  90,   90,  90,  90,  99,  90,  90  },
    122                              {  90,   90,  90,  90,  90,  90,  90  }
    123                            },
    124          
    125            .KiStrategy   = {
    126                              {  90,   90,  90,  90,  90,  90,  90  },
    127                              {  90,   90,  90,  90,  90,  90,  90  },
    128                              {  90,   90,  90,  90,  90,  90,  90  },
    129                              {  90,   90,  90,  90,  90,  90,  90  },
    130                              {  90,   90,  90,  90,  90,  90,  90  },
    131                              {  90,   90,  90,  90,  99,  90,  90  },
    132                              {  90,   90,  90,  90,  90,  90,  90  }
    133                            },
    134          
    135            .KdStrategy   = {
    136                              {  90,   90,  90,  90,  90,  90,  90  },
    137                              {  90,   90,  90,  90,  90,  90,  90  },
    138                              {  90,   90,  90,  90,  90,  90,  90  },
    139                              {  90,   90,  90,  90,  90,  90,  90  },
    140                              {  90,   90,  90,  90,  90,  90,  90  },
    141                              {  90,   90,  90,  90,  99,  90,  90  },
    142                              {  90,   90,  90,  90,  90,  90,  90  }
    143                            }
    144          },
    145          
    146          /*****************************************************************************/
    147          /*****************************************************************************/
    148          
    149          angleX = 
    150          {
    151            .Kp0  = 9000,
    152            .Ki0  = 500,
    153            .Kd0  = 1200,
    154            .fuzzy = 0,
    155            .smoother = 0,
    156            .integralLimit = 4000,
    157            .outputLimit  = 1500,
    158            .OffsetBound  = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    159            .OffsetDBound = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    160            .KpStrategy   = {  
    161                              {  90,   90,  90,  90,  90,  90,  90  },
    162                              {  90,   90,  90,  90,  90,  90,  90  },
    163                              {  90,   90,  90,  90,  90,  90,  90  },
    164                              {  90,   90,  90,  90,  90,  90,  90  },
    165                              {  90,   90,  90,  90,  90,  90,  90  },
    166                              {  90,   90,  90,  90,  99,  90,  90  },
    167                              {  90,   90,  90,  90,  90,  90,  90  }
    168                            },
    169          
    170            .KiStrategy   = {
    171                              {  90,   90,  90,  90,  90,  90,  90  },
    172                              {  90,   90,  90,  90,  90,  90,  90  },
    173                              {  90,   90,  90,  90,  90,  90,  90  },
    174                              {  90,   90,  90,  90,  90,  90,  90  },
    175                              {  90,   90,  90,  90,  90,  90,  90  },
    176                              {  90,   90,  90,  90,  99,  90,  90  },
    177                              {  90,   90,  90,  90,  90,  90,  90  }
    178                            },
    179          
    180            .KdStrategy   = {
    181                              {  90,   90,  90,  90,  90,  90,  90  },
    182                              {  90,   90,  90,  90,  90,  90,  90  },
    183                              {  90,   90,  90,  90,  90,  90,  90  },
    184                              {  90,   90,  90,  90,  90,  90,  90  },
    185                              {  90,   90,  90,  90,  90,  90,  90  },
    186                              {  90,   90,  90,  90,  99,  90,  90  },
    187                              {  90,   90,  90,  90,  90,  90,  90  }
    188                            }
    189          },
    190          
    191          
    192          
    193          angleY = 
    194          {
    195            .Kp0  = 12000,
    196            .Ki0  = 500,
    197            .Kd0  = 1200,
    198            .fuzzy = 0,
    199            .smoother = 0,
    200            .integralLimit = 4000,
    201            .outputLimit  = 1500,
    202            .OffsetBound  = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    203            .OffsetDBound = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    204            .KpStrategy   = {
    205                              {  90,   90,  90,  90,  90,  90,  90  },
    206                              {  90,   90,  90,  90,  90,  90,  90  },
    207                              {  90,   90,  90,  90,  90,  90,  90  },
    208                              {  90,   90,  90,  90,  90,  90,  90  },
    209                              {  90,   90,  90,  90,  90,  90,  90  },
    210                              {  90,   90,  90,  90,  99,  90,  90  },
    211                              {  90,   90,  90,  90,  90,  90,  90  }
    212                            },
    213          
    214            .KiStrategy   = {
    215                              {  90,   90,  90,  90,  90,  90,  90  },
    216                              {  90,   90,  90,  90,  90,  90,  90  },
    217                              {  90,   90,  90,  90,  90,  90,  90  },
    218                              {  90,   90,  90,  90,  90,  90,  90  },
    219                              {  90,   90,  90,  90,  90,  90,  90  },
    220                              {  90,   90,  90,  90,  99,  90,  90  },
    221                              {  90,   90,  90,  90,  90,  90,  90  }
    222                            },
    223          
    224            .KdStrategy   = {
    225                              {  90,   90,  90,  90,  90,  90,  90  },
    226                              {  90,   90,  90,  90,  90,  90,  90  },
    227                              {  90,   90,  90,  90,  90,  90,  90  },
    228                              {  90,   90,  90,  90,  90,  90,  90  },
    229                              {  90,   90,  90,  90,  90,  90,  90  },
    230                              {  90,   90,  90,  90,  99,  90,  90  },
    231                              {  90,   90,  90,  90,  90,  90,  90  }
    232                            }
    233          },
    234          
    235          angleZ = 
    236          {
    237            .Kp0  = 1800,
    238            .Ki0  = 0,
    239            .Kd0  = 200,
    240            .fuzzy = 0,
    241            .smoother = 0,
    242            .integralLimit = 4000,
    243            .outputLimit  = 150,
    244            .OffsetBound  = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    245            .OffsetDBound = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    246            .KpStrategy   = {
    247                              {  90,   90,  90,  90,  90,  90,  90  },
    248                              {  90,   90,  90,  90,  90,  90,  90  },
    249                              {  90,   90,  90,  90,  90,  90,  90  },
    250                              {  90,   90,  90,  90,  90,  90,  90  },
    251                              {  90,   90,  90,  90,  90,  90,  90  },
    252                              {  90,   90,  90,  90,  99,  90,  90  },
    253                              {  90,   90,  90,  90,  90,  90,  90  }
    254                            },
    255          
    256            .KiStrategy   = {
    257                              {  90,   90,  90,  90,  90,  90,  90  },
    258                              {  90,   90,  90,  90,  90,  90,  90  },
    259                              {  90,   90,  90,  90,  90,  90,  90  },
    260                              {  90,   90,  90,  90,  90,  90,  90  },
    261                              {  90,   90,  90,  90,  90,  90,  90  },
    262                              {  90,   90,  90,  90,  99,  90,  90  },
    263                              {  90,   90,  90,  90,  90,  90,  90  }
    264                            },
    265          
    266            .KdStrategy   = {
    267                              {  90,   90,  90,  90,  90,  90,  90  },
    268                              {  90,   90,  90,  90,  90,  90,  90  },
    269                              {  90,   90,  90,  90,  90,  90,  90  },
    270                              {  90,   90,  90,  90,  90,  90,  90  },
    271                              {  90,   90,  90,  90,  90,  90,  90  },
    272                              {  90,   90,  90,  90,  99,  90,  90  },
    273                              {  90,   90,  90,  90,  90,  90,  90  }
    274                            }
    275          },
    276          
    277          /*****************************************************************************/
    278          /*****************************************************************************/
    279          
    280          positionZ = 
    281          {
    282            .Kp0  = 150000,
    283            .Ki0  = 200,
    284            .Kd0  = 500000,
    285            .fuzzy = 0,
    286            .D_smoother = 0.99,
    287            .smoother = 0,
    288            .integralLimit = 400000,
    289            .outputLimit  = 500,
    290            .OffsetBound  = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    291            .OffsetDBound = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    292            .KpStrategy   = {
    293                              {  90,   90,  90,  90,  90,  90,  90  },
    294                              {  90,   90,  90,  90,  90,  90,  90  },
    295                              {  90,   90,  90,  90,  90,  90,  90  },
    296                              {  90,   90,  90,  90,  90,  90,  90  },
    297                              {  90,   90,  90,  90,  90,  90,  90  },
    298                              {  90,   90,  90,  90,  99,  90,  90  },
    299                              {  90,   90,  90,  90,  90,  90,  90  }
    300                            },
    301          
    302            .KiStrategy   = {
    303                              {  90,   90,  90,  90,  90,  90,  90  },
    304                              {  90,   90,  90,  90,  90,  90,  90  },
    305                              {  90,   90,  90,  90,  90,  90,  90  },
    306                              {  90,   90,  90,  90,  90,  90,  90  },
    307                              {  90,   90,  90,  90,  90,  90,  90  },
    308                              {  90,   90,  90,  90,  99,  90,  90  },
    309                              {  90,   90,  90,  90,  90,  90,  90  }
    310                            },
    311          
    312            .KdStrategy   = {
    313                              {  90,   90,  90,  90,  90,  90,  90  },
    314                              {  90,   90,  90,  90,  90,  90,  90  },
    315                              {  90,   90,  90,  90,  90,  90,  90  },
    316                              {  90,   90,  90,  90,  90,  90,  90  },
    317                              {  90,   90,  90,  90,  90,  90,  90  },
    318                              {  90,   90,  90,  90,  99,  90,  90  },
    319                              {  90,   90,  90,  90,  90,  90,  90  }
    320                            }
    321          },
    322          positionX = 
    323          {
    324            .Kp0  = 150000,
    325            .Ki0  = 200,
    326            .Kd0  = 500000,
    327            .fuzzy = 0,
    328            .D_smoother = 0.99,
    329            .smoother = 0,
    330            .integralLimit = 400000,
    331            .outputLimit  = 500,
    332            .OffsetBound  = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    333            .OffsetDBound = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    334            .KpStrategy   = {
    335                              {  90,   90,  90,  90,  90,  90,  90  },
    336                              {  90,   90,  90,  90,  90,  90,  90  },
    337                              {  90,   90,  90,  90,  90,  90,  90  },
    338                              {  90,   90,  90,  90,  90,  90,  90  },
    339                              {  90,   90,  90,  90,  90,  90,  90  },
    340                              {  90,   90,  90,  90,  99,  90,  90  },
    341                              {  90,   90,  90,  90,  90,  90,  90  }
    342                            },
    343          
    344            .KiStrategy   = {
    345                              {  90,   90,  90,  90,  90,  90,  90  },
    346                              {  90,   90,  90,  90,  90,  90,  90  },
    347                              {  90,   90,  90,  90,  90,  90,  90  },
    348                              {  90,   90,  90,  90,  90,  90,  90  },
    349                              {  90,   90,  90,  90,  90,  90,  90  },
    350                              {  90,   90,  90,  90,  99,  90,  90  },
    351                              {  90,   90,  90,  90,  90,  90,  90  }
    352                            },
    353          
    354            .KdStrategy   = {
    355                              {  90,   90,  90,  90,  90,  90,  90  },
    356                              {  90,   90,  90,  90,  90,  90,  90  },
    357                              {  90,   90,  90,  90,  90,  90,  90  },
    358                              {  90,   90,  90,  90,  90,  90,  90  },
    359                              {  90,   90,  90,  90,  90,  90,  90  },
    360                              {  90,   90,  90,  90,  99,  90,  90  },
    361                              {  90,   90,  90,  90,  90,  90,  90  }
    362                            }
    363          },
    364          positionY = 
    365          {
    366            .Kp0  = 150000,
    367            .Ki0  = 200,
    368            .Kd0  = 500000,
    369            .fuzzy = 0,
    370            .D_smoother = 0.99,
    371            .smoother = 0,
    372            .integralLimit = 400000,
    373            .outputLimit  = 500,
    374            .OffsetBound  = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    375            .OffsetDBound = {-420 , -300 , -180 , 0 , 180 , 300 , 420},
    376            .KpStrategy   = {
    377                              {  90,   90,  90,  90,  90,  90,  90  },
    378                              {  90,   90,  90,  90,  90,  90,  90  },
    379                              {  90,   90,  90,  90,  90,  90,  90  },
    380                              {  90,   90,  90,  90,  90,  90,  90  },
    381                              {  90,   90,  90,  90,  90,  90,  90  },
    382                              {  90,   90,  90,  90,  99,  90,  90  },
    383                              {  90,   90,  90,  90,  90,  90,  90  }
    384                            },
    385          
    386            .KiStrategy   = {
    387                              {  90,   90,  90,  90,  90,  90,  90  },
    388                              {  90,   90,  90,  90,  90,  90,  90  },
    389                              {  90,   90,  90,  90,  90,  90,  90  },
    390                              {  90,   90,  90,  90,  90,  90,  90  },
    391                              {  90,   90,  90,  90,  90,  90,  90  },
    392                              {  90,   90,  90,  90,  99,  90,  90  },
    393                              {  90,   90,  90,  90,  90,  90,  90  }
    394                            },
    395          
    396            .KdStrategy   = {
    397                              {  90,   90,  90,  90,  90,  90,  90  },
    398                              {  90,   90,  90,  90,  90,  90,  90  },
    399                              {  90,   90,  90,  90,  90,  90,  90  },
    400                              {  90,   90,  90,  90,  90,  90,  90  },
    401                              {  90,   90,  90,  90,  90,  90,  90  },
    402                              {  90,   90,  90,  90,  99,  90,  90  },
    403                              {  90,   90,  90,  90,  90,  90,  90  }
    404                            }
    405          }
    406          ;
    407          /*****************************************************************************/
    408          /*****************************************************************************/
    409          
    410          
    411          Rotor controlOutput;
    412          
    413          void findDifference::getresult(float data, float min, float max, int num)
    414          {
    415            this->min = max;
    416            this->max = min;
    417            
    418            for(int i=0; i<num; i++)
    419            {
    420              this->H[i] = this->H[i+1];
    421              
    422              if(this->H[i] < this->min) this->min = this->H[i];
    423              if(this->H[i] > this->max) this->max = this->H[i];
    424            }
    425            this->diff = this->max - this->min;
    426            this->H[num] = data;
    427          }
    428          
    429          findDifference Diffa;
    430          
    431          
    432          float roll, pitch, yaw;
    433          float roll1, pitch1, yaw1, yaw2;
    434          
    435          
    436          int powerVoltage_12;
    437          int updateErrorCnt = 0;
    438          
    439          int OffsetMembership_X[NUM]={0};
    440          int OffsetDMembership_X[NUM]={0};
    441          
    442          int OffsetMembership_Y[NUM]={0};
    443          int OffsetDMembership_Y[NUM]={0};
    444          
    445          
    446          int   rowTX_X = 0;
    447          int   columnTX_X = 0;
    448          int   Kp_X = 80,  Ki_X = 80,  Kd_X = 80;
    449          int   Kp_X0 = 20, Ki_X0 = 50, Kd_X0 = 5;
    450          
    451          
    452          int   rowTX_Y = 0;
    453          int   columnTX_Y = 0;
    454          int   Kp_Y = 80,  Ki_Y = 80,  Kd_Y = 80;
    455          int   Kp_Y0 = 20, Ki_Y0 = 50, Kd_Y0 = 5;
    456          
    457          
    458          int fanIniSpd = 4250;
    459          
    460          int roror1, roror2, roror3, roror4;
    461          #endif


 

 


Errors: none
Warnings: none
