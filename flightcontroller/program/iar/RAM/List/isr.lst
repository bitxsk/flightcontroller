###############################################################################
#
# IAR ANSI C/C++ Compiler V8.11.2.13589/W32 for ARM       18/Jun/2018  19:47:58
# Copyright 1999-2017 IAR Systems AB.
#
#    Cpu mode     =  thumb
#    Endian       =  little
#    Source file  =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\isr.c
#    Command line =  
#        -f C:\Users\XSK199~1\AppData\Local\Temp\EW1F1B.tmp
#        (C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\isr.c
#        -D K60 -D USE_K60F15 -D ARM_MATH_CM4 -D __FPU_PRESENT=1 -D
#        __FPU_USED=1 -lCN
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\List
#        -lB
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\List
#        -o
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\Obj
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M4 -e --fpu=VFPv4_sp --dlib_config
#        D:\iar\arm\INC\c\DLib_Config_Normal.h -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\app\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\app\Sensor\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\CPU\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\common\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\HW\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\DEV\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\LPLD\FUNC\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\uCOS-II\Ports\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\uCOS-II\Source\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\FatFs\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\FatFs\option\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\common\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\driver\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\descriptor\
#        -I
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\..\lib\USB\class\
#        -On --c++ -I D:\iar\arm\CMSIS\Include\ -D ARM_MATH_CM4)
#    Locale       =  C
#    List file    =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\List\isr.lst
#    Object file  =  
#        C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\iar\RAM\Obj\isr.o
#
###############################################################################

C:\Users\xsk19940910\Desktop\flightController-1\flightController-1\program\app\isr.c
      1          #include "isr.h"

   \                                 In section .text, align 2
   \   __interwork __softfp void GPIO_Output_b(GPIO_Type *, uint32, uint8)
   \                     GPIO_Output_b: (+1)
   \   00000000   0xB410             PUSH     {R4}
   \   00000002   0x6804             LDR      R4,[R0, #+0]
   \   00000004   0x2301             MOVS     R3,#+1
   \   00000006   0x408B             LSLS     R3,R3,R1
   \   00000008   0x439C             BICS     R4,R4,R3
   \   0000000A   0xB2D2             UXTB     R2,R2            ;; ZeroExt  R2,R2,#+24,#+24
   \   0000000C   0xFA12 0xF301      LSLS     R3,R2,R1
   \   00000010   0x431C             ORRS     R4,R3,R4
   \   00000012   0x6004             STR      R4,[R0, #+0]
   \   00000014   0xBC10             POP      {R4}
   \   00000016   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4, keep-with-next
   \   static __interwork __vfp arm_status arm_sqrt_f32(float, float *)
   \                     _ZN26_INTERNAL_5_isr_c_48df0d0212arm_sqrt_f32EfPf: (+1)
   \   00000000   0x0001             MOVS     R1,R0
   \   00000002   0xEEB5 0x0A40      VCMP.F32 S0,#0.0
   \   00000006   0xEEF1 0xFA10      FMSTAT   
   \   0000000A   0xDB05             BLT.N    ??arm_sqrt_f32_0
   \   0000000C   0xEEF1 0x0AC0      VSQRT.F32 S1,S0
   \   00000010   0xEDC1 0x0A00      VSTR     S1,[R1, #0]
   \   00000014   0x2000             MOVS     R0,#+0
   \   00000016   0xE003             B.N      ??arm_sqrt_f32_1
   \                     ??arm_sqrt_f32_0: (+1)
   \   00000018   0x2000             MOVS     R0,#+0
   \   0000001A   0x6008             STR      R0,[R1, #+0]
   \   0000001C   0xF05F 0x30FF      MOVS     R0,#-1
   \                     ??arm_sqrt_f32_1: (+1)
   \   00000020   0x4770             BX       LR               ;; return

   \                                 In section .text, align 4
   \   __code __interwork __softfp MPU6000_Type::MPU6000_Type()
   \                     _ZN12MPU6000_TypeC1Ev: (+1)
   \   00000000   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000004   0x61C1             STR      R1,[R0, #+28]
   \   00000006   0x4905             LDR.N    R1,??MPU6000_Type_0  ;; 0x44fa0000
   \   00000008   0x6201             STR      R1,[R0, #+32]
   \   0000000A   0x4905             LDR.N    R1,??MPU6000_Type_0+0x4  ;; 0x42700000
   \   0000000C   0x6241             STR      R1,[R0, #+36]
   \   0000000E   0xF05F 0x4180      MOVS     R1,#+1073741824
   \   00000012   0x6281             STR      R1,[R0, #+40]
   \   00000014   0x4903             LDR.N    R1,??MPU6000_Type_0+0x8  ;; 0x43480000
   \   00000016   0x62C1             STR      R1,[R0, #+44]
   \   00000018   0x4770             BX       LR               ;; return
   \   0000001A   0xBF00             Nop      
   \                     ??MPU6000_Type_0:
   \   0000001C   0x44FA0000         DC32     0x44fa0000
   \   00000020   0x42700000         DC32     0x42700000
   \   00000024   0x43480000         DC32     0x43480000
      2          
      3          

   \                                 In section .bss, align 4
      4          int error_6000, error_evb;
   \                     error_6000:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     error_evb:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
      5          float yaw_init,yaw_init1;
   \                     yaw_init:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     yaw_init1:
   \   00000000                      DS8 4
      6          
      7          

   \                                 In section .text, align 4, keep-with-next
      8          void pit_isr(void)
      9          {
   \                     _Z7pit_isrv: (+1)
   \   00000000   0xB570             PUSH     {R4-R6,LR}
   \   00000002   0xED2D 0x8B04      VPUSH    {D8-D9}
   \   00000006   0xB0B6             SUB      SP,SP,#+216
     10            GPIO_Output_b(PTB,23,0);
   \   00000008   0x2200             MOVS     R2,#+0
   \   0000000A   0x2117             MOVS     R1,#+23
   \   0000000C   0x.... 0x....      LDR.W    R0,??DataTable1  ;; 0x400ff040
   \   00000010   0x.... 0x....      BL       GPIO_Output_b
     11            t+=2;
   \   00000014   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   00000018   0x6800             LDR      R0,[R0, #+0]
   \   0000001A   0x1C80             ADDS     R0,R0,#+2
   \   0000001C   0x.... 0x....      LDR.W    R1,??DataTable1_1
   \   00000020   0x6008             STR      R0,[R1, #+0]
     12            
     13            EVB_TimerUpdate();
   \   00000022   0x.... 0x....      BL       _Z15EVB_TimerUpdatev
     14            RemoteHub->updateUart();
   \   00000026   0x.... 0x....      LDR.W    R0,??DataTable1_2
   \   0000002A   0x6800             LDR      R0,[R0, #+0]
   \   0000002C   0x.... 0x....      BL       _ZN10CRemoteHub10updateUartEv
     15            int n;
     16            n=DMA0->TCD[DMA_CH1].DADDR-(uint32)&(EVB.RXD[0]);
   \   00000030   0x.... 0x....      LDR.W    R0,??DataTable1_3  ;; 0x40009030
   \   00000034   0x6800             LDR      R0,[R0, #+0]
   \   00000036   0x.... 0x....      LDR.W    R6,??DataTable1_4
   \   0000003A   0x1B86             SUBS     R6,R0,R6
     17            if(n>sizeof(EVB.RXD)-100||n<0)
   \   0000003C   0xF240 0x5079      MOVW     R0,#+1401
   \   00000040   0x4286             CMP      R6,R0
   \   00000042   0xD201             BCS.N    ??pit_isr_0
   \   00000044   0x2E00             CMP      R6,#+0
   \   00000046   0xD50B             BPL.N    ??pit_isr_1
     18            {
     19              error_evb++;
   \                     ??pit_isr_0: (+1)
   \   00000048   0x.... 0x....      LDR.W    R0,??DataTable1_5
   \   0000004C   0x6800             LDR      R0,[R0, #+0]
   \   0000004E   0x1C40             ADDS     R0,R0,#+1
   \   00000050   0x.... 0x....      LDR.W    R1,??DataTable1_5
   \   00000054   0x6008             STR      R0,[R1, #+0]
     20              DMA0->TCD[DMA_CH1].DADDR=(uint32)&(EVB.RXD[0]);
   \   00000056   0x.... 0x....      LDR.W    R0,??DataTable1_4
   \   0000005A   0x.... 0x....      LDR.W    R1,??DataTable1_3  ;; 0x40009030
   \   0000005E   0x6008             STR      R0,[R1, #+0]
     21            }
     22            if(t > 2)
   \                     ??pit_isr_1: (+1)
   \   00000060   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   00000064   0x6800             LDR      R0,[R0, #+0]
   \   00000066   0x2803             CMP      R0,#+3
   \   00000068   0xDB01             BLT.N    ??pit_isr_2
     23            {
     24              EVB_DMA_Receive();
   \   0000006A   0x.... 0x....      BL       _Z15EVB_DMA_Receivev
     25            }
     26            if(EVB.Pitch>=0)
   \                     ??pit_isr_2: (+1)
   \   0000006E   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   00000072   0xF8D0 0x06F8      LDR      R0,[R0, #+1784]
   \   00000076   0x2800             CMP      R0,#+0
   \   00000078   0xD406             BMI.N    ??pit_isr_3
     27            {
     28              GPIO_Output_b(PTB,21,0);
   \   0000007A   0x2200             MOVS     R2,#+0
   \   0000007C   0x2115             MOVS     R1,#+21
   \   0000007E   0x.... 0x....      LDR.W    R0,??DataTable1  ;; 0x400ff040
   \   00000082   0x.... 0x....      BL       GPIO_Output_b
   \   00000086   0xE005             B.N      ??pit_isr_4
     29            }
     30            else
     31            {
     32              GPIO_Output_b(PTB,21,1);
   \                     ??pit_isr_3: (+1)
   \   00000088   0x2201             MOVS     R2,#+1
   \   0000008A   0x2115             MOVS     R1,#+21
   \   0000008C   0x.... 0x....      LDR.W    R0,??DataTable1  ;; 0x400ff040
   \   00000090   0x.... 0x....      BL       GPIO_Output_b
     33            }
     34            
     35            if(t - EVB.LastPackageTime > 200 && EVB.MotorSwitch || !MPU6000.valid)
   \                     ??pit_isr_4: (+1)
   \   00000094   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   00000098   0x6801             LDR      R1,[R0, #+0]
   \   0000009A   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   0000009E   0x68C0             LDR      R0,[R0, #+12]
   \   000000A0   0x1A09             SUBS     R1,R1,R0
   \   000000A2   0x29C9             CMP      R1,#+201
   \   000000A4   0xDB05             BLT.N    ??pit_isr_5
   \   000000A6   0x.... 0x....      LDR.W    R0,??DataTable1_6
   \   000000AA   0xF8D0 0x0700      LDR      R0,[R0, #+1792]
   \   000000AE   0x2800             CMP      R0,#+0
   \   000000B0   0xD104             BNE.N    ??pit_isr_6
   \                     ??pit_isr_5: (+1)
   \   000000B2   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   000000B6   0x7B80             LDRB     R0,[R0, #+14]
   \   000000B8   0x2800             CMP      R0,#+0
   \   000000BA   0xD106             BNE.N    ??pit_isr_7
     36            {
     37              GPIO_Output_b(PTA,16,1); //BUZZ
   \                     ??pit_isr_6: (+1)
   \   000000BC   0x2201             MOVS     R2,#+1
   \   000000BE   0x2110             MOVS     R1,#+16
   \   000000C0   0x.... 0x....      LDR.W    R0,??DataTable1_8  ;; 0x400ff000
   \   000000C4   0x.... 0x....      BL       GPIO_Output_b
   \   000000C8   0xE005             B.N      ??pit_isr_8
     38            }
     39            else
     40            {
     41              GPIO_Output_b(PTA,16,0);
   \                     ??pit_isr_7: (+1)
   \   000000CA   0x2200             MOVS     R2,#+0
   \   000000CC   0x2110             MOVS     R1,#+16
   \   000000CE   0x.... 0x....      LDR.W    R0,??DataTable1_8  ;; 0x400ff000
   \   000000D2   0x.... 0x....      BL       GPIO_Output_b
     42            }
     43            //  NvidiaTX1->updateUart();
     44            //  NvidiaTX1->PIT_isr();
     45            
     46          #if DEVICE_VIDEOSTATION == SENSOR_USED
     47            videoStation->updateUart();
   \                     ??pit_isr_8: (+1)
   \   000000D6   0x.... 0x....      LDR.W    R0,??DataTable1_9
   \   000000DA   0x6800             LDR      R0,[R0, #+0]
   \   000000DC   0x.... 0x....      BL       _ZN13CVideoStation10updateUartEv
     48          #endif
     49            
     50          #if SENSOR_GPS == SENSOR_USED
     51            GPS->updateUart();
   \   000000E0   0x.... 0x....      LDR.W    R0,??DataTable1_10
   \   000000E4   0x6800             LDR      R0,[R0, #+0]
   \   000000E6   0x.... 0x....      BL       _ZN4CGPS10updateUartEv
     52          #else
     53            UWB->update();
     54          #endif
     55            
     56            if(t % 6 == 2)
   \   000000EA   0x2006             MOVS     R0,#+6
   \   000000EC   0x.... 0x....      LDR.W    R1,??DataTable1_1
   \   000000F0   0x6809             LDR      R1,[R1, #+0]
   \   000000F2   0x.... 0x....      LDR.W    R2,??DataTable1_1
   \   000000F6   0x6812             LDR      R2,[R2, #+0]
   \   000000F8   0xFB92 0xF2F0      SDIV     R2,R2,R0
   \   000000FC   0xFB00 0x1012      MLS      R0,R0,R2,R1
   \   00000100   0x2802             CMP      R0,#+2
   \   00000102   0xD003             BEQ.N    ??pit_isr_9
     57            {
     58              
     59            }
     60            else if(t % 6 == 0)
   \   00000104   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   00000108   0x6800             LDR      R0,[R0, #+0]
   \   0000010A   0x2006             MOVS     R0,#+6
     61            {
     62              //  LidarLite->update(); //激光测距不可更新太快 可开启连续测量模式？
     63              //  LidarLite->measure();
     64            }
     65            
     66          #if SENSOR_ULTRASOUND_UART == SENSOR_USED
     67            UltrasoundUART->update();
   \                     ??pit_isr_9: (+1)
   \   0000010C   0x.... 0x....      LDR.W    R0,??DataTable1_11
   \   00000110   0x6800             LDR      R0,[R0, #+0]
   \   00000112   0x.... 0x....      BL       _ZN15CUltrasoundUART6updateEv
     68          #endif
     69            
     70            powerVoltage_12  = ADC_Get(ADC1,AD13);
   \   00000116   0x210D             MOVS     R1,#+13
   \   00000118   0x.... 0x....      LDR.W    R0,??DataTable1_12  ;; 0x400bb000
   \   0000011C   0x.... 0x....      BL       ADC_Get
   \   00000120   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000122   0x.... 0x....      LDR.W    R1,??DataTable1_13
   \   00000126   0x6008             STR      R0,[R1, #+0]
     71            powerVoltage_5   = ADC_Get(ADC1,AD12);
   \   00000128   0x210C             MOVS     R1,#+12
   \   0000012A   0x.... 0x....      LDR.W    R0,??DataTable1_12  ;; 0x400bb000
   \   0000012E   0x.... 0x....      BL       ADC_Get
   \   00000132   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000134   0x.... 0x....      LDR.W    R1,??DataTable1_14
   \   00000138   0x6008             STR      R0,[R1, #+0]
     72            powerVoltage_3v3 = ADC_Get(ADC1,AD11);
   \   0000013A   0x210B             MOVS     R1,#+11
   \   0000013C   0x.... 0x....      LDR.W    R0,??DataTable1_12  ;; 0x400bb000
   \   00000140   0x.... 0x....      BL       ADC_Get
   \   00000144   0xB280             UXTH     R0,R0            ;; ZeroExt  R0,R0,#+16,#+16
   \   00000146   0x.... 0x....      LDR.W    R1,??DataTable1_15
   \   0000014A   0x6008             STR      R0,[R1, #+0]
     73            
     74            MPU6000_DAQ();
   \   0000014C   0x.... 0x....      BL       _Z11MPU6000_DAQv
     75            hmc5983_StartMea(); 
   \   00000150   0x.... 0x....      BL       _Z16hmc5983_StartMeav
     76            hmc5983_DAQ();
   \   00000154   0x.... 0x....      BL       _Z11hmc5983_DAQv
     77            //pix4Flow->update();
     78            
     79            if(MPU6000_Raw.isNormal() && (MPU6000_Raw - MPU6000).isInRange(0.5f, 30.0f, 5.1f) //这里不太对！
     80               || MPU6000.continuousError >= 3) //正常为accel0.4，gyro10 
   \   00000158   0x.... 0x....      LDR.W    R0,??DataTable1_16
   \   0000015C   0x.... 0x....      BL       _ZN12MPU6000_Type8isNormalEv
   \   00000160   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000162   0x2800             CMP      R0,#+0
   \   00000164   0xD01D             BEQ.N    ??pit_isr_10
   \   00000166   0x.... 0x....      LDR.W    R2,??DataTable1_7
   \   0000016A   0x.... 0x....      LDR.W    R1,??DataTable1_16
   \   0000016E   0xA806             ADD      R0,SP,#+24
   \   00000170   0x.... 0x....      BL       _ZN12MPU6000_TypemiERS_
   \   00000174   0xA81E             ADD      R0,SP,#+120
   \   00000176   0xA906             ADD      R1,SP,#+24
   \   00000178   0x2260             MOVS     R2,#+96
   \   0000017A   0x.... 0x....      BL       __aeabi_memcpy4
   \   0000017E   0xED9F 0x1A5F      VLDR.W   S2,??pit_isr_11  ;; 0x40a33333
   \   00000182   0xEEF3 0x0A0E      VMOV.F32 S1,#30.0
   \   00000186   0xEEB6 0x0A00      VMOV.F32 S0,#0.5
   \   0000018A   0xA81E             ADD      R0,SP,#+120
   \   0000018C   0x.... 0x....      BL       _ZN12MPU6000_Type9isInRangeEfff
   \   00000190   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   00000192   0x2800             CMP      R0,#+0
   \   00000194   0xD001             BEQ.N    ??pit_isr_12
   \   00000196   0x2001             MOVS     R0,#+1
   \   00000198   0xE000             B.N      ??pit_isr_13
   \                     ??pit_isr_12: (+1)
   \   0000019A   0x2000             MOVS     R0,#+0
   \                     ??pit_isr_13: (+1)
   \   0000019C   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   0000019E   0x2800             CMP      R0,#+0
   \   000001A0   0xD104             BNE.N    ??pit_isr_14
   \                     ??pit_isr_10: (+1)
   \   000001A2   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   000001A6   0x6DC0             LDR      R0,[R0, #+92]
   \   000001A8   0x2803             CMP      R0,#+3
   \   000001AA   0xDB01             BLT.N    ??pit_isr_15
   \                     ??pit_isr_14: (+1)
   \   000001AC   0x2001             MOVS     R0,#+1
   \   000001AE   0xE000             B.N      ??pit_isr_16
   \                     ??pit_isr_15: (+1)
   \   000001B0   0x2000             MOVS     R0,#+0
   \                     ??pit_isr_16: (+1)
   \   000001B2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000001B4   0x2800             CMP      R0,#+0
   \   000001B6   0xD06D             BEQ.N    ??pit_isr_17
     81            {
     82              MPU6000 = MPU6000_Raw;
   \   000001B8   0x.... 0x....      LDR.W    R1,??DataTable1_16
   \   000001BC   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   000001C0   0x.... 0x....      BL       _ZN12MPU6000_TypeaSERS_
     83              MPU6000.continuousError = 0;
   \   000001C4   0x2000             MOVS     R0,#+0
   \   000001C6   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   000001CA   0x65C8             STR      R0,[R1, #+92]
     84              MPU6000.gyro_x_f = MPU6000.gyro_x_f * 0.7 + MPU6000.gyro_x * 0.3;
   \   000001CC   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   000001D0   0x6C80             LDR      R0,[R0, #+72]
   \   000001D2   0x.... 0x....      BL       __aeabi_f2d
   \   000001D6   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   000001DA   0x.... 0x....      LDR.W    R3,??DataTable1_17  ;; 0x3fe66666
   \   000001DE   0x.... 0x....      BL       __aeabi_dmul
   \   000001E2   0x0004             MOVS     R4,R0
   \   000001E4   0x000D             MOVS     R5,R1
   \   000001E6   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   000001EA   0x6BC0             LDR      R0,[R0, #+60]
   \   000001EC   0x.... 0x....      BL       __aeabi_f2d
   \   000001F0   0xF05F 0x3233      MOVS     R2,#+858993459
   \   000001F4   0x.... 0x....      LDR.W    R3,??DataTable1_18  ;; 0x3fd33333
   \   000001F8   0x.... 0x....      BL       __aeabi_dmul
   \   000001FC   0x0022             MOVS     R2,R4
   \   000001FE   0x002B             MOVS     R3,R5
   \   00000200   0x.... 0x....      BL       __aeabi_dadd
   \   00000204   0x.... 0x....      BL       __aeabi_d2f
   \   00000208   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   0000020C   0x6488             STR      R0,[R1, #+72]
     85              MPU6000.gyro_y_f = MPU6000.gyro_y_f * 0.7 + MPU6000.gyro_y * 0.3;
   \   0000020E   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   00000212   0x6CC0             LDR      R0,[R0, #+76]
   \   00000214   0x.... 0x....      BL       __aeabi_f2d
   \   00000218   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   0000021C   0x.... 0x....      LDR.W    R3,??DataTable1_17  ;; 0x3fe66666
   \   00000220   0x.... 0x....      BL       __aeabi_dmul
   \   00000224   0x0004             MOVS     R4,R0
   \   00000226   0x000D             MOVS     R5,R1
   \   00000228   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   0000022C   0x6C00             LDR      R0,[R0, #+64]
   \   0000022E   0x.... 0x....      BL       __aeabi_f2d
   \   00000232   0xF05F 0x3233      MOVS     R2,#+858993459
   \   00000236   0x.... 0x....      LDR.W    R3,??DataTable1_18  ;; 0x3fd33333
   \   0000023A   0x.... 0x....      BL       __aeabi_dmul
   \   0000023E   0x0022             MOVS     R2,R4
   \   00000240   0x002B             MOVS     R3,R5
   \   00000242   0x.... 0x....      BL       __aeabi_dadd
   \   00000246   0x.... 0x....      BL       __aeabi_d2f
   \   0000024A   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   0000024E   0x64C8             STR      R0,[R1, #+76]
     86              MPU6000.gyro_z_f = MPU6000.gyro_z_f * 0.7 + MPU6000.gyro_z * 0.3;
   \   00000250   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   00000254   0x6D00             LDR      R0,[R0, #+80]
   \   00000256   0x.... 0x....      BL       __aeabi_f2d
   \   0000025A   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   0000025E   0x.... 0x....      LDR.W    R3,??DataTable1_17  ;; 0x3fe66666
   \   00000262   0x.... 0x....      BL       __aeabi_dmul
   \   00000266   0x0004             MOVS     R4,R0
   \   00000268   0x000D             MOVS     R5,R1
   \   0000026A   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   0000026E   0x6C40             LDR      R0,[R0, #+68]
   \   00000270   0x.... 0x....      BL       __aeabi_f2d
   \   00000274   0xF05F 0x3233      MOVS     R2,#+858993459
   \   00000278   0x.... 0x....      LDR.W    R3,??DataTable1_18  ;; 0x3fd33333
   \   0000027C   0x.... 0x....      BL       __aeabi_dmul
   \   00000280   0x0022             MOVS     R2,R4
   \   00000282   0x002B             MOVS     R3,R5
   \   00000284   0x.... 0x....      BL       __aeabi_dadd
   \   00000288   0x.... 0x....      BL       __aeabi_d2f
   \   0000028C   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   00000290   0x6508             STR      R0,[R1, #+80]
   \   00000292   0xE003             B.N      ??pit_isr_18
     87            }
     88            else
     89            {
     90              MPU6000.error();
   \                     ??pit_isr_17: (+1)
   \   00000294   0x.... 0x....      LDR.W    R0,??DataTable1_7
   \   00000298   0x.... 0x....      BL       _ZN12MPU6000_Type5errorEv
   \                     ??pit_isr_18: (+1)
   \   0000029C   0x.... 0x....      LDR.W    R0,??DataTable1_19
   \   000002A0   0x7800             LDRB     R0,[R0, #+0]
   \   000002A2   0x2800             CMP      R0,#+0
   \   000002A4   0xD107             BNE.N    ??pit_isr_19
     91            }
     92            
     93            static int MPU6000_changeTime;
     94            static MPU6000_Type MPU6000_0;
   \   000002A6   0x.... 0x....      LDR.W    R0,??DataTable1_20
   \   000002AA   0x.... 0x....      BL       _ZN12MPU6000_TypeC1Ev
   \   000002AE   0x2001             MOVS     R0,#+1
   \   000002B0   0x.... 0x....      LDR.W    R1,??DataTable1_19
   \   000002B4   0x7008             STRB     R0,[R1, #+0]
     95            if(!(MPU6000_Raw == MPU6000_0))
   \                     ??pit_isr_19: (+1)
   \   000002B6   0x.... 0x....      LDR.W    R1,??DataTable1_20
   \   000002BA   0x.... 0x....      LDR.W    R0,??DataTable1_16
   \   000002BE   0x.... 0x....      BL       _ZN12MPU6000_TypeeqERS_
   \   000002C2   0xB2C0             UXTB     R0,R0            ;; ZeroExt  R0,R0,#+24,#+24
   \   000002C4   0x2800             CMP      R0,#+0
   \   000002C6   0xD10B             BNE.N    ??pit_isr_20
     96            {
     97              MPU6000_0 = MPU6000_Raw;
   \   000002C8   0x.... 0x....      LDR.W    R1,??DataTable1_16
   \   000002CC   0x.... 0x....      LDR.W    R0,??DataTable1_20
   \   000002D0   0x.... 0x....      BL       _ZN12MPU6000_TypeaSERS_
     98              MPU6000_changeTime = t;
   \   000002D4   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   000002D8   0x6800             LDR      R0,[R0, #+0]
   \   000002DA   0x.... 0x....      LDR.W    R1,??DataTable1_21
   \   000002DE   0x6008             STR      R0,[R1, #+0]
     99            }
    100          
    101            if(t - MPU6000_changeTime < 100)
   \                     ??pit_isr_20: (+1)
   \   000002E0   0x.... 0x....      LDR.W    R0,??DataTable1_1
   \   000002E4   0x6801             LDR      R1,[R0, #+0]
   \   000002E6   0x.... 0x....      LDR.W    R0,??DataTable1_21
   \   000002EA   0x6800             LDR      R0,[R0, #+0]
   \   000002EC   0x1A09             SUBS     R1,R1,R0
   \   000002EE   0x2964             CMP      R1,#+100
   \   000002F0   0xDA06             BGE.N    ??pit_isr_21
    102            {
    103              MPU6000.valid = true;
   \   000002F2   0x2001             MOVS     R0,#+1
   \   000002F4   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   000002F8   0x7388             STRB     R0,[R1, #+14]
   \   000002FA   0xE005             B.N      ??pit_isr_22
   \                     ??pit_isr_11:
   \   000002FC   0x40A33333         DC32     0x40a33333
    104            }
    105            else
    106            {
    107              MPU6000.valid = false;
   \                     ??pit_isr_21: (+1)
   \   00000300   0x2000             MOVS     R0,#+0
   \   00000302   0x.... 0x....      LDR.W    R1,??DataTable1_7
   \   00000306   0x7388             STRB     R0,[R1, #+14]
    108            }
    109            
    110            //  MadgwickAHRSupdateIMU(MPU6000.gyro_x/57.3,MPU6000.gyro_y/57.3,MPU6000.gyro_z/57.3,
    111            //                       MPU6000.accel_x,MPU6000.accel_y,MPU6000.accel_z);
    112            
    113            
    114          #if defined USE_OLD_DATA
    115            if(t > 3000 && t < 3000 + H_NUM * 2)
    116            {
    117              EKF_AHRS->ax = H_accel_x[(t-3000)/2];
    118              EKF_AHRS->ay = H_accel_y[(t-3000)/2];
    119              EKF_AHRS->az = H_accel_z[(t-3000)/2];
    120              EKF_AHRS->Wx = H_gyro_x[(t-3000)/2];
    121              EKF_AHRS->Wy = H_gyro_y[(t-3000)/2];
    122              EKF_AHRS->Wz = H_gyro_z[(t-3000)/2];
    123              roll = H_roll[(t-3000)/2];
    124              pitch = H_pitch[(t-3000)/2];
    125              yaw = H_yaw[(t-3000)/2];
    126              EKF_AHRS->EKF(); 
    127            }
    128          #else
    129            
    130            float norm_m, m1, m2, m3, norm_a;
    131            arm_sqrt_f32(Compass.X * Compass.X + Compass.Y * Compass.Y, &norm_m); // + Compass.Z * Compass.Z
   \                     ??pit_isr_22: (+1)
   \   00000308   0xA801             ADD      R0,SP,#+4
   \   0000030A   0x.... 0x....      LDR.W    R1,??DataTable1_22
   \   0000030E   0x680A             LDR      R2,[R1, #+0]
   \   00000310   0x.... 0x....      LDR.W    R1,??DataTable1_22
   \   00000314   0x680B             LDR      R3,[R1, #+0]
   \   00000316   0x.... 0x....      LDR.W    R1,??DataTable1_22
   \   0000031A   0x684C             LDR      R4,[R1, #+4]
   \   0000031C   0x.... 0x....      LDR.W    R1,??DataTable1_22
   \   00000320   0x6849             LDR      R1,[R1, #+4]
   \   00000322   0x434C             MULS     R4,R1,R4
   \   00000324   0xFB03 0x4202      MLA      R2,R3,R2,R4
   \   00000328   0xEE00 0x2A10      VMOV     S0,R2
   \   0000032C   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000330   0x.... 0x....      BL       _ZN26_INTERNAL_5_isr_c_48df0d0212arm_sqrt_f32EfPf
    132            
    133            if(norm_m!=0)
   \   00000334   0xED9D 0x0A01      VLDR     S0,[SP, #+4]
   \   00000338   0xEEB5 0x0A40      VCMP.F32 S0,#0.0
   \   0000033C   0xEEF1 0xFA10      FMSTAT   
   \   00000340   0xD023             BEQ.N    ??pit_isr_23
    134            {
    135              m1 = Compass.X / norm_m;
   \   00000342   0x.... 0x....      LDR.W    R0,??DataTable1_22
   \   00000346   0xED90 0x0A00      VLDR     S0,[R0, #0]
   \   0000034A   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000034E   0xEDDD 0x0A01      VLDR     S1,[SP, #+4]
   \   00000352   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   00000356   0xEEB0 0x8A40      VMOV.F32 S16,S0
    136              m2 = Compass.Y / norm_m;
   \   0000035A   0x.... 0x....      LDR.W    R0,??DataTable1_22
   \   0000035E   0xED90 0x0A01      VLDR     S0,[R0, #+4]
   \   00000362   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   00000366   0xEDDD 0x0A01      VLDR     S1,[SP, #+4]
   \   0000036A   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   0000036E   0xEEF0 0x8A40      VMOV.F32 S17,S0
    137              m3 = Compass.Z / norm_m;
   \   00000372   0x.... 0x....      LDR.W    R0,??DataTable1_22
   \   00000376   0xED90 0x0A02      VLDR     S0,[R0, #+8]
   \   0000037A   0xEEB8 0x0AC0      VCVT.F32.S32 S0,S0
   \   0000037E   0xEDDD 0x0A01      VLDR     S1,[SP, #+4]
   \   00000382   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   00000386   0xEEB0 0x9A40      VMOV.F32 S18,S0
    138            }
    139            
    140            arm_sqrt_f32(MPU6000.accel_x*MPU6000.accel_x + MPU6000.accel_y*MPU6000.accel_y 
    141                         + MPU6000.accel_z*MPU6000.accel_z, &norm_a);
   \                     ??pit_isr_23: (+1)
   \   0000038A   0x4668             MOV      R0,SP
   \   0000038C   0x....             LDR.N    R1,??DataTable1_7
   \   0000038E   0xED91 0x0A0C      VLDR     S0,[R1, #+48]
   \   00000392   0x....             LDR.N    R1,??DataTable1_7
   \   00000394   0xEDD1 0x0A0C      VLDR     S1,[R1, #+48]
   \   00000398   0xEE20 0x0A20      VMUL.F32 S0,S0,S1
   \   0000039C   0x....             LDR.N    R1,??DataTable1_7
   \   0000039E   0xEDD1 0x0A0D      VLDR     S1,[R1, #+52]
   \   000003A2   0x....             LDR.N    R1,??DataTable1_7
   \   000003A4   0xED91 0x1A0D      VLDR     S2,[R1, #+52]
   \   000003A8   0xEE00 0x0A81      VMLA.F32 S0,S1,S2
   \   000003AC   0x....             LDR.N    R1,??DataTable1_7
   \   000003AE   0xEDD1 0x0A0E      VLDR     S1,[R1, #+56]
   \   000003B2   0x....             LDR.N    R1,??DataTable1_7
   \   000003B4   0xED91 0x1A0E      VLDR     S2,[R1, #+56]
   \   000003B8   0xEE00 0x0A81      VMLA.F32 S0,S1,S2
   \   000003BC   0x.... 0x....      BL       _ZN26_INTERNAL_5_isr_c_48df0d0212arm_sqrt_f32EfPf
    142            if(norm_a < 0.00000001)
   \   000003C0   0xED9D 0x0A00      VLDR     S0,[SP, #+0]
   \   000003C4   0xEDDF 0x0AA9      VLDR.W   S1,??pit_isr_24  ;; 0x322bcc78
   \   000003C8   0xEEB4 0x0A60      VCMP.F32 S0,S1
   \   000003CC   0xEEF1 0xFA10      FMSTAT   
   \   000003D0   0xD502             BPL.N    ??pit_isr_25
    143            {
    144              norm_a = 1;
   \   000003D2   0xF05F 0x507E      MOVS     R0,#+1065353216
   \   000003D6   0x9000             STR      R0,[SP, #+0]
    145            }
    146            EKF_AHRS->ax = MPU6000.accel_x/norm_a;
   \                     ??pit_isr_25: (+1)
   \   000003D8   0x....             LDR.N    R0,??DataTable1_7
   \   000003DA   0xED90 0x0A0C      VLDR     S0,[R0, #+48]
   \   000003DE   0xEDDD 0x0A00      VLDR     S1,[SP, #+0]
   \   000003E2   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   000003E6   0x....             LDR.N    R0,??DataTable1_23
   \   000003E8   0x6800             LDR      R0,[R0, #+0]
   \   000003EA   0xED80 0x0A08      VSTR     S0,[R0, #+32]
    147            EKF_AHRS->ay = MPU6000.accel_y/norm_a;
   \   000003EE   0x....             LDR.N    R0,??DataTable1_7
   \   000003F0   0xED90 0x0A0D      VLDR     S0,[R0, #+52]
   \   000003F4   0xEDDD 0x0A00      VLDR     S1,[SP, #+0]
   \   000003F8   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   000003FC   0x....             LDR.N    R0,??DataTable1_23
   \   000003FE   0x6800             LDR      R0,[R0, #+0]
   \   00000400   0xED80 0x0A09      VSTR     S0,[R0, #+36]
    148            EKF_AHRS->az = MPU6000.accel_z/norm_a;
   \   00000404   0x....             LDR.N    R0,??DataTable1_7
   \   00000406   0xED90 0x0A0E      VLDR     S0,[R0, #+56]
   \   0000040A   0xEDDD 0x0A00      VLDR     S1,[SP, #+0]
   \   0000040E   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   00000412   0x....             LDR.N    R0,??DataTable1_23
   \   00000414   0x6800             LDR      R0,[R0, #+0]
   \   00000416   0xED80 0x0A0A      VSTR     S0,[R0, #+40]
    149          #if THIS_PLANE == QAV250
    150            EKF_AHRS->Wx = MPU6000.gyro_x/57.29577951;
    151            EKF_AHRS->Wy = MPU6000.gyro_y/57.29577951+0.007;
    152            EKF_AHRS->Wz = MPU6000.gyro_z/57.29577951+0.005;
    153          #else
    154            EKF_AHRS->Wx = MPU6000.gyro_x/57.29577951;
   \   0000041A   0x....             LDR.N    R0,??DataTable1_7
   \   0000041C   0x6BC0             LDR      R0,[R0, #+60]
   \   0000041E   0x.... 0x....      BL       __aeabi_f2d
   \   00000422   0x....             LDR.N    R2,??DataTable1_24  ;; 0x1a5d2372
   \   00000424   0x....             LDR.N    R3,??DataTable1_25  ;; 0x404ca5dc
   \   00000426   0x.... 0x....      BL       __aeabi_ddiv
   \   0000042A   0x.... 0x....      BL       __aeabi_d2f
   \   0000042E   0x....             LDR.N    R1,??DataTable1_23
   \   00000430   0x6809             LDR      R1,[R1, #+0]
   \   00000432   0x6148             STR      R0,[R1, #+20]
    155            EKF_AHRS->Wy = MPU6000.gyro_y/57.29577951;
   \   00000434   0x....             LDR.N    R0,??DataTable1_7
   \   00000436   0x6C00             LDR      R0,[R0, #+64]
   \   00000438   0x.... 0x....      BL       __aeabi_f2d
   \   0000043C   0x....             LDR.N    R2,??DataTable1_24  ;; 0x1a5d2372
   \   0000043E   0x....             LDR.N    R3,??DataTable1_25  ;; 0x404ca5dc
   \   00000440   0x.... 0x....      BL       __aeabi_ddiv
   \   00000444   0x.... 0x....      BL       __aeabi_d2f
   \   00000448   0x....             LDR.N    R1,??DataTable1_23
   \   0000044A   0x6809             LDR      R1,[R1, #+0]
   \   0000044C   0x6188             STR      R0,[R1, #+24]
    156            EKF_AHRS->Wz = MPU6000.gyro_z/57.29577951;
   \   0000044E   0x....             LDR.N    R0,??DataTable1_7
   \   00000450   0x6C40             LDR      R0,[R0, #+68]
   \   00000452   0x.... 0x....      BL       __aeabi_f2d
   \   00000456   0x....             LDR.N    R2,??DataTable1_24  ;; 0x1a5d2372
   \   00000458   0x....             LDR.N    R3,??DataTable1_25  ;; 0x404ca5dc
   \   0000045A   0x.... 0x....      BL       __aeabi_ddiv
   \   0000045E   0x.... 0x....      BL       __aeabi_d2f
   \   00000462   0x....             LDR.N    R1,??DataTable1_23
   \   00000464   0x6809             LDR      R1,[R1, #+0]
   \   00000466   0x61C8             STR      R0,[R1, #+28]
    157          #endif
    158            EKF_AHRS->mx = m1;
   \   00000468   0x....             LDR.N    R0,??DataTable1_23
   \   0000046A   0x6800             LDR      R0,[R0, #+0]
   \   0000046C   0xED80 0x8A0B      VSTR     S16,[R0, #+44]
    159            EKF_AHRS->my = m2;
   \   00000470   0x....             LDR.N    R0,??DataTable1_23
   \   00000472   0x6800             LDR      R0,[R0, #+0]
   \   00000474   0xEDC0 0x8A0C      VSTR     S17,[R0, #+48]
    160            EKF_AHRS->mz = m3;
   \   00000478   0x....             LDR.N    R0,??DataTable1_23
   \   0000047A   0x6800             LDR      R0,[R0, #+0]
   \   0000047C   0xED80 0x9A0D      VSTR     S18,[R0, #+52]
    161            
    162            EKF_AHRS1->ax = MPU6000.accel_x/norm_a;
   \   00000480   0x....             LDR.N    R0,??DataTable1_7
   \   00000482   0xED90 0x0A0C      VLDR     S0,[R0, #+48]
   \   00000486   0xEDDD 0x0A00      VLDR     S1,[SP, #+0]
   \   0000048A   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   0000048E   0x....             LDR.N    R0,??DataTable1_26
   \   00000490   0x6800             LDR      R0,[R0, #+0]
   \   00000492   0xED80 0x0A08      VSTR     S0,[R0, #+32]
    163            EKF_AHRS1->ay = MPU6000.accel_y/norm_a;
   \   00000496   0x....             LDR.N    R0,??DataTable1_7
   \   00000498   0xED90 0x0A0D      VLDR     S0,[R0, #+52]
   \   0000049C   0xEDDD 0x0A00      VLDR     S1,[SP, #+0]
   \   000004A0   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   000004A4   0x....             LDR.N    R0,??DataTable1_26
   \   000004A6   0x6800             LDR      R0,[R0, #+0]
   \   000004A8   0xED80 0x0A09      VSTR     S0,[R0, #+36]
    164            EKF_AHRS1->az = MPU6000.accel_z/norm_a;
   \   000004AC   0x....             LDR.N    R0,??DataTable1_7
   \   000004AE   0xED90 0x0A0E      VLDR     S0,[R0, #+56]
   \   000004B2   0xEDDD 0x0A00      VLDR     S1,[SP, #+0]
   \   000004B6   0xEE80 0x0A20      VDIV.F32 S0,S0,S1
   \   000004BA   0x....             LDR.N    R0,??DataTable1_26
   \   000004BC   0x6800             LDR      R0,[R0, #+0]
   \   000004BE   0xED80 0x0A0A      VSTR     S0,[R0, #+40]
    165          #if THIS_PLANE == QAV250
    166            EKF_AHRS1->Wx = MPU6000.gyro_x/57.29577951;
    167            EKF_AHRS1->Wy = MPU6000.gyro_y/57.29577951+0.007;
    168            EKF_AHRS1->Wz = MPU6000.gyro_z/57.29577951+0.005;
    169          #else
    170            EKF_AHRS1->Wx = MPU6000.gyro_x/57.29577951;
   \   000004C2   0x....             LDR.N    R0,??DataTable1_7
   \   000004C4   0x6BC0             LDR      R0,[R0, #+60]
   \   000004C6   0x.... 0x....      BL       __aeabi_f2d
   \   000004CA   0x....             LDR.N    R2,??DataTable1_24  ;; 0x1a5d2372
   \   000004CC   0x....             LDR.N    R3,??DataTable1_25  ;; 0x404ca5dc
   \   000004CE   0x.... 0x....      BL       __aeabi_ddiv
   \   000004D2   0x.... 0x....      BL       __aeabi_d2f
   \   000004D6   0x....             LDR.N    R1,??DataTable1_26
   \   000004D8   0x6809             LDR      R1,[R1, #+0]
   \   000004DA   0x6148             STR      R0,[R1, #+20]
    171            EKF_AHRS1->Wy = MPU6000.gyro_y/57.29577951;
   \   000004DC   0x....             LDR.N    R0,??DataTable1_7
   \   000004DE   0x6C00             LDR      R0,[R0, #+64]
   \   000004E0   0x.... 0x....      BL       __aeabi_f2d
   \   000004E4   0x....             LDR.N    R2,??DataTable1_24  ;; 0x1a5d2372
   \   000004E6   0x....             LDR.N    R3,??DataTable1_25  ;; 0x404ca5dc
   \   000004E8   0x.... 0x....      BL       __aeabi_ddiv
   \   000004EC   0x.... 0x....      BL       __aeabi_d2f
   \   000004F0   0x....             LDR.N    R1,??DataTable1_26
   \   000004F2   0x6809             LDR      R1,[R1, #+0]
   \   000004F4   0x6188             STR      R0,[R1, #+24]
    172            EKF_AHRS1->Wz = MPU6000.gyro_z/57.29577951;
   \   000004F6   0x....             LDR.N    R0,??DataTable1_7
   \   000004F8   0x6C40             LDR      R0,[R0, #+68]
   \   000004FA   0x.... 0x....      BL       __aeabi_f2d
   \   000004FE   0x....             LDR.N    R2,??DataTable1_24  ;; 0x1a5d2372
   \   00000500   0x....             LDR.N    R3,??DataTable1_25  ;; 0x404ca5dc
   \   00000502   0x.... 0x....      BL       __aeabi_ddiv
   \   00000506   0x.... 0x....      BL       __aeabi_d2f
   \   0000050A   0x....             LDR.N    R1,??DataTable1_26
   \   0000050C   0x6809             LDR      R1,[R1, #+0]
   \   0000050E   0x61C8             STR      R0,[R1, #+28]
    173          #endif
    174            EKF_AHRS1->mx = m1 / arm_cos_f32(pitch1 / 57.3);
   \   00000510   0x....             LDR.N    R0,??DataTable1_27
   \   00000512   0x6800             LDR      R0,[R0, #+0]
   \   00000514   0x.... 0x....      BL       __aeabi_f2d
   \   00000518   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   0000051C   0x....             LDR.N    R3,??DataTable1_28  ;; 0x404ca666
   \   0000051E   0x.... 0x....      BL       __aeabi_ddiv
   \   00000522   0x.... 0x....      BL       __aeabi_d2f
   \   00000526   0xEE00 0x0A10      VMOV     S0,R0
   \   0000052A   0x.... 0x....      BL       arm_cos_f32
   \   0000052E   0xEE88 0x0A00      VDIV.F32 S0,S16,S0
   \   00000532   0x....             LDR.N    R0,??DataTable1_26
   \   00000534   0x6800             LDR      R0,[R0, #+0]
   \   00000536   0xED80 0x0A0B      VSTR     S0,[R0, #+44]
    175            EKF_AHRS1->my = m2 / arm_cos_f32(roll1 / 57.3);
   \   0000053A   0x....             LDR.N    R0,??DataTable1_29
   \   0000053C   0x6800             LDR      R0,[R0, #+0]
   \   0000053E   0x.... 0x....      BL       __aeabi_f2d
   \   00000542   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   00000546   0x....             LDR.N    R3,??DataTable1_28  ;; 0x404ca666
   \   00000548   0x.... 0x....      BL       __aeabi_ddiv
   \   0000054C   0x.... 0x....      BL       __aeabi_d2f
   \   00000550   0xEE00 0x0A10      VMOV     S0,R0
   \   00000554   0x.... 0x....      BL       arm_cos_f32
   \   00000558   0xEE88 0x0A80      VDIV.F32 S0,S17,S0
   \   0000055C   0x....             LDR.N    R0,??DataTable1_26
   \   0000055E   0x6800             LDR      R0,[R0, #+0]
   \   00000560   0xED80 0x0A0C      VSTR     S0,[R0, #+48]
    176            EKF_AHRS1->mz = 0;
   \   00000564   0x....             LDR.N    R0,??DataTable1_26
   \   00000566   0x6800             LDR      R0,[R0, #+0]
   \   00000568   0x2100             MOVS     R1,#+0
   \   0000056A   0x6341             STR      R1,[R0, #+52]
    177            
    178          
    179          #endif
    180            
    181            //    MadgwickAHRSupdate(         MPU6000.gyro_x/57.3,MPU6000.gyro_y/57.3,MPU6000.gyro_z/57.3,
    182            //                                MPU6000.accel_x,MPU6000.accel_y,MPU6000.accel_z,
    183            //                                -Compass.Y/57.3, Compass.X/57.3,Compass.Z/57.3
    184            //                      );
    185            
    186            //q2Eular();  //MadgwickAHRS
    187            
    188            //Ultrasound->PIT_isr();
    189            
    190            EKF_AHRS->EKF(); 
   \   0000056C   0x....             LDR.N    R0,??DataTable1_23
   \   0000056E   0x6800             LDR      R0,[R0, #+0]
   \   00000570   0x.... 0x....      BL       _ZN9CEKF_AHRS3EKFEv
    191            EKF_AHRS1->EKF();
   \   00000574   0x....             LDR.N    R0,??DataTable1_26
   \   00000576   0x6800             LDR      R0,[R0, #+0]
   \   00000578   0x.... 0x....      BL       _ZN9CEKF_AHRS3EKFEv
    192            
    193            yaw3 = 57.3 * atan2f(m2 / arm_cos_f32(pitch1 / 57.3), m1 / arm_cos_f32(roll1 / 57.3));
   \   0000057C   0x....             LDR.N    R0,??DataTable1_27
   \   0000057E   0x6800             LDR      R0,[R0, #+0]
   \   00000580   0x.... 0x....      BL       __aeabi_f2d
   \   00000584   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   00000588   0x....             LDR.N    R3,??DataTable1_28  ;; 0x404ca666
   \   0000058A   0x.... 0x....      BL       __aeabi_ddiv
   \   0000058E   0x.... 0x....      BL       __aeabi_d2f
   \   00000592   0xEE00 0x0A10      VMOV     S0,R0
   \   00000596   0x.... 0x....      BL       arm_cos_f32
   \   0000059A   0xEEF0 0x9A40      VMOV.F32 S19,S0
   \   0000059E   0x....             LDR.N    R0,??DataTable1_29
   \   000005A0   0x6800             LDR      R0,[R0, #+0]
   \   000005A2   0x.... 0x....      BL       __aeabi_f2d
   \   000005A6   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   000005AA   0x....             LDR.N    R3,??DataTable1_28  ;; 0x404ca666
   \   000005AC   0x.... 0x....      BL       __aeabi_ddiv
   \   000005B0   0x.... 0x....      BL       __aeabi_d2f
   \   000005B4   0xEE00 0x0A10      VMOV     S0,R0
   \   000005B8   0x.... 0x....      BL       arm_cos_f32
   \   000005BC   0xEEC8 0x0A00      VDIV.F32 S1,S16,S0
   \   000005C0   0xEE88 0x0AA9      VDIV.F32 S0,S17,S19
   \   000005C4   0x.... 0x....      BL       atan2f
   \   000005C8   0xEE10 0x0A10      VMOV     R0,S0
   \   000005CC   0x.... 0x....      BL       __aeabi_f2d
   \   000005D0   0xF05F 0x3266      MOVS     R2,#+1717986918
   \   000005D4   0x....             LDR.N    R3,??DataTable1_28  ;; 0x404ca666
   \   000005D6   0x.... 0x....      BL       __aeabi_dmul
   \   000005DA   0x.... 0x....      BL       __aeabi_d2f
   \   000005DE   0x....             LDR.N    R1,??DataTable1_30
   \   000005E0   0x6008             STR      R0,[R1, #+0]
    194            if(t < 5000)
   \   000005E2   0x....             LDR.N    R0,??DataTable1_1
   \   000005E4   0x6800             LDR      R0,[R0, #+0]
   \   000005E6   0xF241 0x3188      MOVW     R1,#+5000
   \   000005EA   0x4288             CMP      R0,R1
   \   000005EC   0xDA02             BGE.N    ??pit_isr_26
    195            {
    196              fan_ini();
   \   000005EE   0x.... 0x....      BL       _Z7fan_iniv
   \   000005F2   0xE032             B.N      ??pit_isr_27
    197          //    MS5611_init();
    198            }
    199            else if(t == 5000)
   \                     ??pit_isr_26: (+1)
   \   000005F4   0x....             LDR.N    R0,??DataTable1_1
   \   000005F6   0x6800             LDR      R0,[R0, #+0]
   \   000005F8   0xF241 0x3188      MOVW     R1,#+5000
   \   000005FC   0x4288             CMP      R0,R1
   \   000005FE   0xD114             BNE.N    ??pit_isr_28
    200            {
    201              AHRS0.angle_x = AHRS.angle_x;
   \   00000600   0x....             LDR.N    R0,??DataTable1_31
   \   00000602   0x....             LDR.N    R1,??DataTable1_32
   \   00000604   0x6989             LDR      R1,[R1, #+24]
   \   00000606   0x6181             STR      R1,[R0, #+24]
    202              AHRS0.angle_y = AHRS.angle_y;
   \   00000608   0x....             LDR.N    R0,??DataTable1_31
   \   0000060A   0x....             LDR.N    R1,??DataTable1_32
   \   0000060C   0x69C9             LDR      R1,[R1, #+28]
   \   0000060E   0x61C1             STR      R1,[R0, #+28]
    203              AHRS0.angle_z = AHRS.angle_z;
   \   00000610   0x....             LDR.N    R0,??DataTable1_31
   \   00000612   0x....             LDR.N    R1,??DataTable1_32
   \   00000614   0x6A09             LDR      R1,[R1, #+32]
   \   00000616   0x6201             STR      R1,[R0, #+32]
    204              yaw_init = yaw4;
   \   00000618   0x....             LDR.N    R0,??DataTable1_33
   \   0000061A   0x....             LDR.N    R1,??DataTable1_34
   \   0000061C   0x6809             LDR      R1,[R1, #+0]
   \   0000061E   0x6001             STR      R1,[R0, #+0]
    205              yaw_init1 = yaw2;
   \   00000620   0x....             LDR.N    R0,??DataTable1_35
   \   00000622   0x....             LDR.N    R1,??DataTable1_36
   \   00000624   0x6809             LDR      R1,[R1, #+0]
   \   00000626   0x6001             STR      R1,[R0, #+0]
   \   00000628   0xE017             B.N      ??pit_isr_27
    206            }
    207            else
    208            {
    209              videoStation->sendPackage();
   \                     ??pit_isr_28: (+1)
   \   0000062A   0x....             LDR.N    R0,??DataTable1_9
   \   0000062C   0x6800             LDR      R0,[R0, #+0]
   \   0000062E   0x.... 0x....      BL       _ZN13CVideoStation11sendPackageEv
    210              flightMode->update();
   \   00000632   0x....             LDR.N    R0,??DataTable1_37
   \   00000634   0x6800             LDR      R0,[R0, #+0]
   \   00000636   0x.... 0x....      BL       _ZN11CFlightMode6updateEv
    211              Navigation->update();
   \   0000063A   0x....             LDR.N    R0,??DataTable1_38
   \   0000063C   0x6800             LDR      R0,[R0, #+0]
   \   0000063E   0x.... 0x....      BL       _ZN11CNavigation6updateEv
    212              control_position();
   \   00000642   0x.... 0x....      BL       _Z16control_positionv
    213              control_angle();
   \   00000646   0x.... 0x....      BL       _Z13control_anglev
    214              control_gyro();
   \   0000064A   0x.... 0x....      BL       _Z12control_gyrov
    215              waterGun->update();
   \   0000064E   0x....             LDR.N    R0,??DataTable1_39
   \   00000650   0x6800             LDR      R0,[R0, #+0]
   \   00000652   0x.... 0x....      BL       _ZN9CWaterGun6updateEv
    216              rotor_out();
   \   00000656   0x.... 0x....      BL       _Z9rotor_outv
    217            }
    218            GPIO_Output_b(PTB,23,1);
   \                     ??pit_isr_27: (+1)
   \   0000065A   0x2201             MOVS     R2,#+1
   \   0000065C   0x2117             MOVS     R1,#+23
   \   0000065E   0x....             LDR.N    R0,??DataTable1  ;; 0x400ff040
   \   00000660   0x.... 0x....      BL       GPIO_Output_b
    219            
    220          //  MS5611_getTemperature(CMD_CONVERT_D2_OSR4096);
    221          //  MS5611_getPressure(CMD_CONVERT_D1_OSR4096);
    222          //  Baro_hight = get_altitude(); 
    223          }
   \                     ??pit_isr_29: (+1)
   \   00000664   0xB036             ADD      SP,SP,#+216
   \   00000666   0xECBD 0x8B04      VPOP     {D8-D9}
   \   0000066A   0xBD70             POP      {R4-R6,PC}       ;; return
   \                     ??pit_isr_24:
   \   0000066C   0x322BCC78         DC32     0x322bcc78

   \                                 In section .bss, align 4
   \                     `pit_isr()::MPU6000_changeTime`:
   \   00000000                      DS8 4

   \                                 In section .bss, align 4
   \                     `pit_isr()::MPU6000_0`:
   \   00000000                      DS8 96

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1:
   \   00000000   0x400FF040         DC32     0x400ff040

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_1:
   \   00000000   0x........         DC32     t

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_2:
   \   00000000   0x........         DC32     RemoteHub

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_3:
   \   00000000   0x40009030         DC32     0x40009030

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_4:
   \   00000000   0x........         DC32     EVB+0x20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_5:
   \   00000000   0x........         DC32     error_evb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_6:
   \   00000000   0x........         DC32     EVB

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_7:
   \   00000000   0x........         DC32     MPU6000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_8:
   \   00000000   0x400FF000         DC32     0x400ff000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_9:
   \   00000000   0x........         DC32     videoStation

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_10:
   \   00000000   0x........         DC32     GPS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_11:
   \   00000000   0x........         DC32     UltrasoundUART

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_12:
   \   00000000   0x400BB000         DC32     0x400bb000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_13:
   \   00000000   0x........         DC32     powerVoltage_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_14:
   \   00000000   0x........         DC32     powerVoltage_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_15:
   \   00000000   0x........         DC32     powerVoltage_3v3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_16:
   \   00000000   0x........         DC32     MPU6000_Raw

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_17:
   \   00000000   0x3FE66666         DC32     0x3fe66666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_18:
   \   00000000   0x3FD33333         DC32     0x3fd33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_19:
   \   00000000   0x........         DC32     `pit_isr()::static guard for MPU6000_0`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_20:
   \   00000000   0x........         DC32     `pit_isr()::MPU6000_0`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_21:
   \   00000000   0x........         DC32     `pit_isr()::MPU6000_changeTime`

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_22:
   \   00000000   0x........         DC32     Compass

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_23:
   \   00000000   0x........         DC32     EKF_AHRS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_24:
   \   00000000   0x1A5D2372         DC32     0x1a5d2372

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_25:
   \   00000000   0x404CA5DC         DC32     0x404ca5dc

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_26:
   \   00000000   0x........         DC32     EKF_AHRS1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_27:
   \   00000000   0x........         DC32     pitch1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_28:
   \   00000000   0x404CA666         DC32     0x404ca666

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_29:
   \   00000000   0x........         DC32     roll1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_30:
   \   00000000   0x........         DC32     yaw3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_31:
   \   00000000   0x........         DC32     AHRS0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_32:
   \   00000000   0x........         DC32     AHRS

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_33:
   \   00000000   0x........         DC32     yaw_init

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_34:
   \   00000000   0x........         DC32     yaw4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_35:
   \   00000000   0x........         DC32     yaw_init1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_36:
   \   00000000   0x........         DC32     yaw2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_37:
   \   00000000   0x........         DC32     flightMode

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_38:
   \   00000000   0x........         DC32     Navigation

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable1_39:
   \   00000000   0x........         DC32     waterGun
    224          
    225          
    226          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       4   GPIO_Output_b
       0   MPU6000_Type::MPU6000_Type()
       0   arm_sqrt_f32(float, float *)
     248   pit_isr()
       248   -> ADC_Get
       248   -> CEKF_AHRS::EKF()
       248   -> CFlightMode::update()
       248   -> CGPS::updateUart()
       248   -> CNavigation::update()
       248   -> CRemoteHub::updateUart()
       248   -> CUltrasoundUART::update()
       248   -> CVideoStation::sendPackage()
       248   -> CVideoStation::updateUart()
       248   -> CWaterGun::update()
       248   -> EVB_DMA_Receive()
       248   -> EVB_TimerUpdate()
       248   -> GPIO_Output_b
       248   -> MPU6000_DAQ()
       248   -> MPU6000_Type::MPU6000_Type()
       248   -> MPU6000_Type::error()
       248   -> MPU6000_Type::isInRange(float, float, float)
       248   -> MPU6000_Type::isNormal()
       248   -> MPU6000_Type::operator-(MPU6000_Type &)
       248   -> MPU6000_Type::operator=(MPU6000_Type &)
       248   -> MPU6000_Type::operator==(MPU6000_Type &)
       248   -> __aeabi_d2f
       248   -> __aeabi_dadd
       248   -> __aeabi_ddiv
       248   -> __aeabi_dmul
       248   -> __aeabi_f2d
       248   -> __aeabi_memcpy4
       248   -> arm_cos_f32
       248   -> arm_sqrt_f32(float, float *)
       248   -> atan2f
       248   -> control_angle()
       248   -> control_gyro()
       248   -> control_position()
       248   -> fan_ini()
       248   -> hmc5983_DAQ()
       248   -> hmc5983_StartMea()
       248   -> rotor_out()


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable1
       4  ??DataTable1_1
       4  ??DataTable1_10
       4  ??DataTable1_11
       4  ??DataTable1_12
       4  ??DataTable1_13
       4  ??DataTable1_14
       4  ??DataTable1_15
       4  ??DataTable1_16
       4  ??DataTable1_17
       4  ??DataTable1_18
       4  ??DataTable1_19
       4  ??DataTable1_2
       4  ??DataTable1_20
       4  ??DataTable1_21
       4  ??DataTable1_22
       4  ??DataTable1_23
       4  ??DataTable1_24
       4  ??DataTable1_25
       4  ??DataTable1_26
       4  ??DataTable1_27
       4  ??DataTable1_28
       4  ??DataTable1_29
       4  ??DataTable1_3
       4  ??DataTable1_30
       4  ??DataTable1_31
       4  ??DataTable1_32
       4  ??DataTable1_33
       4  ??DataTable1_34
       4  ??DataTable1_35
       4  ??DataTable1_36
       4  ??DataTable1_37
       4  ??DataTable1_38
       4  ??DataTable1_39
       4  ??DataTable1_4
       4  ??DataTable1_5
       4  ??DataTable1_6
       4  ??DataTable1_7
       4  ??DataTable1_8
       4  ??DataTable1_9
      24  GPIO_Output_b
      96  MPU6000_0
      40  MPU6000_Type::MPU6000_Type()
       4  MPU6000_changeTime
      34  arm_sqrt_f32(float, float *)
       4  error_6000
       4  error_evb
    1648  pit_isr()
       4  yaw_init
       4  yaw_init1
       9  -- Other

 
     8 bytes in section .ARM.exidx
   117 bytes in section .bss
 1 906 bytes in section .text
 
 1 842 bytes of CODE  memory (+ 64 bytes shared)
     8 bytes of CONST memory
   117 bytes of DATA  memory

Errors: none
Warnings: none
